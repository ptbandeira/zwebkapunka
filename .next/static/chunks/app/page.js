/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _inheritsLoose)\n/* harmony export */ });\n/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\");\n\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(t, o);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlEO0FBQ2pEO0FBQ0EseUVBQXlFLDhEQUFjO0FBQ3ZGIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy96d2Via2FwdW5rYS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vc2V0UHJvdG90eXBlT2YuanNcIjtcbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHQsIG8pIHtcbiAgdC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKG8ucHJvdG90eXBlKSwgdC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSB0LCBzZXRQcm90b3R5cGVPZih0LCBvKTtcbn1cbmV4cG9ydCB7IF9pbmhlcml0c0xvb3NlIGFzIGRlZmF1bHQgfTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _setPrototypeOf)\n/* harmony export */ });\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy96d2Via2FwdW5rYS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHtcbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkge1xuICAgIHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7XG4gIH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTtcbn1cbmV4cG9ydCB7IF9zZXRQcm90b3R5cGVPZiBhcyBkZWZhdWx0IH07Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@builder.io/react/dist/builder-react.es5.js":
/*!******************************************************************!*\
  !*** ./node_modules/@builder.io/react/dist/builder-react.es5.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Builder: () => (/* reexport safe */ _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder),\n/* harmony export */   BuilderAsyncRequestsContext: () => (/* binding */ BuilderAsyncRequestsContext),\n/* harmony export */   BuilderBlock: () => (/* binding */ BuilderBlock),\n/* harmony export */   BuilderBlockComponent: () => (/* binding */ BuilderBlock$1),\n/* harmony export */   BuilderBlocks: () => (/* binding */ BuilderBlocks),\n/* harmony export */   BuilderComponent: () => (/* binding */ BuilderComponent),\n/* harmony export */   BuilderContent: () => (/* binding */ BuilderContent),\n/* harmony export */   BuilderMetaContext: () => (/* binding */ BuilderMetaContext),\n/* harmony export */   BuilderPage: () => (/* binding */ BuilderComponent),\n/* harmony export */   BuilderStoreContext: () => (/* binding */ BuilderStoreContext),\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   Columns: () => (/* binding */ Columns),\n/* harmony export */   Content: () => (/* binding */ BuilderComponent),\n/* harmony export */   CustomCode: () => (/* binding */ CustomCode),\n/* harmony export */   Dropzone: () => (/* binding */ Slot),\n/* harmony export */   Embed: () => (/* binding */ Embed),\n/* harmony export */   Form: () => (/* binding */ Form),\n/* harmony export */   FormInput: () => (/* binding */ FormInput),\n/* harmony export */   FormSelect: () => (/* binding */ FormSelect),\n/* harmony export */   FormSubmitButton: () => (/* binding */ FormSubmitButton),\n/* harmony export */   Fragment: () => (/* binding */ Fragment),\n/* harmony export */   Image: () => (/* binding */ Image),\n/* harmony export */   Img: () => (/* binding */ Img),\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   Mutation: () => (/* binding */ Mutation),\n/* harmony export */   PersonalizationContainer: () => (/* binding */ PersonalizationContainer),\n/* harmony export */   RawText: () => (/* binding */ RawText),\n/* harmony export */   Router: () => (/* binding */ Router),\n/* harmony export */   Section: () => (/* binding */ Section),\n/* harmony export */   StateProvider: () => (/* binding */ StateProvider),\n/* harmony export */   Symbol: () => (/* binding */ Symbol$1),\n/* harmony export */   Text: () => (/* binding */ Text),\n/* harmony export */   TextArea: () => (/* binding */ TextArea),\n/* harmony export */   Video: () => (/* binding */ Video),\n/* harmony export */   builder: () => (/* reexport safe */ _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder),\n/* harmony export */   \"default\": () => (/* reexport safe */ _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder),\n/* harmony export */   getSrcSet: () => (/* binding */ getSrcSet),\n/* harmony export */   noWrap: () => (/* binding */ noWrap),\n/* harmony export */   onChange: () => (/* binding */ onChange),\n/* harmony export */   stringToFunction: () => (/* binding */ stringToFunction),\n/* harmony export */   updateMetadata: () => (/* binding */ updateMetadata),\n/* harmony export */   useIsPreviewing: () => (/* binding */ useIsPreviewing),\n/* harmony export */   withBuilder: () => (/* binding */ withBuilder),\n/* harmony export */   withChildren: () => (/* binding */ withChildren)\n/* harmony export */ });\n/* harmony import */ var _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @builder.io/sdk */ \"(app-pages-browser)/./node_modules/@builder.io/sdk/dist/index.esm.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/core */ \"(app-pages-browser)/./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var hash_sum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! hash-sum */ \"(app-pages-browser)/./node_modules/hash-sum/hash-sum.js\");\n/* harmony import */ var hash_sum__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(hash_sum__WEBPACK_IMPORTED_MODULE_4__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/process/browser.js\");\nvar SDK_VERSION=\"8.2.6\",_a;\"undefined\"!=typeof window&&(null===(_a=window.parent)||void 0===_a||_a.postMessage({type:\"builder.isReactSdk\",data:{value:!0,supportsPatchUpdates:\"v4\",supportsCustomBreakpoints:!0,supportsXSmallBreakpoint:!0,supportsGlobalSymbols:!0,blockLevelPersonalization:!0,version:SDK_VERSION}},\"*\"));var extendStatics=function(e,t){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};function __extends(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function n(){this.constructor=e}extendStatics(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var __assign=function(){return(__assign=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function __rest(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var r=0;for(i=Object.getOwnPropertySymbols(e);r<i.length;r++)t.indexOf(i[r])<0&&Object.prototype.propertyIsEnumerable.call(e,i[r])&&(n[i[r]]=e[i[r]])}return n}function __decorate(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a}function __metadata(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function __awaiter(e,t,n,i){return new(n||(n=Promise))((function(r,o){function a(e){try{l(i.next(e))}catch(e){o(e)}}function s(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}l((i=i.apply(e,t||[])).next())}))}function __generator(e,t){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(s){return function(l){return function(s){if(n)throw new TypeError(\"Generator is already executing.\");for(;o&&(o=0,s[0]&&(a=0)),a;)try{if(n=1,i&&(r=2&s[0]?i.return:s[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,s[1])).done)return r;switch(i=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,i=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){a.label=s[1];break}if(6===s[0]&&a.label<r[1]){a.label=r[1],r=s;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],i=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}}function __spreadArray(e,t,n){if(n||2===arguments.length)for(var i,r=0,o=t.length;r<o;r++)!i&&r in t||(i||(i=Array.prototype.slice.call(t,0,r)),i[r]=t[r]);return e.concat(i||Array.prototype.slice.call(t))}\"function\"==typeof SuppressedError&&SuppressedError;var fastClone=function(e){return JSON.parse(JSON.stringify(e))},omit$2=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var i=Object.assign({},e),r=0,o=t;r<o.length;r++){var a=o[r];delete i[a]}return i},sizeNames=[\"xsmall\",\"small\",\"medium\",\"large\"],sizes={xsmall:{min:0,default:160,max:320},small:{min:321,default:321,max:640},medium:{min:641,default:642,max:991},large:{min:990,default:991,max:1200},getWidthForSize:function(e){return this[e].default},getSizeForWidth:function(e){for(var t=0,n=sizeNames;t<n.length;t++){var i=n[t];if(e<=this[i].max)return i}return\"large\"}},getSizesForBreakpoints=function(e){var t=__assign(__assign({},sizes),fastClone(sizes));if(!e)return t;var n=e.xsmall,i=e.small,r=e.medium;if(n){var o=Math.floor(n/2);t.xsmall={max:n,min:o,default:o+1}}if(!i||!r)return t;var a=n?t.xsmall.max+1:Math.floor(i/2);t.small={max:i,min:a,default:a+1};var s=t.small.max+1;t.medium={max:r,min:s,default:s+1};var l=t.medium.max+1;return t.large={max:2e3,min:l,default:l+1},t},set=function(e,t,n){if(Object(e)!==e)return e;var i=Array.isArray(t)?t:t.toString().match(/[^.[\\]]+/g);return i.slice(0,-1).reduce((function(e,t,n){return Object(e[t])===e[t]?e[t]:e[t]=Math.abs(Number(i[n+1]))>>0==+i[n+1]?[]:{}}),e)[i[i.length-1]]=n,e},noop=function(){return null},safeDynamicRequire;if(\"function\"==typeof(null===globalThis||void 0===globalThis?void 0:globalThis.require)||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer&&\"function\"==\"function\")try{safeDynamicRequire=eval(\"require\")}catch(e){safeDynamicRequire=(null===globalThis||void 0===globalThis?void 0:globalThis.require)?globalThis.require:noop}function isDebug(){return Boolean(\"undefined\"!=typeof process&&void 0!==process.env&&process.env.DEBUG)}function isNodeRuntime(){var e;return\"undefined\"!=typeof process&&Boolean(null===(e=null===process||void 0===process?void 0:process.versions)||void 0===e?void 0:e.node)}null!=safeDynamicRequire||(safeDynamicRequire=noop);var shouldForceBrowserRuntimeInNode=function(){var e;if(!isNodeRuntime())return!1;var t=\"arm64\"===process.arch,n=process.version.startsWith(\"v20\"),i=null===(e=process.env.NODE_OPTIONS)||void 0===e?void 0:e.includes(\"--no-node-snapshot\");return!(!t||!n||i)&&(console.log(\"Skipping usage of `isolated-vm` to avoid crashes in Node v20 on an arm64 machine.\\n    If you would like to use the `isolated-vm` package on this machine, please provide the `NODE_OPTIONS=--no-node-snapshot` config to your Node process.\\n    See https://github.com/BuilderIO/builder/blob/main/packages/react/README.md#node-v20--m1-macs-apple-silicon-support for more information.\\n    \"),!0)},fnCache={},api=function(e){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder};function stringToFunction(e,t,n,i){if(void 0===t&&(t=!0),!e||!e.trim())return function(){};var r=e+\":\"+t;if(fnCache[r])return fnCache[r];var o=t&&!(e.includes(\";\")||e.includes(\" return \")||e.trim().startsWith(\"return \"))||e.trim().startsWith(\"builder.run\"),a=function(){};try{_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(a=new Function(\"state\",\"event\",\"block\",\"builder\",\"Device\",\"update\",\"Builder\",\"context\",\"\\n          var names = [\\n            'state',\\n            'event',\\n            'block',\\n            'builder',\\n            'Device',\\n            'update',\\n            'Builder',\\n            'context'\\n          ];\\n          var rootState = state;\\n          if (typeof Proxy !== 'undefined') {\\n            rootState = new Proxy(rootState, {\\n              set: function () {\\n                return false;\\n              },\\n              get: function (target, key) {\\n                if (names.includes(key)) {\\n                  return undefined;\\n                }\\n                return target[key];\\n              }\\n            });\\n          }\\n          /* Alias */\\n          var ctx = context;\\n          var log = console.log.bind(console);\\n          with (rootState) {\\n            \".concat(o?\"return (\".concat(e,\");\"):e,\";\\n          }\\n        \")))}catch(t){n&&n.push(t);var s=t&&t.message;s&&\"string\"==typeof s&&i&&-1===i.indexOf(s)&&i.push(s),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&console.warn(\"Function compile error in \".concat(e),t)}var l=function(){for(var t=[],i=0;i<arguments.length;i++)t[i]=arguments[i];try{if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||shouldForceBrowserRuntimeInNode())return a.apply(void 0,t);var r=getIsolateContext(),s=safeDynamicRequire(\"isolated-vm\"),l=r.evalClosureSync(makeFn(e,o),t.map((function(e,t){return\"object\"==typeof e?new s.Reference(t===indexOfBuilderInstance?__assign(__assign({},e),{getUserAttributes:function(){return e.getUserAttributes(\"\")}}):e):null})));try{var u=JSON.parse(l);return u}catch(e){return l}}catch(t){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?console.warn(\"Builder custom code error:\",t.message||t,\"in\",e,t.stack||t):isDebug()&&console.debug(\"Builder custom code error:\",t.message||t,\"in\",e,t.stack||t),n&&n.push(t),null}};return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(fnCache[r]=l),l}var indexOfBuilderInstance=3,makeFn=function(e,t,n){var i=n||[\"state\",\"event\",\"block\",\"builder\",\"Device\",\"update\",\"Builder\",\"context\"];return\"\\n\".concat(\"\\n  var refToProxy = (obj) => {\\n    if (typeof obj !== 'object' || obj === null) {\\n      return obj;\\n    }\\n    return new Proxy({}, {\\n        get(target, key) {\\n            if (key === 'copySync') {\\n              return () => obj.copySync();\\n            }\\n            const val = obj.getSync(key);\\n            if (typeof val?.copySync === 'function') {\\n                return JSON.parse(stringify(val));\\n            }\\n            return val;\\n        },\\n        set(target, key, value) {\\n            obj.setSync(key, value);\\n        },\\n        deleteProperty(target, key) {\\n            obj.deleteSync(key);\\n        }\\n      })\\n  }\\n\",\"\\n\").concat(\"\\n    var stringify = (val) => {\\n      if (typeof val === 'object' && val !== null) {\\n        return JSON.stringify(val.copySync ? val.copySync() : val);\\n      }\\n      return val;\\n    }\\n  \",\"\\n\").concat(i.map((function(e,t){return\"var \".concat(e,\" = refToProxy($\").concat(t,\");\")})).join(\"\\n\")).concat(\"\\n\".concat(i.includes(\"context\")?\"var ctx = context;\":\"\",\"\\nvar endResult = function() {\\n  \").concat(t?\"return (\".concat(e,\");\"):e,\";\\n};\\n\\nreturn stringify(endResult());\\n\"))},getIsolateContext=function(){var e=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.serverContext;e||(e=new(safeDynamicRequire(\"isolated-vm\").Isolate)({memoryLimit:128}).createContextSync(),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.setServerContext(e));var t=e.global;return t.setSync(\"global\",t.derefInto()),t.setSync(\"log\",(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];isDebug()&&console.log.apply(console,e)})),e},isPromise=function(e){return\"function\"==typeof e.then},isRequestInfo=function(e){return!isPromise(e)},BuilderAsyncRequestsContext=react__WEBPACK_IMPORTED_MODULE_2___default().createContext({requests:[],errors:[],logs:[]}),BuilderStoreContext=react__WEBPACK_IMPORTED_MODULE_2___default().createContext({state:{},rootState:{},content:{},context:{},update:function(e){return null}}),applyPatchWithMinimalMutationChain=function(e,t,n){if(void 0===n&&(n=!1),Object(e)!==e)return e;var i=t.path,r=t.op,o=t.value,a=i.split(/\\//);\"\"===a[0]&&a.shift();for(var s=n?e:__assign({},e),l=s,u=0;u<a.length;u++){var d=u===a.length-1,c=a[u];if(d){if(\"replace\"===r)l[c]=o;else if(\"add\"===r){var p=Number(c);Array.isArray(l)?\"-\"===c?l.push(o):l.splice(p,0,o):l[c]=o}else if(\"remove\"===r){p=Number(c);Array.isArray(l)?l.splice(p,1):delete l[c]}}else{var f=a[u+1],m=Object(l[c])===l[c]?l[c]:String(Number(f))===f?[]:{};l=l[c]=Array.isArray(m)?__spreadArray([],m,!0):__assign({},m)}}return s},htmlEscape=function(e){return e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\")},blockToHtmlString=function(e){var t;return\"<\".concat(htmlEscape(e.tagName||\"div\"),' \\n    class=\"builder-block ').concat(e.id,\" \").concat(e.class||\"\",'\"\\n    builder-id=\"').concat(e.id,'\"\\n  ').concat(Object.keys(e.properties||{}).map((function(t){return\"\".concat(htmlEscape(t),'=\"').concat(htmlEscape(e.properties[t]),'\"')})).join(\" \"),\"\\n  >\").concat(\"Text\"===(null===(t=null==e?void 0:e.component)||void 0===t?void 0:t.name)?e.component.options.text:e.children?e.children.map((function(e){return blockToHtmlString(e)})).join(\"\"):\"\",\"</\").concat(e.tagName||\"div\",\">\").replace(/\\s+/g,\" \")},Link=function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderStoreContext.Consumer,null,(function(t){return t.renderLink?t.renderLink(e):react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"a\",__assign({},e))}))};function traverse(e,t,n,i,r){void 0===n&&(n=null),void 0===i&&(i=null),void 0===r&&(r=new WeakSet),null!=e&&\"object\"==typeof e?r.has(e)||(r.add(e),Array.isArray(e)?e.forEach((function(n,i){t(n,(function(t){e[i]=t})),traverse(n,t,e,i,r)})):Object.entries(e).forEach((function(n){var i=n[0],o=n[1];t(o,(function(t){e[i]=t})),traverse(o,t,e,i,r)}))):t(e,(function(e){null!==n&&null!==i&&(n[i]=e)}))}var isLocalizedField=function(e){return e&&\"object\"==typeof e&&\"@builder.io/core:LocalizedValue\"===e[\"@type\"]},containsLocalizedValues=function(e){if(!e||!Object.getOwnPropertyNames(e).length)return!1;var t=!1;return traverse(e,(function(e){isLocalizedField(e)&&(t=!0)})),t},extractLocalizedValues=function(e,t){return e&&Object.getOwnPropertyNames(e).length?(traverse(e,(function(e,n){var i;isLocalizedField(e)&&n(null!==(i=e[t])&&void 0!==i?i:void 0)})),e):{}},camelCaseToKebabCase=function(e){return e?e.replace(/([A-Z])/g,(function(e){return\"-\".concat(e[0].toLowerCase())})):\"\"},kebabCaseToCamelCase=function(e){return void 0===e&&(e=\"\"),e.replace(/-([a-z])/g,(function(e){return e[1].toUpperCase()}))},Device={desktop:0,tablet:1,mobile:2};function deepCloneWithConditions(e){if(null===e||\"object\"!=typeof e)return e;if(Array.isArray(e))return e.map((function(e){return deepCloneWithConditions(e)}));if(\"@builder.io/sdk:Element\"===e[\"@type\"])return e;var t={};for(var n in e)\"meta\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=deepCloneWithConditions(e[n]));return t}var voidElements=new Set([\"area\",\"base\",\"br\",\"col\",\"embed\",\"hr\",\"img\",\"input\",\"link\",\"meta\",\"param\",\"source\",\"track\",\"wbr\",\"textarea\"]),last=function(e){return e[e.length-1]};function omit$1(e,t){for(var n=Object.assign({},e),i=0,r=t;i<r.length;i++){delete n[r[i]]}return n}var cssCase=function(e){if(!e)return e;var t=camelCaseToKebabCase(e);return e[0]===e[0].toUpperCase()&&(t=\"-\"+t),t};function capitalize(e){if(e)return e[0].toUpperCase()+e.slice(1)}var BuilderBlock$1=function(_super){function BuilderBlock(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.hydrated=!1,_this.state={hasError:!1,updates:0},_this.privateState={state:{},rootState:{},context:{},update:function(){}},_this.onWindowMessage=function(event){var message=event.data;if(message)switch(message.type){case\"builder.selectionChange\":var data=message.data;if(!data)break;var selection=data.selection,id=_this.block&&_this.block.id;id&&Array.isArray(selection)&&selection.indexOf(id)>-1&&setTimeout((function(){window.$block=_this,window.$blocks||(window.$blocks=[]),window.$blocks.push(_this)}));break;case\"builder.patchUpdates\":var data=message.data;if(!data||!data.data)break;var patches=data.data[_this.block.id];if(!patches)return;location.href.includes(\"builder.debug=true\")&&eval(\"debugger\");for(var _i=0,patches_1=patches;_i<patches_1.length;_i++){var patch=patches_1[_i];applyPatchWithMinimalMutationChain(_this.props.block,patch,!0)}_this.setState({updates:_this.state.updates+1})}},_this}return __extends(BuilderBlock,_super),Object.defineProperty(BuilderBlock.prototype,\"store\",{get:function(){return this.privateState},enumerable:!1,configurable:!0}),BuilderBlock.getDerivedStateFromError=function(e){return{hasError:!0}},BuilderBlock.prototype.componentDidCatch=function(e,t){console.error(\"Builder block error:\",e,t)},BuilderBlock.prototype.stringToFunction=function(e,t){return void 0===t&&(t=!0),stringToFunction(e,t,this._errors,this._logs)},Object.defineProperty(BuilderBlock.prototype,\"block\",{get:function(){return this.props.block},enumerable:!1,configurable:!0}),BuilderBlock.prototype.emotionCss=function(e){var t,n,i,r,o,a,s,l,u=this.block,d=u.animations&&u.animations[0];if(d&&\"hover\"!==d.trigger){var c=d&&d.steps&&d.steps[0],p=c&&c.styles;p&&(l=p)}var f=sizeNames.slice().reverse(),m={};if(e)for(var h=Boolean(null===(i=null===(n=null===(t=this.privateState.context.builderContent)||void 0===t?void 0:t.meta)||void 0===n?void 0:n.breakpoints)||void 0===i?void 0:i.xsmall),v=0,g=f;v<g.length;v++){var b=g[v];if(h||\"xsmall\"!==b)if(\"large\"===b)this.props.emailMode||(m[\"&.builder-block\"]=Object.assign({},e[b],l));else{var y=getSizesForBreakpoints((null===(o=null===(r=this.privateState.context.builderContent)||void 0===r?void 0:r.meta)||void 0===o?void 0:o.breakpoints)||{});m[\"@media only screen and (max-width: \".concat(y[b].max,\"px)\")]={\"&.builder-block\":e[b]}}}var _=u.animations&&u.animations.find((function(e){return\"hover\"===e.trigger}));return _&&(m[\":hover\"]=(null===(s=null===(a=_.steps)||void 0===a?void 0:a[1])||void 0===s?void 0:s.styles)||{},m.transition=\"all \".concat(_.duration,\"s \").concat(camelCaseToKebabCase(_.easing)),_.delay&&(m.transitionDelay=_.delay+\"s\")),m},BuilderBlock.prototype.eval=function(e){return this.stringToFunction(e)(this.privateState.state,void 0,this.block,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,Device,this.privateState.update,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,this.privateState.context)},BuilderBlock.prototype.componentWillUnmount=function(){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&removeEventListener(\"message\",this.onWindowMessage)},BuilderBlock.prototype.componentDidMount=function(){var e,t=this;this.hydrated=!0;var n=this.block,i=n&&n.animations;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&addEventListener(\"message\",this.onWindowMessage),i){var r={animations:fastClone(i)};if(n.bindings)for(var o in n.bindings)if((null===(e=o.trim)||void 0===e?void 0:e.call(o))&&o.startsWith(\"animations.\")){var a=this.stringToFunction(n.bindings[o]);void 0!==a&&set(r,o,a(this.privateState.state,null,n,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,null,null,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,this.privateState.context))}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.animator.bindAnimations(r.animations.filter((function(e){return\"hover\"!==e.trigger})).map((function(e){return __assign(__assign({},e),{elementId:t.block.id})})))}},BuilderBlock.prototype.getElement=function(e,t){var n,i,r,o,a,s,l=this;void 0===e&&(e=0),void 0===t&&(t=this.privateState.state);var u=this.props;u.child,u.fieldName;var d,c=this.block,p=(c.tagName||\"div\").toLowerCase();if(\"template\"===p){var f=c.children?c.children.map((function(e){return blockToHtmlString(e)})).join(\" \"):\"\";return console.debug(\"template html\",f),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"template\",__assign({},c.properties,{dangerouslySetInnerHTML:{__html:f}}))}var m=c.component&&(c.component.name||c.component.component),h=null;c.component&&!c.component.class&&(c.component&&c.component.tag?d=c.component.tag:(h=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.components.find((function(e){return e.name===m}))||null)&&h.class?d=h.class:h&&h.tag?d=h.tag:(null==m?void 0:m.startsWith(\"Builder:\"))?console.warn(\"Missing @builder.io/widgets installation, please install and import @builder.io/widgets to use \".concat(m.split(\":\")[1],\" in your content, more info here: https://github.com/BuilderIO/builder/tree/main/packages/widgets\")):m&&console.warn(\"Missing registration for \".concat(m,\", have you included the registration in your bundle?\")));var v=__assign(__assign({},c.properties),{style:{},responsiveStyles:fastClone(c.responsiveStyles||{})});if(v=__assign(__assign({},v.properties),v),c.component&&(v.component=deepCloneWithConditions(c.component)),c.bindings)for(var g in c.bindings)if(null===(i=g.trim)||void 0===i?void 0:i.call(g)){var b=this.stringToFunction(c.bindings[g]);set(v,g,b(t,null,c,api(),Device,null,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,this.privateState.context))}if(v.hide)return null;if(delete v.hide,(\"show\"in v||c.bindings&&c.bindings.show)&&!v.show)return null;if(delete v.show,c.actions){var y=function(e){if(!(null===(r=e.trim)||void 0===r?void 0:r.call(e)))return\"continue\";var n=c.actions[e];v[\"on\"+capitalize(e)]=function(e){var i=t;return\"undefined\"!=typeof Proxy&&(i=new Proxy(t,{set:function(e,t,n){return e[t]=n,l.privateState.rootState[t]=n,!0}})),l.stringToFunction(n,!1)(i,e,l.block,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,Device,l.privateState.update,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,l.privateState.context)}};for(var g in c.actions)y(g)}var _=(v.component||v.options)&&__assign(__assign({},v.options),v.component.options||v.component.data);containsLocalizedValues(_)&&(this.privateState.state.locale||console.warn(\"[Builder.io] In order to use localized fields in Builder, you must pass a locale prop to the BuilderComponent or to options object while fetching the content to resolve localized fields. Learn more: https://www.builder.io/c/docs/localization-inline#targeting-and-inline-localization\"),_=extractLocalizedValues(_,null!==(o=this.privateState.state.locale)&&void 0!==o?o:\"Default\"));var x=voidElements.has(p),S=h&&(h.fragment||h.noWrap),k=(null===(a=v.attr)||void 0===a?void 0:a.style)||(\"string\"==typeof v.style?v.style:\"\")||\"\";if(\"string\"==typeof k){\"object\"!=typeof v.style&&(v.style={});for(var B=0,w=k.split(\";\");B<w.length;B++){var C=w[B].split(\":\");if(!C.length)return;g=C[0],b=C[1];g&&(C.length>2&&(b=C.slice(1).join(\":\")),v.style[kebabCaseToCamelCase(g)]=b)}}var E=__assign(__assign(__assign({},omit$1(v,[\"class\",\"component\",\"attr\",\"responsiveStyles\"])),((n={})[\"string\"!=typeof p||p.includes(\"-\")?\"class\":\"className\"]=\"builder-block \".concat(this.id).concat(c.class?\" \".concat(c.class):\"\").concat(!c.component||[\"Image\",\"Video\",\"Banner\"].indexOf(m)>-1?\"\":\" builder-has-component\")+(v.class?\" \"+v.class:\"\")+(this.hydrated&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&(null===(s=this.privateState.state._spacer)||void 0===s?void 0:s.parent)===c.id?\" builder-spacer-parent\":\"\"),n.key=this.id+e,n[\"builder-id\"]=this.id,n)),0!==e&&{\"builder-index\":e});_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&this.hydrated&&(E[\"builder-inline-styles\"]=v.attr&&v.attr.style?Object.keys(v.style).reduce((function(e,t){return(e?\"\".concat(e,\";\"):\"\")+\"\".concat(cssCase(t),\":\").concat(v.style[t],\";\")}),\"\"):\"\"),(E.properties&&E.properties.href||E.href)&&\"div\"===p&&(p=\"a\"),\"a\"===p&&(p=Link);var R=c.children||E.children||[];return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(_emotion_core__WEBPACK_IMPORTED_MODULE_1__.ClassNames,null,(function(e){var t=e.css;if(e.cx,!l.props.emailMode){var n=\" \"+t(l.emotionCss(v.responsiveStyles));E.class&&(E.class+=n),E.className&&(E.className+=n)}return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderAsyncRequestsContext.Consumer,null,(function(e){return l._asyncRequests=e&&e.requests,l._errors=e&&e.errors,l._logs=e&&e.logs,x?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(p,__assign({},E)):d&&(S||l.props.emailMode)?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(d,__assign({},_,{attributes:E,builderBlock:c,builderState:l.privateState})):(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(p,__assign({},E),d&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(d,__assign({builderState:l.privateState,builderBlock:c},_)),c.text||v.text?v.text:!d&&R&&Array.isArray(R)&&R.length?R.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock,{key:(l.id||\"\")+t,block:e,index:t,size:l.props.size,fieldName:l.props.fieldName,child:l.props.child,emailMode:l.props.emailMode})})):null)}))})))},Object.defineProperty(BuilderBlock.prototype,\"id\",{get:function(){var e=this.block;return e.id&&!e.id.startsWith(\"builder\")?\"builder-\"+e.id:e.id||\"\"},enumerable:!1,configurable:!0}),BuilderBlock.prototype.contents=function(e){var t=this,n=this.block;if(this.privateState=e,n.repeat&&n.repeat.collection){var i=n.repeat.collection,r=last((i||\"\").trim().split(\"(\")[0].trim().split(\".\")),o=n.repeat.itemName||(r?r+\"Item\":\"item\"),a=this.stringToFunction(i)(e.state,null,n,api(),Device,null,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,this.privateState.context);return Array.isArray(a)?a.map((function(n,i){var r,a=__assign(__assign({},e.state),((r={$index:i,$item:n})[o]=n,r[\"$\".concat(o,\"Index\")]=i,r));return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Provider,{key:i,value:__assign(__assign({},e),{state:a})},t.getElement(i,a))})):null}return this.getElement()},BuilderBlock.prototype.render=function(){var e=this;return this.state.hasError?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\",{css:{display:\"inline-block\",padding:5,color:\"#999\",fontSize:11,fontStyle:\"italic\"}},\"Builder block error :( Check console for details\"):(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,null,(function(t){return e.contents(t)}))},BuilderBlock}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),BuilderBlocks=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.hydrated=!1,t.onClickEmptyBlocks=function(){var e;_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe&&t.noBlocks&&(null===(e=window.parent)||void 0===e||e.postMessage({type:\"builder.clickEmptyBlocks\",data:{parentElementId:t.parentId,dataPath:t.path}},\"*\"))},t.onHoverEmptyBlocks=function(){var e;_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&t.noBlocks&&(null===(e=window.parent)||void 0===e||e.postMessage({type:\"builder.hoverEmptyBlocks\",data:{parentElementId:t.parentId,dataPath:t.path}},\"*\"))},t}return __extends(t,e),Object.defineProperty(t.prototype,\"isRoot\",{get:function(){return!this.props.child},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"noBlocks\",{get:function(){var e=this.props.blocks;return!(e&&e.length)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"path\",{get:function(){var e=this.props.dataPath||\"\";return e.trim()&&(e.startsWith(\"this.\")?e=e.replace(\"this.\",\"\"):e.startsWith(\"component.options.\")||(e=\"component.options.\"+e)),e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"parentId\",{get:function(){return this.props.parentElementId?this.props.parentElementId:this.props.parent&&this.props.parent.id},enumerable:!1,configurable:!0}),t.prototype.componentDidMount=function(){this.hydrated=!0},t.prototype.render=function(){var e=this,t=this.props.blocks,n=this.props.emailMode?\"span\":\"div\";return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(n,__assign({className:\"builder-blocks\"+(this.noBlocks?\" no-blocks\":\"\")+(this.props.child?\" builder-blocks-child\":\"\")+(this.props.className?\" \"+this.props.className:\"\"),\"builder-type\":\"blocks\",\"builder-path\":_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe&&this.hydrated?this.path:void 0,\"builder-parent-id\":this.parentId,css:__assign(__assign({},!this.props.emailMode&&{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\"}),this.props.style),onClick:function(){e.noBlocks&&e.onClickEmptyBlocks()}},_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&{onMouseEnter:function(){return e.onHoverEmptyBlocks()}}),t&&Array.isArray(t)&&t.map((function(t,n){return t&&\"@builder.io/sdk:Element\"===t[\"@type\"]?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:t.id,block:t,index:n,fieldName:e.props.fieldName,child:e.props.child,emailMode:e.props.emailMode}):t}))||t)},t.renderInto=function(e,n,i){if(void 0===n&&(n={}),e){var r=null;return\"string\"==typeof e?r=document.querySelector(e):e instanceof Element&&(r=e),react_dom__WEBPACK_IMPORTED_MODULE_3__.render((0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Provider,{value:i},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(t,__assign({},n))),r)}},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),NoWrap=function(e){return e.children};function getData(e){if(void 0!==(null==e?void 0:e.data)){var t=e.data,n=t.blocks,i=t.blocksString,r=Array.isArray(n)||\"string\"==typeof i,o=__assign(__assign({},e.data),r&&{blocks:n||JSON.parse(i)});return delete o.blocksString,o}}var variantsScript=function(e,t){return\"\\n(function() {\\n  if (window.builderNoTrack || !navigator.cookieEnabled) {\\n    return;\\n  }\\n\\n  var variants = \".concat(e,\";\\n  function removeVariants() {\\n    variants.forEach(function (template) {\\n      document.querySelector('template[data-template-variant-id=\\\"' + template.id + '\\\"]').remove();\\n    });\\n    document.getElementById('variants-script-\").concat(t,'\\').remove();\\n  }\\n\\n  if (typeof document.createElement(\"template\").content === \\'undefined\\') {\\n    removeVariants();\\n    return ;\\n  }\\n\\n  function setCookie(name,value,days) {\\n    var expires = \"\";\\n    if (days) {\\n        var date = new Date();\\n        date.setTime(date.getTime() + (days*24*60*60*1000));\\n        expires = \"; expires=\" + date.toUTCString();\\n    }\\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\" + \"; Secure; SameSite=None\";\\n  }\\n\\n  function getCookie(name) {\\n    var nameEQ = name + \"=\";\\n    var ca = document.cookie.split(\\';\\');\\n    for(var i=0;i < ca.length;i++) {\\n        var c = ca[i];\\n        while (c.charAt(0)==\\' \\') c = c.substring(1,c.length);\\n        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\\n    }\\n    return null;\\n  }\\n  var cookieName = \\'builder.tests.').concat(t,\"';\\n  var variantInCookie = getCookie(cookieName);\\n  var availableIDs = variants.map(function(vr) { return vr.id }).concat('\").concat(t,\"');\\n  var variantId;\\n  if (availableIDs.indexOf(variantInCookie) > -1) {\\n    variantId = variantInCookie;\\n  }\\n  if (!variantId) {\\n    var n = 0;\\n    var random = Math.random();\\n    for (var i = 0; i < variants.length; i++) {\\n      var variant = variants[i];\\n      var testRatio = variant.testRatio;\\n      n += testRatio;\\n      if (random < n) {\\n        setCookie(cookieName, variant.id);\\n        variantId = variant.id;\\n        break;\\n      }\\n    }\\n    if (!variantId) {\\n      variantId = \\\"\").concat(t,'\";\\n      setCookie(cookieName, \"').concat(t,'\");\\n    }\\n  }\\n  if (variantId && variantId !== \"').concat(t,\"\\\") {\\n    var winningTemplate = document.querySelector('template[data-template-variant-id=\\\"' + variantId + '\\\"]');\\n    if (winningTemplate) {\\n      var parentNode = winningTemplate.parentNode;\\n      var newParent = parentNode.cloneNode(false);\\n      newParent.appendChild(winningTemplate.content.firstChild);\\n      parentNode.parentNode.replaceChild(newParent, parentNode);\\n    }\\n  } else if (variants.length > 0) {\\n    removeVariants();\\n  }\\n})()\").replace(/\\s+/g,\" \")},VariantsProvider=function(e){var t=e.initialContent,n=e.children,i=e.nonce;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.canTrack)return n([t]);if(!Boolean(Object.keys((null==t?void 0:t.variations)||{}).length))return n([t]);var r=Object.keys(t.variations).map((function(e){return __assign(__assign({id:e},t.variations[e]),{data:getData(t.variations[e])})})),o=__spreadArray(__spreadArray([],r,!0),[t],!1);if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer){var a=JSON.stringify(Object.keys(t.variations||{}).map((function(e){return{id:e,testRatio:t.variations[e].testRatio}})));return react__WEBPACK_IMPORTED_MODULE_2__.createElement(react__WEBPACK_IMPORTED_MODULE_2__.Fragment,null,n(o,(function(){return react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"script\",{nonce:i,id:\"variants-script-\".concat(t.id),dangerouslySetInnerHTML:{__html:variantsScript(a,t.id)}})})))}var s=\"builder.tests.\".concat(t.id),l=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.getCookie(s);if(!l&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser)for(var u=0,d=Math.random(),c=0;c<r.length;c++){var p=r[c];if(d<(u+=p.testRatio)){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.setCookie(s,p.id),l=p.id;break}}return l||(l=t.id,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.setCookie(s,l)),n([o.find((function(e){return e.id===l}))])},BuilderContent=function(_super){function BuilderContent(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.ref=null,_this.state={loading:!_this.props.content,data:getContentWithInfo(_this.props.content),updates:1},_this.onWindowMessage=function(event){var _a,_b,isTrusted=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isTrustedHostForEvent(event);if(isTrusted){var message=event.data;if(message)switch(message.type){case\"builder.patchUpdates\":if(null===(_a=_this.props.options)||void 0===_a?void 0:_a.noEditorUpdates)return;var data=message.data;if(!data||!data.data)break;var patches=data.data[null===(_b=_this.state.data)||void 0===_b?void 0:_b.id];if(!patches||!patches.length)return;location.href.includes(\"builder.debug=true\")&&eval(\"debugger\");for(var newData=_this.state.data,_i=0,patches_1=patches;_i<patches_1.length;_i++){var patch=patches_1[_i];newData=applyPatchWithMinimalMutationChain(newData,patch,!1)}_this.setState({updates:_this.state.updates+1,data:newData}),_this.props.contentLoaded&&_this.props.contentLoaded(newData.data,newData)}}},_this.subscriptions=new _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Subscription,_this.firstLoad=!0,_this.clicked=!1,_this.trackedImpression=!1,_this.intersectionObserver=null,_this.onClick=function(e){var t=e.nativeEvent,n=_this.data;n&&(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.autoTrack&&_this.builder.trackInteraction(n.id,_this.renderedVariantId,_this.clicked,t,{content:n}),_this.clicked||(_this.clicked=!0))},_this}return __extends(BuilderContent,_super),Object.defineProperty(BuilderContent.prototype,\"builder\",{get:function(){return this.props.builder||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder},enumerable:!1,configurable:!0}),Object.defineProperty(BuilderContent.prototype,\"name\",{get:function(){var e=this.props;return\"model\"in e?e.model:e.modelName},enumerable:!1,configurable:!0}),Object.defineProperty(BuilderContent.prototype,\"renderedVariantId\",{get:function(){var e,t,n=this.props.isStatic?this.builder.getCookie(\"builder.tests.\".concat(null===(e=this.data)||void 0===e?void 0:e.id)):null===(t=this.data)||void 0===t?void 0:t.variationId;if(null!==n)return n},enumerable:!1,configurable:!0}),Object.defineProperty(BuilderContent.prototype,\"options\",{get:function(){var e,t,n=__assign({},this.props.options||{});return n.key||!(null===(e=this.props.content)||void 0===e?void 0:e.id)||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing||(n.key=this.props.content.id),!this.props.content||(null===(t=n.initialContent)||void 0===t?void 0:t.length)||!this.props.inline&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing||(n.initialContent=[this.props.content]),n},enumerable:!1,configurable:!0}),Object.defineProperty(BuilderContent.prototype,\"data\",{get:function(){var e=(this.props.inline||!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||this.firstLoad)&&this.options.initialContent&&this.options.initialContent[0]||this.state.data;return getContentWithInfo(e)},enumerable:!1,configurable:!0}),BuilderContent.prototype.componentDidMount=function(){var e,t;if(!this.props.inline||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing)this.subscribeToContent();else if(this.props.inline&&(null===(t=null===(e=this.options)||void 0===e?void 0:e.initialContent)||void 0===t?void 0:t.length)){var n=this.options.initialContent[0];(null==n?void 0:n.id)&&this.builder.trackImpression(n.id,this.renderedVariantId,void 0,{content:n})}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&addEventListener(\"message\",this.onWindowMessage)},BuilderContent.prototype.subscribeToContent=function(){var e=this;\"_inline\"!==this.name&&this.subscriptions.add(this.builder.queueGetContent(this.name,this.options).subscribe((function(t){var n=t&&t[0];e.setState({data:n,loading:!1});var i=(e.builder.editingModel||e.builder.previewingModel)===e.name;if(!e.props.inline&&e.props.content&&e.firstLoad&&i&&(e.firstLoad=!1,e.subscriptions.unsubscribe(),e.subscribeToContent()),n&&e.firstLoad&&(e.firstLoad=!1,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.autoTrack&&!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing)){var r=!1;if(\"function\"==typeof IntersectionObserver&&e.ref)try{(e.intersectionObserver=new IntersectionObserver((function(t,i){t.forEach((function(t){t.intersectionRatio>0&&!e.trackedImpression&&(e.builder.trackImpression(n.id,e.renderedVariantId,void 0,{content:e.data}),e.data,e.trackedImpression=!0,e.ref&&i.unobserve(e.ref))}))}))).observe(e.ref),r=!0}catch(e){console.warn(\"Could not bind intersection observer\")}r||(e.trackedImpression=!0,e.builder.trackImpression(n.id,e.renderedVariantId,void 0,{content:n}))}e.props.contentLoaded&&e.props.contentLoaded(n&&n.data,n)}),(function(t){e.props.contentError&&(e.props.contentError(t),e.setState({loading:!1}))})))},BuilderContent.prototype.componentWillUnmount=function(){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&removeEventListener(\"message\",this.onWindowMessage),this.subscriptions.unsubscribe(),this.intersectionObserver&&this.ref&&this.intersectionObserver.unobserve(this.ref)},BuilderContent.prototype.render=function(){var e=this;if(this.props.dataOnly)return null;var t=this.state.loading,n=this.data,i=this.props.dataOnly?NoWrap:\"div\";return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(VariantsProvider,{initialContent:n,nonce:this.props.nonce},(function(r,o){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,r.map((function(a,s){var l=s===r.length-1?(react__WEBPACK_IMPORTED_MODULE_2___default().Fragment):\"template\";return react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),{key:String((null==a?void 0:a.id)+s)},\"template\"!==l&&(null==o?void 0:o()),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(l,__assign({key:String((null==a?void 0:a.id)+s)},\"template\"===l&&{\"data-template-variant-id\":null==a?void 0:a.id}),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(i,__assign({},0===s&&!e.props.dataOnly&&{ref:function(t){return e.ref=t}},{className:\"builder-content\",onClick:e.onClick,\"builder-content-id\":null==a?void 0:a.id,\"builder-model\":e.name}),e.props.children(null==a?void 0:a.data,!e.props.inline&&t,n))))})))}))},BuilderContent}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),getContentWithInfo=function(e){var t;if(e){var n=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.getCookie(\"builder.tests.\".concat(e.id)),i=n===e.id?e:null===(t=e.variations)||void 0===t?void 0:t[n],r=(null==i?void 0:i.name)||((null==i?void 0:i.id)===e.id?\"Default variation\":\"\");return __assign(__assign({},e),{variationId:n,testVariationId:n,testVariationName:r})}return null};function unwrapExports(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}function createCommonjsModule(e,t){return e(t={exports:{}},t.exports),t.exports}var onChange_1=createCommonjsModule((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Symbol(\"target\"),i=Symbol(\"unsubscribe\"),r=function(e,t){return t&&t.toString&&(e&&(e+=\".\"),e+=t.toString()),e},o=function(e){return Array.isArray(e)?e.slice():Object.assign({},e)},a=function(e,t,a){if(\"undefined\"==typeof Proxy)return e;void 0===a&&(a={});var s,l,u=Symbol(\"ProxyTarget\"),d=!1,c=!1,p=!1,f=a.equals||Object.is,m=new WeakMap,h=new WeakMap,v=new WeakMap,g=function(e,n,i,a){if(!p)if(d){if(d&&l&&void 0!==i&&void 0!==a&&\"length\"!==n){var u=l;e!==s&&function(e,t){for(var n;e;)-1===(n=e.indexOf(\".\"))&&(n=e.length),t(e.slice(0,n)),e=e.slice(n+1)}(e=e.replace(s,\"\").slice(1),(function(e){u[e]=o(u[e]),u=u[e]})),u[n]=i}c=!0}else t(r(e,n),a,i)},b=function(e,t){var n=m?m.get(e):void 0;n&&n.delete(t)},y=function(e,t){if(p)return e;h.set(e,t);var n=v.get(e);return void 0===n&&(n=new Proxy(e,x),v.set(e,n)),n},_=function(e){return p||!0===a.ignoreSymbols&&\"symbol\"==typeof e},x={get:function(e,t,o){if(t===u||t===n)return e;if(t===i&&\"\"===h.get(e))return function(e){return p=!0,m=null,h=null,v=null,e}(e);var s=Reflect.get(e,t,o);if(function(e){return null===e||\"object\"!=typeof e&&\"function\"!=typeof e}(s)||function(e){return e instanceof RegExp||e instanceof Number}(s)||\"constructor\"===t||!0===a.isShallow)return s;var l=function(e,t){var n=m?m.get(e):void 0;if(n)return n;n=new Map,m.set(e,n);var i=n.get(t);return i||(i=Reflect.getOwnPropertyDescriptor(e,t),n.set(t,i)),i}(e,t);if(l&&!l.configurable){if(l.set&&!l.get)return;if(!1===l.writable)return s}return y(s,r(h.get(e),t))},set:function(e,t,n,i){n&&void 0!==n[u]&&(n=n[u]);var r=_(t),o=r?null:Reflect.get(e,t,i),a=Reflect.set(e[u]||e,t,n);return r||f(o,n)||g(h.get(e),t,o,n),a},defineProperty:function(e,t,n){var i=Reflect.defineProperty(e,t,n);return _(t)||(b(e,t),g(h.get(e),t,void 0,n.value)),i},deleteProperty:function(e,t){if(!Reflect.has(e,t))return!0;var n=_(t),i=n?null:Reflect.get(e,t),r=Reflect.deleteProperty(e,t);return n||(b(e,t),g(h.get(e),t,i)),r},apply:function(e,t,n){var i=t instanceof Date;if(i&&(t=t[u]),!d){d=!0,i&&(l=t.valueOf()),(Array.isArray(t)||\"[object Object]\"===toString.call(t))&&(l=o(t[u])),s=(s=h.get(e)).slice(0,Math.max(s.lastIndexOf(\".\"),0));var r=Reflect.apply(e,t,n);return d=!1,(c||i&&!f(l,t.valueOf()))&&(g(s,\"\",l,t[u]||t),l=null,c=!1),r}return Reflect.apply(e,t,n)}},S=y(e,\"\");return t=t.bind(S),S};a.target=function(e){return e[n]||e},a.unsubscribe=function(e){return e[i]||e},e.exports=a,t.default=a})),onChange=unwrapExports(onChange_1),nextTick=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick;function debounceNextTick(e,t,n){return void 0===t&&\"function\"==typeof e?debounceNextTickImpl(e):{configurable:!0,enumerable:n.enumerable,get:function(){return Object.defineProperty(this,t,{configurable:!0,enumerable:n.enumerable,value:debounceNextTickImpl(n.value)}),this[t]}}}function debounceNextTickImpl(e){var t=null,n=null;return function(){var e=t;if(t=[].slice.call(arguments),n=this,null!==e)return;nextTick(i)};function i(){e.apply(n,t),t=null,n=null}}function throttle(e,t,n){var i,r,o;void 0===n&&(n={});var a=null,s=0,l=function(){s=!1===n.leading?0:Date.now(),a=null,o=e.apply(i,r),a||(i=r=null)};return function(){var u=Date.now();s||!1!==n.leading||(s=u);var d=t-(u-s);return i=this,r=arguments,d<=0||d>t?(a&&(clearTimeout(a),a=null),s=u,o=e.apply(i,r),a||(i=r=null)):a||!1===n.trailing||(a=setTimeout(l,d)),o}}var BuilderMetaContext=react__WEBPACK_IMPORTED_MODULE_2___default().createContext({emailMode:!1,ampMode:!1,isServer:!1}),tryEval=function(e,t,n){void 0===t&&(t={});var i=e;if(\"string\"==typeof i&&i.trim()){var r=!(i.includes(\";\")||i.includes(\" return \")),o=function(){};try{_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(o=new Function(\"state\",\"var rootState = state;\\n        if (typeof Proxy !== 'undefined') {\\n          rootState = new Proxy(rootState, {\\n            set: function () {\\n              return false;\\n            },\\n            get: function (target, key) {\\n              if (key === 'state') {\\n                return state;\\n              }\\n              return target[key]\\n            }\\n          });\\n        }\\n        with (rootState) {\\n          \".concat(r?\"return (\".concat(e,\");\"):e,\";\\n        }\")))}catch(e){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&console.warn(\"Could not compile javascript\",e)}try{if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||shouldForceBrowserRuntimeInNode())return o(t||{});var a=safeDynamicRequire(\"isolated-vm\"),s=getIsolateContext(),l=makeFn(e,r,[\"state\"]),u=s.evalClosureSync(l,[new a.Reference(t||{})]);try{return JSON.parse(u)}catch(e){return u}}catch(t){n&&n.push(t),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?console.warn(\"Builder custom code error:\",t.message,\"in\",e,t.stack):isDebug()&&console.debug(\"Builder custom code error:\",t.message,\"in\",e,t.stack)}}};function toError(e){return e instanceof Error?e:new Error(String(e))}function getBuilderPixel(e){return{id:\"builder-pixel-\"+Math.random().toString(36).split(\".\")[1],\"@type\":\"@builder.io/sdk:Element\",tagName:\"img\",properties:{role:\"presentation\",\"aria-hidden\":\"true\",src:\"https://cdn.builder.io/api/v1/pixel?apiKey=\".concat(e)},responsiveStyles:{large:{height:\"0\",width:\"0\",display:\"inline-block\",opacity:\"0\",overflow:\"hidden\",pointerEvents:\"none\"}}}}function pick(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var i={};return t.forEach((function(t){i[t]=e[t]})),i}function omit(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var i=__assign({},e);return t.forEach((function(e){delete i[e]})),i}var instancesMap=new Map,wrapComponent=function(e){return function(t){var n,i=t.builderTag||\"div\",r=[\"children\"].concat((null===(n=e.inputs)||void 0===n?void 0:n.map((function(e){return e.name})))||[]),o=omit.apply(void 0,__spreadArray(__spreadArray([t],r,!1),[\"attributes\"],!1)),a=t;return e.noWrap?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e.class,__assign({attributes:o},a)):react__WEBPACK_IMPORTED_MODULE_2___default().createElement(i,__assign({},o),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e.class,__assign({},a)))}},size$1=function(e){return Object.keys(e).length};function debounce(e,t,n){var i;return void 0===n&&(n=!1),function(){var r=this,o=arguments;clearTimeout(i),i=setTimeout((function(){i=null,n||e.apply(r,o)}),t),n&&!i&&e.apply(r,o)}}var fontsLoaded=new Set,fetch$1;globalThis.fetch&&(fetch$1=globalThis.fetch),null!=fetch$1||(fetch$1=__webpack_require__(/*! node-fetch */ \"(app-pages-browser)/./node_modules/node-fetch/browser.js\"));var sizeMap={desktop:\"large\",tablet:\"medium\",mobile:\"small\",xsmall:\"xsmall\"},fetchCache={};function searchToObject$1(e){var t=(e.search||\"\").substring(1).split(\"&\"),n={};for(var i in t)if(t[i]&&\"string\"==typeof t[i]){var r=t[i].split(\"=\");n[decodeURIComponent(r[0])]=decodeURIComponent(r[1])}return n}var BuilderComponent=function(e){function t(t){var n,i,r=this;(r=e.call(this,t)||this).subscriptions=new _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Subscription,r.onStateChange=new _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(null),r.asServer=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer,r.contentRef=null,r.styleRef=null,r.rootState=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer?{}:onChange({},(function(){return r.updateState()})),r.lastJsCode=\"\",r.lastHttpRequests={},r.httpSubscriptionPerKey={},r.firstLoad=!0,r.ref=null,r.messageListener=function(e){var t;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isTrustedHostForEvent(e)){var n=e.data;switch(n.type){case\"builder.configureSdk\":var i=n.data;if(!i.contentId||i.contentId!==(null===(t=r.useContent)||void 0===t?void 0:t.id))return;r.sizes=getSizesForBreakpoints(i.breakpoints||{}),r.setState({state:Object.assign(r.rootState,{deviceSize:r.deviceSizeState,device:r.device}),updates:(r.state&&r.state.updates||0)+1,breakpoints:i.breakpoints});break;case\"builder.updateSpacer\":var o=n.data;r.rootState._spacer,r.updateState((function(e){e._spacer=o}));break;case\"builder.resetState\":var a=n.data,s=a.state;if(a.model===r.name){for(var l in r.rootState)\"function\"!=typeof r.rootState[l]&&delete r.rootState[l];Object.assign(r.rootState,s),r.setState(__assign(__assign({},r.state),{state:r.rootState,updates:(r.state&&r.state.updates||0)+1}))}break;case\"builder.resetSymbolState\":var u=n.data.state,d=(s=u.state,u.model,u.id);if(r.props.builderBlock&&r.props.builderBlock===d){for(var l in r.rootState)delete r.rootState[l];Object.assign(r.rootState,s),r.setState(__assign(__assign({},r.state),{state:r.rootState,updates:(r.state&&r.state.updates||0)+1}))}}}},r.resizeFn=function(){var e=r.deviceSizeState;e!==r.state.state.deviceSize&&r.setState(__assign(__assign({},r.state),{updates:(r.state&&r.state.updates||0)+1,state:Object.assign(r.rootState,__assign(__assign({},r.state.state),{deviceSize:e}))}))},r.resizeListener=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing?throttle(r.resizeFn,200):debounce(r.resizeFn,400),r.mounted=!1,r.updateState=function(e){var t=r.rootState;e&&e(t),r.mounted?r.setState({update:r.updateState,state:t,updates:(r.state&&r.state.updates||0)+1}):r.state=__assign(__assign({},r.state),{update:r.updateState,state:t,updates:(r.state&&r.state.updates||0)+1}),r.notifyStateChange()},r.onContentLoaded=function(e,t){if(\"page\"===r.name&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&e){var n=e.title,i=e.pageTitle,o=e.description,a=e.pageDescription;if((n||i)&&(document.title=n||i),o||a){var s=document.querySelector('meta[name=\"description\"]');s||((s=document.createElement(\"meta\")).setAttribute(\"name\",\"description\"),document.head.appendChild(s)),s.setAttribute(\"content\",o||a)}}if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&r.notifyStateChange(),r.props.contentLoaded&&r.props.contentLoaded(e,t),e&&e.inputs&&Array.isArray(e.inputs)&&e.inputs.length&&(e.state||(e.state={}),e.inputs.forEach((function(t){t&&t.name&&void 0!==t.defaultValue&&void 0===e.state[t.name]&&(e.state[t.name]=t.defaultValue)}))),e&&e.state){var l=__assign(__assign({},r.state),{updates:(r.state&&r.state.updates||0)+1,state:Object.assign(r.rootState,__assign(__assign(__assign(__assign(__assign({},r.state.state),{location:r.locationState,device:r.device}),e.state),r.externalState),{deviceSize:r.deviceSizeState}))});r.mounted?r.setState(l):r.state=l}if(e&&e.jsCode&&!r.options.codegen){var u=!1;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&(r.lastJsCode===e.jsCode?u=!0:r.lastJsCode=e.jsCode),!u){var d=r.state.state;try{new Function(\"data\",\"ref\",\"state\",\"update\",\"element\",\"Builder\",\"builder\",\"context\",e.jsCode)(e,r,d,r.state.update,r.ref,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,r.state.context)}catch(t){var c=toError(t);_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?console.warn(\"Builder custom code error:\",c.message,\"in\",e.jsCode,c.stack):isDebug()&&console.debug(\"Builder custom code error:\",c.message,\"in\",e.jsCode,c.stack)}}}if(e&&e.httpRequests&&!r.props.noAsync&&!(u=!1)){var p=function(t){var n=e.httpRequests[t];if(n&&(!r.data[t]||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing)){var i=\"object\"==typeof n&&\"@builder.io/core:Request\"===n[\"@type\"];if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser){var o=i?r.evalExpression(n.request.url):r.evalExpression(n);if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&r.lastHttpRequests[t]===o)return\"continue\";r.lastHttpRequests[t]=o,i?r.handleRequest(t,{url:o,method:n.request.method,body:n.request.body,headers:n.request.headers}):r.handleRequest(t,{url:o,method:\"GET\"});var a=r.httpSubscriptionPerKey[t];a&&a.unsubscribe();var s=r.httpSubscriptionPerKey[t]=r.onStateChange.subscribe((function(){var e=i?r.evalExpression(n.request.url):r.evalExpression(n);e!==o&&(i?r.handleRequest(t,{url:e,method:n.request.method,body:n.request.body,headers:n.request.headers}):r.handleRequest(t,{url:e,method:\"GET\"}),r.lastHttpRequests[t]=e)}));r.subscriptions.add(s)}else i?r.handleRequest(t,{url:r.evalExpression(n.request.url),method:n.request.method,body:n.request.body,headers:n.request.headers}):r.handleRequest(t,{url:r.evalExpression(n),method:\"GET\"})}};for(var f in e.httpRequests)p(f)}};var o=r.inlinedContent;o&&o.content&&(o=o.content),r.sizes=getSizesForBreakpoints((null===(n=null==o?void 0:o.meta)||void 0===n?void 0:n.breakpoints)||{});var a=null===(i=r.inlinedContent)||void 0===i?void 0:i.data;a&&Array.isArray(a.inputs)&&a.inputs.length>0&&(a.state||(a.state={}),a.inputs.forEach((function(e){e&&e.name&&void 0!==e.defaultValue&&void 0===a.state[e.name]&&(a.state[e.name]=e.defaultValue)}))),r.state={context:__assign(__assign({},t.context),{apiKey:r.props.apiKey||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.apiKey,nonce:r.props.nonce}),state:Object.assign(r.rootState,__assign(__assign(__assign(__assign({},r.inlinedContent&&r.inlinedContent.data&&r.inlinedContent.data.state),{isBrowser:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser,isServer:!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser,_hydrate:t.hydrate,location:r.locationState,deviceSize:r.deviceSizeState,device:r.device}),r.getHtmlData()),t.data)),updates:0,key:0,update:r.updateState};var s=r.props.apiKey;if(s&&s!==r.builder.apiKey&&!instancesMap.has(s)){var l=new _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder(s,void 0,void 0,!0);instancesMap.set(s,l)}if(r.inlinedContent){var u=r.inlinedContent.content||r.inlinedContent;r.onContentLoaded(null==u?void 0:u.data,getContentWithInfo(u))}return r.registerCustomComponents(),r}return __extends(t,e),Object.defineProperty(t.prototype,\"options\",{get:function(){return __assign(__assign({},t.defaults),this.props)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"name\",{get:function(){return this.props.model||this.props.modelName||this.props.name},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"element\",{get:function(){return this.ref},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"inlinedContent\",{get:function(){if(!this.isPreviewing||this.props.inlineContent)return this.props.content},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"builder\",{get:function(){return this.props.apiKey&&instancesMap.get(this.props.apiKey)||this.props.builder||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder},enumerable:!1,configurable:!0}),t.prototype.getHtmlData=function(){var e=this.inlinedContent&&this.inlinedContent.id||this.props.entry,t=e&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&document.querySelector('script[data-builder-json=\"'.concat(e,'\"],script[data-builder-state=\"').concat(e,'\"]'));if(t)try{return JSON.parse(t.innerText)}catch(e){console.warn(\"Could not parse Builder.io HTML data transfer\",e,t.innerText)}return{}},Object.defineProperty(t.prototype,\"device\",{get:function(){return this.builder.getUserAttributes().device||\"desktop\"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"locationState\",{get:function(){return __assign(__assign({},pick(this.location,\"pathname\",\"hostname\",\"search\",\"host\")),{path:this.location.pathname&&this.location.pathname.split(\"/\").slice(1)||\"\",query:searchToObject$1(this.location)})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"deviceSizeState\",{get:function(){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?this.sizes.getSizeForWidth(window.innerWidth):sizeMap[this.device]||\"large\"},enumerable:!1,configurable:!0}),t.renderInto=function(e,n,i,r){if(void 0===n&&(n={}),void 0===i&&(i=!0),void 0===r&&(r=!1),console.debug(\"BuilderPage.renderInto\",e,n,i,this),e){var o=null;if(\"string\"==typeof e?o=document.querySelector(e):e instanceof Element&&(o=e),o){var a=o.classList.contains(\"builder-hydrated\");if(!a||r){o.classList.add(\"builder-hydrated\");var s=i&&o.innerHTML.includes(\"builder-block\");if(!o.classList.contains(\"builder-component\")){var l=o.querySelector(\".builder-api-styles\")||(o.previousElementSibling&&o.previousElementSibling.matches(\".builder-api-styles\")?o.previousElementSibling:null),u=\"\";if(l)l.innerHTML.replace(/\\/\\*start:([^\\*]+?)\\*\\/([\\s\\S]*?)\\/\\*end:([^\\*]+?)\\*\\//g,(function(e,t,n){var i=null;try{i=document.querySelector('[data-emotion-css=\"'.concat(t,'\"]'))}catch(e){console.warn(e)}return i?i.innerHTML=n:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||(u+=e),e})),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){l.innerHTML=u}));var d=o.querySelector(\".builder-component\");d?o=d:s=!1}location.search.includes(\"builder.debug=true\")&&console.debug(\"hydrate\",s,o);var c=o;if(!a){var p=document.createElement(\"div\");o.insertAdjacentElement(\"beforebegin\",p),p.appendChild(o),c=p}if((_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&location.search.includes(\"builder.preview=\"))&&(s=!1),s&&o){var f=react_dom__WEBPACK_IMPORTED_MODULE_3__.render(react__WEBPACK_IMPORTED_MODULE_2___default().createElement(t,__assign({},n)),c,c.builderRootRef);return c.builderRootRef=f,f}var m=react_dom__WEBPACK_IMPORTED_MODULE_3__.render(react__WEBPACK_IMPORTED_MODULE_2___default().createElement(t,__assign({},n)),c,c.builderRootRef);return c.builderRootRef=m,m}console.debug(\"Tried to hydrate multiple times\")}}},t.prototype.registerCustomComponents=function(){if(this.props.customComponents)for(var e=0,t=this.props.customComponents;e<t.length;e++){var n=t[e];if(n){var i=n.component,r=__rest(n,[\"component\"]);_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(i,r)}}},t.prototype.componentDidMount=function(){var e,t=this;this.mounted=!0,this.asServer&&(this.asServer=!1,this.updateState((function(e){e.isBrowser=!0,e.isServer=!1}))),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe&&(null===(e=window.parent)||void 0===e||e.postMessage({type:\"builder.sdkInjected\",data:{modelName:this.name,apiKey:this.props.apiKey||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.apiKey}},\"*\")),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(window.addEventListener(\"resize\",this.resizeListener),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&window.addEventListener(\"message\",this.messageListener),(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing)&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){t.firstLoad=!1,t.reload()})),setTimeout((function(){window.dispatchEvent(new CustomEvent(\"builder:component:load\",{detail:{ref:t}}))})))},Object.defineProperty(t.prototype,\"isPreviewing\",{get:function(){return(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing&&!this.firstLoad)&&(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.previewingModel===this.name||\"BUILDER_STUDIO\"===_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.previewingModel)},enumerable:!1,configurable:!0}),t.prototype.notifyStateChange=function(){if(!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer&&this&&this.state){var e=this.state.state;this.props.onStateChange&&this.props.onStateChange(e),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&window.dispatchEvent(new CustomEvent(\"builder:component:stateChange\",{detail:{state:e,ref:this}})),this.onStateChange.next(e)}},t.prototype.processStateFromApi=function(e){return e},Object.defineProperty(t.prototype,\"location\",{get:function(){return this.props.location||(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser?location:{})},enumerable:!1,configurable:!0}),t.prototype.getCssFromFont=function(e,t){var n=e.family+(e.kind&&!e.kind.includes(\"#\")?\", \"+e.kind:\"\"),i=n.split(\",\")[0],r=e.fileUrl?e.fileUrl:e.files&&e.files.regular,o=\"\";if(r&&n&&i&&(o+='\\n@font-face {\\n  font-family: \"'.concat(n,'\";\\n  src: local(\"').concat(i,\"\\\"), url('\").concat(r,\"') format('woff2');\\n  font-display: fallback;\\n  font-weight: 400;\\n}\\n        \").trim()),e.files)for(var a in e.files){if(String(Number(a))===a){var s=e.files[a];s&&s!==r&&(o+='\\n@font-face {\\n  font-family: \"'.concat(n,\"\\\";\\n  src: url('\").concat(s,\"') format('woff2');\\n  font-display: fallback;\\n  font-weight: \").concat(a,\";\\n}\\n          \").trim())}}return o},t.prototype.componentWillUnmount=function(){this.unsubscribe(),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(window.removeEventListener(\"resize\",this.resizeListener),window.removeEventListener(\"message\",this.messageListener))},t.prototype.getFontCss=function(e){var t=this;return this.builder.allowCustomFonts&&(null==e?void 0:e.customFonts)&&e.customFonts.length&&e.customFonts.map((function(n){return t.getCssFromFont(n,e)})).join(\" \")||\"\"},t.prototype.ensureFontsLoaded=function(e){if(this.builder.allowCustomFonts&&(null==e?void 0:e.customFonts)&&Array.isArray(e.customFonts))for(var t=0,n=e.customFonts;t<n.length;t++){var i=n[t],r=i.fileUrl?i.fileUrl:i.files&&i.files.regular;if(!fontsLoaded.has(r)){var o=this.getCssFromFont(i,e);if(fontsLoaded.add(r),!o)continue;var a=document.createElement(\"style\");a.className=\"builder-custom-font\",a.setAttribute(\"data-builder-custom-font\",r),a.innerHTML=o,document.head.appendChild(a)}}},t.prototype.getCss=function(e){var t,n=null===(t=this.useContent)||void 0===t?void 0:t.id,i=(null==e?void 0:e.cssCode)||\"\";return n&&(i=i.replace(/&/g,\".builder-component-\".concat(n))),i+this.getFontCss(e)},Object.defineProperty(t.prototype,\"data\",{get:function(){var e,t=__assign(__assign(__assign({},this.inlinedContent&&(null===(e=this.inlinedContent.data)||void 0===e?void 0:e.state)),this.externalState),this.state.state);return Object.assign(this.rootState,t),t},enumerable:!1,configurable:!0}),t.prototype.componentDidUpdate=function(e){var t=this;this.props.data&&e.data!==this.props.data&&this.state.update((function(e){Object.assign(e,t.externalState)})),this.props.customComponents&&this.props.customComponents!==e.customComponents&&this.registerCustomComponents(),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&this.inlinedContent&&e.content!==this.inlinedContent&&this.onContentLoaded(this.inlinedContent.data,this.inlinedContent)},t.prototype.checkStyles=function(e){if(this.styleRef){var t=this.getCss(e);this.styleRef.innerHTML!==t&&(this.styleRef.innerHTML=t)}},t.prototype.reload=function(){this.setState({key:this.state.key+1})},Object.defineProperty(t.prototype,\"content\",{get:function(){var e=this.inlinedContent;return e&&e.content&&(e=__assign(__assign({},e),{data:e.content})),e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"externalState\",{get:function(){return __assign(__assign({},this.props.data),this.props.locale?{locale:this.props.locale}:{})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"useContent\",{get:function(){return this.content||this.state.context.builderContent},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e,t=this,n=this.content,i=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&this.externalState&&size$1(this.externalState)&&hash_sum__WEBPACK_IMPORTED_MODULE_4___default()(this.externalState),r=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing?this.name:this.props.entry;r&&!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&i&&i.length<300&&(r+=\":\"+i);var o=this.props.dataOnly?(react__WEBPACK_IMPORTED_MODULE_2___default().Fragment):\"div\",a=null===(e=this.useContent)||void 0===e?void 0:e.id;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(o,{onClick:function(e){!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||t.props.isChild||t.props.stopClickPropagationWhenEditing||e.stopPropagation()},className:\"builder-component \".concat(a?\"builder-component-\".concat(a):\"\"),\"data-name\":this.name,\"data-source\":\"Rendered by Builder.io\",key:this.state.key,ref:function(e){return t.ref=e}},react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderMetaContext.Consumer,null,(function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderMetaContext.Provider,{value:\"boolean\"==typeof t.props.ampMode?__assign(__assign({},e),{ampMode:t.props.ampMode}):e},react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderAsyncRequestsContext.Consumer,null,(function(e){var i;return t._asyncRequests=e&&e.requests,t._errors=e&&e.errors,t._logs=e&&e.logs,react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderContent,{isStatic:t.props.isStatic||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isStatic,key:(null===(i=t.inlinedContent)||void 0===i?void 0:i.id)||(\"content\"in t.props&&!t.isPreviewing?\"null-content-prop\":\"no-content-prop\"),builder:t.builder,ref:function(e){return t.contentRef=e},contentLoaded:function(e,n){return t.onContentLoaded(e,n)},options:__assign(__assign(__assign(__assign(__assign(__assign({key:r,entry:t.props.entry},n&&{initialContent:[n]}),!n&&\"content\"in t.props&&!t.isPreviewing&&{initialContent:[]}),t.props.url&&{url:t.props.url}),t.props.options),t.props.locale?{locale:t.props.locale}:{}),t.options.codegen&&{format:\"react\"}),inline:t.props.inlineContent||!t.isPreviewing&&\"content\"in t.props,contentError:t.props.contentError,modelName:t.name||\"page\",nonce:t.props.nonce},(function(e,n,i){var r;if(t.props.dataOnly)return null;i&&i.id&&(t.state.breakpoints&&(i.meta=i.meta||{},i.meta.breakpoints=t.state.breakpoints),t.state.context.builderContent=i),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){t.checkStyles(e)}));var o=t.options.codegen;if(o&&!t.Component&&(null==e?void 0:e.blocksJs)){var a=Array.from(new Set(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.components.map((function(e){return e.name})))),s=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.components.slice().reverse(),l=a.map((function(e){return s.find((function(t){return t.class&&t.name===e}))})),u=a.map((function(e){return(e||\"\").replace(/[^\\w]+/gi,\"\")})),d=l.map((function(e){return wrapComponent(e)}));t.Component=(new(Function.bind.apply(Function,__spreadArray(__spreadArray([void 0,\"jsx\",\"_css\",\"Builder\",\"builder\",\"React\",\"useBuilderState\"],u,!1),[e.blocksJs],!1)))).apply(void 0,__spreadArray([_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.css,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,(react__WEBPACK_IMPORTED_MODULE_2___default()),function(e){var t=react__WEBPACK_IMPORTED_MODULE_2___default().useState(0)[1];return react__WEBPACK_IMPORTED_MODULE_2___default().useState((function(){return onChange(e,(function(){t((function(e){return e+1}))}))}))[0]}],d,!1))}var c=(null==e?void 0:e.blocks)||[],p=c.find((function(e){var t;return null===(t=e.id)||void 0===t?void 0:t.startsWith(\"builder-pixel\")}));return e&&!p&&c.length>0&&c.push(getBuilderPixel(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.apiKey)),e?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",__assign({\"data-builder-component\":t.name,\"data-builder-content-id\":i.id},t.isPreviewing?{\"data-builder-variation-id\":i.testVariationId||i.variationId||i.id}:{}),!o&&t.getCss(e)&&react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"style\",{nonce:t.props.nonce,ref:function(e){return t.styleRef=e},className:\"builder-custom-styles\",dangerouslySetInnerHTML:{__html:t.getCss(e)}}),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderStoreContext.Provider,{value:__assign(__assign({},t.state),{rootState:t.rootState,state:t.data,content:i,renderLink:t.props.renderLink})},o&&t.Component?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(t.Component,{data:t.data,context:t.state.context}):react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlocks,{key:String(!!(null===(r=null==e?void 0:e.blocks)||void 0===r?void 0:r.length)),emailMode:t.props.emailMode,fieldName:\"blocks\",blocks:c}))):n?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",{\"data-builder-component\":t.name,className:\"builder-loading\"},t.props.children):react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",{\"data-builder-component\":t.name,className:\"builder-no-content\"})}))})))})))},t.prototype.evalExpression=function(e){var t=this,n=this.data;return String(e).replace(/{{([^}]+)}}/g,(function(e,i){return tryEval(i,n,t._errors)}))},t.prototype.handleRequest=function(e,t){return __awaiter(this,void 0,void 0,(function(){var n,i,r,o,a,s,l,u,d,c=this;return __generator(this,(function(p){return n=t.url,i=t.method,r=t.body,o=t.headers,a=JSON.stringify({url:n,method:i,body:r,headers:o}),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe&&fetchCache[a]?(this.updateState((function(t){t[e]=fetchCache[a]})),[2,fetchCache[a]]):(s=function(){return __awaiter(c,void 0,void 0,(function(){var t,s,l,u,d;return __generator(this,(function(c){switch(c.label){case 0:t=Date.now(),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||console.time(\"Fetch \"+a),c.label=1;case 1:return c.trys.push([1,4,5,6]),l={method:i,headers:o,body:r},\"GET\"===i&&delete l.body,[4,fetch$1(n,l)];case 2:return[4,c.sent().json()];case 3:return s=c.sent(),[3,6];case 4:return u=c.sent(),d=toError(u),this._errors&&this._errors.push(d),this._logs&&this._logs.push(\"Fetch to \".concat(a,\" errored in \").concat(Date.now()-t,\"ms\")),[2];case 5:return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||(console.timeEnd(\"Fetch \"+a),this._logs&&this._logs.push(\"Fetched \".concat(a,\" in \").concat(Date.now()-t,\"ms\"))),[7];case 6:return s&&(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isIframe&&(fetchCache[a]=s),this.updateState((function(t){t[e]=s}))),[2,s]}}))}))},(l=this._asyncRequests&&this._asyncRequests.find((function(e){return isRequestInfo(e)&&e.url===n})))?((u=l.promise).then((function(t){t&&c.updateState((function(n){n[e]=t}))})),[2,u]):(d=s(),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){c._asyncRequests&&c._asyncRequests.push(d)})),[2,d]))}))}))},t.prototype.unsubscribe=function(){this.subscriptions&&(this.subscriptions.unsubscribe(),this.subscriptions=new _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Subscription)},t.prototype.handleBuilderRequest=function(e,t){var n=this,i=tryEval(t,this.data,this._errors);this.subscriptions&&this.unsubscribe(),i&&this.subscriptions.add(this.builder.queueGetContent(i.model,i).subscribe((function(t){t&&n.updateState((function(n){n[e]=t}))})))},t.defaults={codegen:Boolean(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&location.href.includes(\"builder.codegen=true\"))},__decorate([debounceNextTick,__metadata(\"design:type\",Function),__metadata(\"design:paramtypes\",[]),__metadata(\"design:returntype\",void 0)],t.prototype,\"notifyStateChange\",null),t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component));function BuilderBlock(e){return e.type=\"react\",_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.Component(e)}function updateMetadata(e,t){var n=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.components.find((function(t){return\"string\"==typeof e?t.name===e:t.class===t}))||null,i=t(n);n&&i?_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(i.class||n.class,i):n&&!i||!n&&i&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(i.class,i)}function withBuilder(e,t){return BuilderBlock(t)(e),e}var isBuilderElement=function(e){return Boolean(\"object\"==typeof e&&e&&\"@builder.io/sdk:Element\"===(null==e?void 0:e[\"@type\"]))},withChildren=function(e){var t=react__WEBPACK_IMPORTED_MODULE_2___default().forwardRef((function(t,n){var i,r,o=__assign({},t),a=t.children||t.builderBlock&&t.builderBlock.children&&t.builderBlock.children.map((function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{key:e.id,block:e})})),s=null===(r=null===(i=t.builderBlock)||void 0===i?void 0:i.component)||void 0===r?void 0:r.options;return s&&Object.keys(s).forEach((function(e){var t=s[e];Array.isArray(t)&&t.every(isBuilderElement)?o[e]=t.map((function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{key:e.id,block:e})})):isBuilderElement(t)&&(o[e]=react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{block:t}))})),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e,__assign({},o,{ref:n}),a)}));return t.builderOptions={canHaveChildren:!0},t},noWrap=function(e){var t=react__WEBPACK_IMPORTED_MODULE_2___default().forwardRef((function(t,n){var i=__assign(__assign({},t),t.attributes);return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e,__assign({},i,{ref:n}))}));return t.builderOptions={noWrap:!0},t},iconUrl=\"https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-text_fields-24px%20(1).svg?alt=media&token=12177b73-0ee3-42ca-98c6-0dd003de1929\",TextComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.textRef=null,t}return __extends(t,e),t.prototype.componentDidMount=function(){this.textRef&&!/{{([^}]+)}}/.test(this.props.text)&&(this.textRef.innerHTML=this.props.text)},t.prototype.evalExpression=function(e,t){return this.allowTextEdit?String(e):String(e).replace(/{{([^}]+)}}/g,(function(e,n){return tryEval(n,t)}))},Object.defineProperty(t.prototype,\"allowTextEdit\",{get:function(){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&location.search.includes(\"builder.allowTextEdit=true\")&&!(this.props.builderBlock&&this.props.builderBlock.bindings&&(this.props.builderBlock.bindings[\"component.options.text\"]||this.props.builderBlock.bindings[\"options.text\"]||this.props.builderBlock.bindings.text))},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e=this,t={outline:\"none\",\"& p:first-of-type, & .builder-paragraph:first-of-type\":{margin:0},\"& > p, & .builder-paragraph\":{color:\"inherit\",lineHeight:\"inherit\",letterSpacing:\"inherit\",fontWeight:\"inherit\",fontSize:\"inherit\",textAlign:\"inherit\",fontFamily:\"inherit\"}};return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,null,(function(n){var i;return(null===(i=n.content.meta)||void 0===i?void 0:i.rtlMode)&&(t.direction=\"rtl\"),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\",__assign({ref:function(t){e.textRef=t},css:t,className:\"builder-text\"},{dangerouslySetInnerHTML:{__html:e.evalExpression(e.props.text||e.props.content||\"\",n.state)}})))}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Text=withBuilder(TextComponent,{name:\"Text\",static:!0,image:iconUrl,inputs:[{name:\"text\",type:\"html\",required:!0,autoFocus:!0,bubble:!0,defaultValue:\"Enter some text...\"}],defaultStyles:{lineHeight:\"normal\",height:\"auto\",textAlign:\"center\"}});function Slot(e){var t=e.name,n=(0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(BuilderStoreContext),i=!n.context.symbolId;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",__assign({css:{pointerEvents:\"auto\"}},i&&{\"builder-slot\":t}),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{child:!0,parentElementId:n.context.symbolId,dataPath:\"symbol.data.\".concat(t),blocks:n.state[t]||[]}))}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(Slot,{name:\"Slot\",description:\"Allow child blocks to be inserted into this content when used as a Symbol\",docsLink:\"https://www.builder.io/c/docs/symbols-with-blocks\",image:\"https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F3aad6de36eae43b59b52c85190fdef56\",inputs:[{name:\"name\",type:\"string\",required:!0,defaultValue:\"children\"}]});var FragmentComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return this.props.builderBlock&&this.props.builderBlock.children&&this.props.builderBlock.children.map((function(e,t){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{block:e,key:e.id,index:t})}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Fragment=withBuilder(FragmentComponent,{name:\"Core:Fragment\",canHaveChildren:!0,noWrap:!0,static:!0,hideFromInsertMenu:!0}),DEFAULT_ASPECT_RATIO$2=.7004048582995948,defaultBlocks=[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",flexShrink:\"0\",position:\"relative\",marginTop:\"30px\",textAlign:\"center\",lineHeight:\"normal\",height:\"auto\",minHeight:\"20px\",minWidth:\"20px\",overflow:\"hidden\"}},component:{name:\"Image\",options:{image:\"https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d\",backgroundPosition:\"center\",backgroundSize:\"cover\",aspectRatio:DEFAULT_ASPECT_RATIO$2}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",flexShrink:\"0\",position:\"relative\",marginTop:\"30px\",textAlign:\"center\",lineHeight:\"normal\",height:\"auto\"}},component:{name:\"Text\",options:{text:\"<p>Enter some text...</p>\"}}}],ColumnsComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),Object.defineProperty(t.prototype,\"columns\",{get:function(){return this.props.columns||[]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"gutterSize\",{get:function(){return\"number\"==typeof this.props.space?this.props.space||0:20},enumerable:!1,configurable:!0}),t.prototype.getWidth=function(e){return this.columns[e]&&this.columns[e].width||100/this.columns.length},t.prototype.getColumnWidth=function(e){var t=this.columns,n=this.gutterSize,i=this.getWidth(e),r=n*(t.length-1)*(i/100);return\"calc(\".concat(i,\"% - \").concat(r,\"px)\")},t.prototype.render=function(){var e,t,n,i,r=this,o=this.columns,a=this.gutterSize,s=(null===(i=null===(n=null===(t=this.props.builderState)||void 0===t?void 0:t.context.builderContent)||void 0===n?void 0:n.meta)||void 0===i?void 0:i.breakpoints)||{},l=getSizesForBreakpoints(s);return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{className:\"builder-columns\",css:__assign({display:\"flex\",height:\"100%\"},\"never\"!==this.props.stackColumnsAt&&(e={},e[\"@media (max-width: \".concat(\"tablet\"!==this.props.stackColumnsAt?l.small.max:l.medium.max,\"px)\")]={flexDirection:this.props.reverseColumnsWhenStacked?\"column-reverse\":\"column\",alignItems:\"stretch\"},e))},o.map((function(e,t){var n,i,o=e.link?Link:\"div\";return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),{key:t},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(o,__assign({className:\"builder-column\"},e.link?{href:e.link}:null,{css:__assign((n={display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",lineHeight:\"normal\"},n[\"& > .builder-blocks\"]={flexGrow:1},n.width=r.getColumnWidth(t),n.marginLeft=0===t?0:a,n),\"never\"!==r.props.stackColumnsAt&&(i={},i[\"@media (max-width: \".concat(\"tablet\"!==r.props.stackColumnsAt?l.small.max:l.medium.max,\"px)\")]={width:\"100%\",marginLeft:0},i))}),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{key:t,child:!0,parentElementId:r.props.builderBlock&&r.props.builderBlock.id,blocks:e.blocks,dataPath:\"component.options.columns.\".concat(t,\".blocks\")})))}))))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Columns=withBuilder(ColumnsComponent,{name:\"Columns\",static:!0,inputs:[{name:\"columns\",type:\"array\",broadcast:!0,subFields:[{name:\"blocks\",type:\"array\",hideFromUI:!0,defaultValue:defaultBlocks},{name:\"width\",type:\"number\",hideFromUI:!0,helperText:\"Width %, e.g. set to 50 to fill half of the space\"},{name:\"link\",type:\"url\",helperText:\"Optionally set a url that clicking this column will link to\"}],defaultValue:[{blocks:defaultBlocks},{blocks:defaultBlocks}],onChange:function(e){function t(){n.forEach((function(e){e.delete(\"width\")}))}var n=e.get(\"columns\");Array.isArray(n)&&(!n.find((function(e){return e.get(\"width\")}))||(n.find((function(e){return!e.get(\"width\")}))||100!==n.reduce((function(e,t){return e+t.get(\"width\")}),0))&&t())}},{name:\"space\",type:\"number\",defaultValue:20,helperText:\"Size of gap between columns\",advanced:!0},{name:\"stackColumnsAt\",type:\"string\",defaultValue:\"tablet\",helperText:\"Convert horizontal columns to vertical at what device size\",enum:[\"tablet\",\"mobile\",\"never\"],advanced:!0},{name:\"reverseColumnsWhenStacked\",type:\"boolean\",defaultValue:!1,helperText:\"When stacking columns for mobile devices, reverse the ordering\",advanced:!0}]}),EmbedComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.elementRef=null,t.scriptsInserted=new Set,t.scriptsRun=new Set,t}return __extends(t,e),t.prototype.shouldComponentUpdate=function(e){return e.content!==this.props.content},t.prototype.componentDidUpdate=function(e){this.props.content!==e.content&&this.findAndRunScripts()},t.prototype.componentDidMount=function(){this.findAndRunScripts()},t.prototype.findAndRunScripts=function(){if(this.elementRef&&\"undefined\"!=typeof window)for(var e=this.elementRef.getElementsByTagName(\"script\"),t=0;t<e.length;t++){var n=e[t];if(n.src){if(this.scriptsInserted.has(n.src))continue;this.scriptsInserted.add(n.src);var i=document.createElement(\"script\");i.async=!0,i.src=n.src,document.head.appendChild(i)}else{if(this.scriptsRun.has(n.innerText))continue;this.scriptsRun.add(n.innerText);try{new Function(n.innerText)()}catch(e){console.warn(\"Builder custom code component error:\",e)}}}},Object.defineProperty(t.prototype,\"content\",{get:function(){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer?(this.props.content||\"\").replace(/<script[\\s\\S]*?<\\/script>/g,\"\"):this.props.content},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e=this;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",{ref:function(t){return e.elementRef=t},className:\"builder-embed\",dangerouslySetInnerHTML:{__html:this.content}})},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Embed=withBuilder(EmbedComponent,{name:\"Embed\",static:!0,inputs:[{name:\"url\",type:\"url\",required:!0,defaultValue:\"\",helperText:\"e.g. enter a youtube url, google map, etc\"},{name:\"content\",type:\"html\",defaultValue:'<div style=\"padding: 20px; text-align: center\">(Choose an embed URL)<div>',hideFromUI:!0}]}),globalReplaceNodes={}||null,isShopify$1=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&\"Shopify\"in window;if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&globalReplaceNodes){var customCodeQuerySelector_1=\".builder-custom-code\";try{var allCustomCodeElements_1=Array.from(document.querySelectorAll(customCodeQuerySelector_1)),builderTemplates=document.querySelectorAll(\"template[data-template-variant-id]\");builderTemplates.length&&Array.from(builderTemplates).forEach((function(e){var t=e.content.querySelectorAll(customCodeQuerySelector_1);t.length&&(allCustomCodeElements_1=allCustomCodeElements_1.concat(Array.from(t)))})),allCustomCodeElements_1.forEach((function(e){var t=e.parentElement,n=t&&t.getAttribute(\"builder-id\");n&&(globalReplaceNodes[n]=globalReplaceNodes[n]||[],globalReplaceNodes[n].push(isShopify$1?e:e.cloneNode(!0)))}))}catch(e){console.error(\"Builder replace nodes error:\",e)}}var CustomCodeComponent=function(e){function t(t){var n,i=this;if((i=e.call(this,t)||this).elementRef=null,i.originalRef=null,i.scriptsInserted=new Set,i.scriptsRun=new Set,i.firstLoad=!0,i.replaceNodes=!1,i.state={hydrated:!1},_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser){var r=null===(n=i.props.builderBlock)||void 0===n?void 0:n.id;if(i.replaceNodes=Boolean(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(t.replaceNodes||isShopify$1)&&r&&(null==globalReplaceNodes?void 0:globalReplaceNodes[r])),i.firstLoad&&i.props.builderBlock)if(r&&(null==globalReplaceNodes?void 0:globalReplaceNodes[r])){var o=globalReplaceNodes[r].shift()||null;i.originalRef=o,0===globalReplaceNodes[r].length&&delete globalReplaceNodes[r]}else if(i.replaceNodes){var a=document.querySelectorAll(\".\".concat(i.props.builderBlock.id,\" .builder-custom-code\"));if(1===a.length){var s=a[0];i.originalRef=s,i.originalRef.remove()}}}return i}return __extends(t,e),t.prototype.shouldComponentUpdate=function(e){return e.code!==this.props.code},Object.defineProperty(t.prototype,\"noReactRender\",{get:function(){var e;return Boolean(isShopify$1&&(null===(e=this.props.code)||void 0===e?void 0:e.match(/{[{%]/g)))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isHydrating\",{get:function(){return!isShopify$1&&this.originalRef},enumerable:!1,configurable:!0}),t.prototype.componentDidUpdate=function(e){this.props.code!==e.code&&this.findAndRunScripts()},t.prototype.componentDidMount=function(){var e=this;this.firstLoad=!1,this.replaceNodes||(this.isHydrating?(this.setState({hydrated:!0}),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){return e.findAndRunScripts()}))):this.findAndRunScripts()),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&this.replaceNodes&&this.originalRef&&this.elementRef&&this.elementRef.appendChild(this.originalRef)},t.prototype.findAndRunScripts=function(){if(this.elementRef&&\"undefined\"!=typeof window)for(var e=this.elementRef.getElementsByTagName(\"script\"),t=0;t<e.length;t++){var n=e[t];if(n.src){if(this.scriptsInserted.has(n.src))continue;this.scriptsInserted.add(n.src);var i=document.createElement(\"script\");i.async=!0,i.src=n.src,document.head.appendChild(i)}else if(!n.type||[\"text/javascript\",\"application/javascript\",\"application/ecmascript\"].includes(n.type)){if(this.scriptsRun.has(n.innerText))continue;try{this.scriptsRun.add(n.innerText),new Function(n.innerText)()}catch(e){console.warn(\"Builder custom code component error:\",e)}}}},Object.defineProperty(t.prototype,\"code\",{get:function(){return(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer||this.isHydrating&&this.firstLoad)&&this.props.scriptsClientOnly?(this.props.code||\"\").replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\"\"):this.props.code},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e=this;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",__assign({ref:function(t){return e.elementRef=t},className:\"builder-custom-code\"},!this.replaceNodes&&!this.noReactRender&&{dangerouslySetInnerHTML:{__html:this.code}}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),CustomCode=withBuilder(CustomCodeComponent,{name:\"Custom Code\",static:!0,requiredPermissions:[\"editCode\"],inputs:[{name:\"code\",type:\"html\",required:!0,defaultValue:\"<p>Hello there, I am custom HTML code!</p>\",code:!0},__assign({name:\"replaceNodes\",type:\"boolean\",helperText:\"Preserve server rendered dom nodes\",advanced:!0},isShopify$1&&{defaultValue:!0}),__assign({name:\"scriptsClientOnly\",type:\"boolean\",helperText:\"Only print and run scripts on the client. Important when scripts influence DOM that could be replaced when client loads\",advanced:!0},!isShopify$1&&{defaultValue:!0})]}),IMAGE_FILE_TYPES=[\"jpeg\",\"jpg\",\"png\",\"svg\",\"webp\",\"gif\",\"jfif\",\"pjpeg\",\"pjp\",\"apng\",\"avif\",\"tif\",\"tiff\",\"heif\",\"bmp\",\"eps\",\"raw\",\"cr2\",\"nef\",\"orf\",\"sr2\",\"psd\",\"heic\",\"dib\",\"ai\"],VIDEO_FILE_TYPES=[\"mp4\",\"webm\",\"mkv\",\"flv\",\"vob\",\"ogv\",\"ogg\",\"drc\",\"gif\",\"gifv\",\"mng\",\"avi\",\"mov\",\"qt\",\"mts\",\"m2ts\",\"ts\",\"wmv\",\"yuv\",\"rm\",\"rmvb\",\"viv\",\"asf\",\"amv\",\"m4p\",\"mpeg\",\"mpe\",\"m2v\",\"m4v\",\"svi\",\"3gp\",\"3g2\",\"mxf\",\"roq\",\"nsv\",\"f4v\",\"f4p\",\"f4a\",\"f4b\"];function removeProtocol(e){return e.replace(/http(s)?:/,\"\")}function isElementInViewport(e){var t=e.getBoundingClientRect();return t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth)}function getShopifyImageUrl(e,t){if(!e||!(null==e?void 0:e.match(/cdn\\.shopify\\.com/))||!t)return e;if(\"master\"===t)return removeProtocol(e);var n=e.match(/(_\\d+x(\\d+)?)?(\\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\\?v=\\d+)?)/i);if(n){var i=e.split(n[0]),r=n[3],o=t.match(\"x\")?t:\"\".concat(t,\"x\");return removeProtocol(\"\".concat(i[0],\"_\").concat(o).concat(r))}return null}var DEFAULT_ASPECT_RATIO$1=.7041;function updateQueryParam(e,t,n){void 0===e&&(e=\"\");var i=new RegExp(\"([?&])\"+t+\"=.*?(&|$)\",\"i\"),r=-1!==e.indexOf(\"?\")?\"&\":\"?\";return e.match(i)?e.replace(i,\"$1\"+t+\"=\"+encodeURIComponent(n)+\"$2\"):e+r+t+\"=\"+encodeURIComponent(n)}function getSrcSet(e){if(!e)return e;var t=[100,200,400,800,1200,1600,2e3];if(e.match(/builder\\.io/)){var n=e,i=Number(e.split(\"?width=\")[1]);return isNaN(i)||(n=\"\".concat(n,\" \").concat(i,\"w\")),t.filter((function(e){return e!==i})).map((function(t){return\"\".concat(updateQueryParam(e,\"width\",t),\" \").concat(t,\"w\")})).concat([n]).join(\", \")}return e.match(/cdn\\.shopify\\.com/)?t.map((function(t){return[getShopifyImageUrl(e,\"\".concat(t,\"x\").concat(t)),t]})).filter((function(e){return!!e[0]})).map((function(e){var t=e[0],n=e[1];return\"\".concat(t,\" \").concat(n,\"w\")})).concat([e]).join(\", \"):e}var getSizes=function(e,t,n){var i,r,o,a,s,l,u,d;void 0===n&&(n={});var c=\"\";if(e){var p=e.split(\",\"),f=p.length;c=p.map((function(e,t){return f===t+1?e.replace(/\\([\\s\\S]*?\\)/g,\"\").trim():e})).join(\", \")}else if(t&&t.responsiveStyles){var m=[],h=!1,v=/^\\d+/,g=getSizesForBreakpoints(n);if(null===(o=null===(r=null===(i=t.responsiveStyles)||void 0===i?void 0:i.small)||void 0===r?void 0:r.width)||void 0===o?void 0:o.match(v)){h=!0;var b=\"(max-width: \".concat(g.small.max,\"px)\"),y=\"\".concat(b,\" \").concat(t.responsiveStyles.small.width.replace(\"%\",\"vw\"));m.push(y)}if(null===(l=null===(s=null===(a=t.responsiveStyles)||void 0===a?void 0:a.medium)||void 0===s?void 0:s.width)||void 0===l?void 0:l.match(v)){h=!0;b=\"(max-width: \".concat(g.medium.max,\"px)\"),y=\"\".concat(b,\" \").concat(t.responsiveStyles.medium.width.replace(\"%\",\"vw\"));m.push(y)}if(null===(d=null===(u=t.responsiveStyles)||void 0===u?void 0:u.large)||void 0===d?void 0:d.width){var _=t.responsiveStyles.large.width.replace(\"%\",\"vw\");m.push(_)}else h&&m.push(\"100vw\");m.length&&(c=m.join(\", \"))}return c},ImageComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={imageLoaded:!t.useLazyLoading,load:!t.useLazyLoading},t.pictureRef=null,t.scrollListener=null,t.intersectionObserver=null,t}return __extends(t,e),Object.defineProperty(t.prototype,\"useLazyLoading\",{get:function(){return!this.props.highPriority&&((!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||!location.search.includes(\"builder.lazyLoadImages=false\"))&&(!(!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser||!location.href.includes(\"builder.lazyLoadImages=true\"))||this.props.lazy))},enumerable:!1,configurable:!0}),t.prototype.componentWillUnmount=function(){_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(this.scrollListener&&(window.removeEventListener(\"scroll\",this.scrollListener),this.scrollListener=null),this.intersectionObserver&&this.pictureRef&&this.intersectionObserver.unobserve(this.pictureRef))},t.prototype.componentDidMount=function(){var e=this;if(this.props.lazy&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser)if(this.pictureRef&&isElementInViewport(this.pictureRef))this.setState({load:!0});else if(\"function\"==typeof IntersectionObserver&&this.pictureRef){(this.intersectionObserver=new IntersectionObserver((function(t,n){t.forEach((function(t){t.intersectionRatio>0&&(e.setState({load:!0}),e.pictureRef&&n.unobserve(e.pictureRef))}))}))).observe(this.pictureRef)}else{var t=throttle((function(n){if(e.pictureRef){var i=e.pictureRef.getBoundingClientRect(),r=window.innerHeight/2;i.top<window.innerHeight+r&&(e.setState(__assign(__assign({},e.state),{load:!0})),window.removeEventListener(\"scroll\",t),e.scrollListener=null)}}),400,{leading:!1,trailing:!0});this.scrollListener=t,window.addEventListener(\"scroll\",t,{capture:!0,passive:!0}),t()}},Object.defineProperty(t.prototype,\"image\",{get:function(){return this.props.image||this.props.src},enumerable:!1,configurable:!0}),t.prototype.getSrcSet=function(){var e=this.image;if(e&&\"string\"==typeof e&&!this.props.noWebp&&(e.match(/builder\\.io/)||e.match(/cdn\\.shopify\\.com/)))return getSrcSet(e)},t.prototype.render=function(){var e,t,n=this,i=this.props,r=i.aspectRatio,o=i.lazy,a=i.builderBlock,s=i.builderState,l=this.props.builderBlock&&this.props.builderBlock.children,u=this.props.srcset,d=getSizes(this.props.sizes,a,(null===(t=null===(e=null==s?void 0:s.context.builderContent)||void 0===e?void 0:e.meta)||void 0===t?void 0:t.breakpoints)||{}),c=this.image;u&&c&&c.includes(\"builder.io/api/v1/image\")?u.includes(c.split(\"?\")[0])||(console.debug(\"Removed given srcset\"),u=this.getSrcSet()):c&&!u&&(u=this.getSrcSet());var p=(null==a?void 0:a.id.startsWith(\"builder-pixel-\"))||this.props.highPriority,f=this.props.fitContent;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderMetaContext.Consumer,null,(function(e){var t,i=e.ampMode,a=i?\"amp-img\":\"img\",s=(!o||n.state.load||i)&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(a,__assign({},i?{layout:\"responsive\",height:n.props.height||(r?Math.round(1e3*r):void 0),width:n.props.width||(r?Math.round(1e3/r):void 0)}:null,{alt:n.props.altText,title:n.props.title,key:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&\"string\"==typeof n.image&&n.image.split(\"?\")[0]||void 0,role:n.props.altText?void 0:\"presentation\",css:__assign(__assign({opacity:i?1:n.useLazyLoading&&!n.state.imageLoaded?0:1,transition:\"opacity 0.2s ease-in-out\",objectFit:n.props.backgroundSize||\"cover\",objectPosition:n.props.backgroundPosition||\"center\"},r&&!i&&{position:\"absolute\",height:\"100%\",width:\"100%\",left:0,top:0}),i&&(t={},t[\"& img\"]={objectFit:n.props.backgroundSize,objectPosition:n.props.backgroundPosition},t)),loading:p?\"eager\":\"lazy\",fetchPriority:p?\"high\":\"auto\",className:\"builder-image\"+(n.props.className?\" \"+n.props.className:\"\"),src:n.image},!i&&{onLoad:function(){return n.setState({imageLoaded:!0})}},{srcSet:u,sizes:!i&&d?d:void 0}));return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,i?s:(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"picture\",{ref:function(e){return n.pictureRef=e}},u&&u.match(/builder\\.io/)&&!n.props.noWebp&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"source\",{srcSet:u.replace(/\\?/g,\"?format=webp&\"),type:\"image/webp\"}),s),!r||i||f&&l&&l.length?null:(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{className:\"builder-image-sizer\",css:{width:\"100%\",paddingTop:100*r+\"%\",pointerEvents:\"none\",fontSize:0}},\" \"),l&&l.length?f?l.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:e.id,block:e})})):(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\"}},l.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:e.id,block:e})}))):null)}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Image=withBuilder(ImageComponent,{name:\"Image\",static:!0,image:\"https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4\",defaultStyles:{position:\"relative\",minHeight:\"20px\",minWidth:\"20px\",overflow:\"hidden\"},canHaveChildren:!0,inputs:[{name:\"image\",type:\"file\",bubble:!0,allowedFileTypes:IMAGE_FILE_TYPES,required:!0,defaultValue:\"https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F72c80f114dc149019051b6852a9e3b7a\",onChange:function(e){e.delete(\"srcset\"),e.delete(\"noWebp\");var t,n,i=e.get(\"image\"),r=e.get(\"aspectRatio\");if(fetch(i).then((function(e){return e.blob()})).then((function(t){t.type.includes(\"svg\")&&e.set(\"noWebp\",!0)})),i&&(!r||.7041===r))return(t=i,void 0===n&&(n=6e4),new Promise((function(e,i){var r=document.createElement(\"img\"),o=!1;r.onload=function(){o=!0,e(r)},r.addEventListener(\"error\",(function(e){console.warn(\"Image load failed\",e.error),i(e.error)})),r.src=t,setTimeout((function(){o||i(new Error(\"Image load timed out\"))}),n)}))).then((function(t){var n,r=e.get(\"aspectRatio\");e.get(\"image\")!==i||r&&.7041!==r||t.width&&t.height&&(e.set(\"aspectRatio\",(n=t.height/t.width,Math.round(1e3*n)/1e3)),e.set(\"height\",t.height),e.set(\"width\",t.width))}))}},{name:\"backgroundSize\",type:\"text\",defaultValue:\"cover\",enum:[{label:\"contain\",value:\"contain\",helperText:\"The image should never get cropped\"},{label:\"cover\",value:\"cover\",helperText:\"The image should fill its box, cropping when needed\"}]},{name:\"backgroundPosition\",type:\"text\",defaultValue:\"center\",enum:[\"center\",\"top\",\"left\",\"right\",\"bottom\",\"top left\",\"top right\",\"bottom left\",\"bottom right\"]},{name:\"altText\",type:\"string\",helperText:\"Text to display when the user has images off\"},{name:\"title\",type:\"string\",helperText:\"Text to display when hovering over the asset\"},{name:\"highPriority\",type:\"boolean\",advanced:!0,helperText:\"Mark this image as high priority compared to other images on the page. This prevents lazy loading of the image and tells the browser to load this image before others on the page.\"},{name:\"height\",type:\"number\",hideFromUI:!0},{name:\"width\",type:\"number\",hideFromUI:!0},{name:\"sizes\",type:\"string\",hideFromUI:!0},{name:\"srcset\",type:\"string\",hideFromUI:!0},{name:\"lazy\",type:\"boolean\",defaultValue:!0,hideFromUI:!0},{name:\"fitContent\",type:\"boolean\",helperText:\"When child blocks are provided, fit to them instead of using the image's aspect ratio\",defaultValue:!0},{name:\"aspectRatio\",type:\"number\",helperText:\"This is the ratio of height/width, e.g. set to 1.5 for a 300px wide and 200px tall photo. Set to 0 to not force the image to maintain it's aspect ratio\",advanced:!0,defaultValue:DEFAULT_ASPECT_RATIO$1}]}),DEFAULT_ASPECT_RATIO=.7004048582995948,VideoComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.video=null,t.containerRef=null,t.lazyVideoObserver=null,t.state={load:!t.lazyLoad},t}return __extends(t,e),Object.defineProperty(t.prototype,\"lazyLoad\",{get:function(){return!1!==this.props.lazyLoad},enumerable:!1,configurable:!0}),t.prototype.updateVideo=function(){var e=this,t=this.video;if(t){[\"muted\",\"playsInline\",\"autoPlay\"].forEach((function(n){var i=n.toLowerCase();e.props[n]?t.setAttribute(i,i):t.removeAttribute(i)}))}},t.prototype.componentDidUpdate=function(){this.updateVideo()},t.prototype.componentDidMount=function(){var e=this;if(this.updateVideo(),this.lazyLoad&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser){var t=new IntersectionObserver((function(t){t.forEach((function(t){t.isIntersecting&&(e.setState((function(e){return __assign(__assign({},e),{load:!0})})),e.lazyVideoObserver&&(e.lazyVideoObserver.disconnect(),e.lazyVideoObserver=null))}))}));this.containerRef&&(t.observe(this.containerRef),this.lazyVideoObserver=t)}},t.prototype.componentWillUnmount=function(){this.lazyVideoObserver&&(this.lazyVideoObserver.disconnect(),this.lazyVideoObserver=null)},t.prototype.render=function(){var e=this,t=this.props,n=t.aspectRatio,i=t.children;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{ref:function(t){return e.containerRef=t},css:{position:\"relative\"}},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"video\",{key:this.props.video||\"no-src\",poster:this.props.posterImage,ref:function(t){return e.video=t},autoPlay:this.props.autoPlay,muted:this.props.muted,controls:this.props.controls,loop:this.props.loop,preload:this.props.preload||\"metadata\",className:\"builder-video\",css:__assign({width:\"100%\",height:\"100%\",objectFit:this.props.fit,objectPosition:this.props.position,borderRadius:1},n?{position:\"absolute\"}:null)},(!this.lazyLoad||this.state.load)&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"source\",{type:\"video/mp4\",src:this.props.video})),!n||this.props.fitContent&&i?null:(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{width:\"100%\",paddingTop:100*n+\"%\",pointerEvents:\"none\",fontSize:0}}),i&&this.props.fitContent?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\"}},i):i?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{pointerEvents:\"none\",display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\"}},i):null)},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Video=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(withChildren(VideoComponent),{name:\"Video\",canHaveChildren:!0,defaultStyles:{minHeight:\"20px\",minWidth:\"20px\"},image:\"https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-videocam-24px%20(1).svg?alt=media&token=49a84e4a-b20e-4977-a650-047f986874bb\",inputs:[{name:\"video\",type:\"file\",allowedFileTypes:VIDEO_FILE_TYPES,bubble:!0,defaultValue:\"https://cdn.builder.io/o/assets%2FYJIGb4i01jvw0SRdL5Bt%2Fd27731a526464deba0016216f5f9e570%2Fcompressed?apiKey=YJIGb4i01jvw0SRdL5Bt&token=d27731a526464deba0016216f5f9e570&alt=media&optimized=true\",required:!0},{name:\"posterImage\",type:\"file\",allowedFileTypes:IMAGE_FILE_TYPES,helperText:\"Image to show before the video plays\"},{name:\"autoPlay\",type:\"boolean\",defaultValue:!0},{name:\"controls\",type:\"boolean\",defaultValue:!1},{name:\"muted\",type:\"boolean\",defaultValue:!0},{name:\"loop\",type:\"boolean\",defaultValue:!0},{name:\"playsInline\",type:\"boolean\",defaultValue:!0},{name:\"fit\",type:\"text\",defaultValue:\"cover\",enum:[\"contain\",\"cover\",\"fill\",\"auto\"]},{name:\"preload\",type:\"text\",defaultValue:\"metadata\",enum:[\"auto\",\"metadata\",\"none\"]},{name:\"fitContent\",type:\"boolean\",helperText:\"When child blocks are provided, fit to them instead of using the aspect ratio\",defaultValue:!0,advanced:!0},{name:\"position\",type:\"text\",defaultValue:\"center\",enum:[\"center\",\"top\",\"left\",\"right\",\"bottom\",\"top left\",\"top right\",\"bottom left\",\"bottom right\"]},{name:\"height\",type:\"number\",advanced:!0},{name:\"width\",type:\"number\",advanced:!0},{name:\"aspectRatio\",type:\"number\",advanced:!0,defaultValue:DEFAULT_ASPECT_RATIO},{name:\"lazyLoad\",type:\"boolean\",helperText:'Load this video \"lazily\" - as in only when a user scrolls near the video. Recommended for optmized performance and bandwidth consumption',defaultValue:!0,advanced:!0}]}),size=function(e){return Object.keys(e).length},isShopify=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&\"Shopify\"in window,refs={};if(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser)try{Array.from(document.querySelectorAll(\"[builder-static-symbol]\")).forEach((function(e){var t=e.getAttribute(\"builder-static-symbol\");t&&(refs[t]=e)}))}catch(e){console.error(\"Builder replace nodes error:\",e)}var SymbolComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.ref=null,t.staticRef=null,t.isEditingThisSymbol=!1,t}return __extends(t,e),Object.defineProperty(t.prototype,\"placeholder\",{get:function(){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{padding:10}},\"Symbols let you reuse dynamic elements across your content. Please choose a model and entry for this symbol.\")},enumerable:!1,configurable:!0}),t.prototype.componentDidMount=function(){var e,t,n,i=this;this.useStatic&&this.staticRef&&refs[null===(e=this.props.builderBlock)||void 0===e?void 0:e.id]&&(null===(t=this.staticRef.parentNode)||void 0===t||t.replaceChild(refs[null===(n=this.props.builderBlock)||void 0===n?void 0:n.id],this.staticRef)),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.nextTick((function(){var e=i.props.symbol||{},t=e.model,n=e.entry;i.isEditingThisSymbol=Boolean(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&t===_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.editingModel&&n&&location.search.includes(\"overrides.\".concat(n)))}))},Object.defineProperty(t.prototype,\"useStatic\",{get:function(){var e;return Boolean(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&refs[null===(e=this.props.builderBlock)||void 0===e?void 0:e.id]&&!(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing))},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e,t,n=this;if(this.useStatic)return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{ref:function(e){return n.staticRef=e}});var i=this.props.symbol,r=!1;i||(r=!0);var o=this.props.dataOnly?NoWrap:this.props.builderBlock&&this.props.builderBlock.tagName||\"div\",a=i||{},s=a.model,l=a.entry,u=a.data,d=a.content,c=a.inline,p=a.ownerId,f=(null==i?void 0:i.dynamic)||this.props.dynamic;s&&(l||f)||(null===(e=null==d?void 0:d.data)||void 0===e?void 0:e.blocksJs)||c||(r=!0),this.isEditingThisSymbol&&(r=!1);var m=f?null===(t=this.props.builderBlock)||void 0===t?void 0:t.id:[s,l].join(\":\"),h=u&&size(u)&&hash_sum__WEBPACK_IMPORTED_MODULE_4___default()(u);m&&h&&h.length<300&&(m+=\":\"+h);var v=this.props.attributes||{};return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,{key:(s||\"no model\")+\":\"+(l||\"no entry\"+this.isEditingThisSymbol)},(function(e){var t,a,c,f,h,g,b,y,_,x,S,k=\"\".concat(m,\"_\").concat((null===(t=null==e?void 0:e.state)||void 0===t?void 0:t.locale)||\"Default\");return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(o,__assign({\"data-model\":s},v,{className:(v.class||v.className||\"\")+\" builder-symbol\"+((null==i?void 0:i.inline)?\" builder-inline-symbol\":\"\")+((null==i?void 0:i.dynamic)||n.props.dynamic?\" builder-dynamic-symbol\":\"\")}),r?n.placeholder:(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderComponent,__assign({},p&&{apiKey:p},(null===(a=e.state)||void 0===a?void 0:a.locale)&&{locale:e.state.locale},{isChild:!0,ref:function(e){return n.ref=e},context:__assign(__assign({},e.context),{symbolId:null===(c=n.props.builderBlock)||void 0===c?void 0:c.id}),model:s,entry:l,data:__assign(__assign(__assign({},u),!!n.props.inheritState&&omit$2(e.state,\"children\")),null===(_=null===(y=null===(b=null===(g=null===(h=null===(f=n.props.builderBlock)||void 0===f?void 0:f.component)||void 0===h?void 0:h.options)||void 0===g?void 0:g.symbol)||void 0===b?void 0:b.content)||void 0===y?void 0:y.data)||void 0===_?void 0:_.state),renderLink:e.renderLink,inlineContent:null==i?void 0:i.inline},d&&{content:d},{key:k,options:__assign(__assign({},!n.isEditingThisSymbol&&{key:k,noEditorUpdates:!0}),\"content\"===_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.singletonInstance.apiEndpoint&&l&&{query:{id:l}}),codegen:!!(null===(x=null==d?void 0:d.data)||void 0===x?void 0:x.blocksJs),hydrate:null===(S=e.state)||void 0===S?void 0:S._hydrate,builderBlock:n.props.builderBlock,dataOnly:n.props.dataOnly,nonce:e.context.nonce}),n.props.children))}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Symbol$1=withBuilder(SymbolComponent,{name:\"Symbol\",noWrap:!0,static:!0,inputs:[{name:\"symbol\",type:\"uiSymbol\"},{name:\"dataOnly\",helperText:\"Make this a data symbol that doesn't display any UI\",type:\"boolean\",defaultValue:!1,advanced:!0,hideFromUI:!0},{name:\"inheritState\",helperText:\"Inherit the parent component state and data\",type:\"boolean\",defaultValue:isShopify,advanced:!0},{name:\"renderToLiquid\",helperText:\"Render this symbols contents to liquid. Turn off to fetch with javascript and use custom targeting\",type:\"boolean\",defaultValue:isShopify,advanced:!0,hideFromUI:!0},{name:\"useChildren\",hideFromUI:!0,type:\"boolean\"}]}),ButtonComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){var e=this.props.link?Link:\"span\";return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(e,__assign({role:\"button\",href:this.props.link,target:this.props.openLinkInNewTab?\"_blank\":void 0},this.props.attributes),this.props.text)},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Button=withBuilder(ButtonComponent,{name:\"Core:Button\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F81a15681c3e74df09677dfc57a615b13\",defaultStyles:{appearance:\"none\",paddingTop:\"15px\",paddingBottom:\"15px\",paddingLeft:\"25px\",paddingRight:\"25px\",backgroundColor:\"#000000\",color:\"white\",borderRadius:\"4px\",textAlign:\"center\",cursor:\"pointer\"},inputs:[{name:\"text\",type:\"text\",defaultValue:\"Click me!\",bubble:!0},{name:\"link\",type:\"url\",bubble:!0},{name:\"openLinkInNewTab\",type:\"boolean\",defaultValue:!1,friendlyName:\"Open link in new tab\"}],static:!0,noWrap:!0}),SectionComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.ref=null,t.unmountCallbacks=[],t.state={inView:!1},t}return __extends(t,e),Object.defineProperty(t.prototype,\"renderContents\",{get:function(){return!0!==this.props.lazyLoad||this.state.inView},enumerable:!1,configurable:!0}),t.prototype.componentWillUnmount=function(){this.unmountCallbacks.forEach((function(e){return e()}))},t.prototype.componentDidMount=function(){var e=this;if(this.props.lazyLoad)if(\"undefined\"!=typeof IntersectionObserver&&this.ref){var t=new IntersectionObserver((function(t,n){t.forEach((function(t){t.intersectionRatio>0&&(e.setState({inView:!0}),e.ref&&n.unobserve(e.ref))}))}),{rootMargin:\"10px\"});t.observe(this.ref),this.unmountCallbacks.push((function(){e.ref&&t.unobserve(e.ref)}))}else this.setState({inView:!0})},t.prototype.render=function(){var e=this;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"section\",{ref:function(t){return e.ref=t},css:__assign({width:\"100%\",alignSelf:\"stretch\",flexGrow:1,boxSizing:\"border-box\",maxWidth:this.props.maxWidth,display:\"flex\",flexDirection:\"column\",alignItems:\"stretch\",marginLeft:\"auto\",marginRight:\"auto\"},this.renderContents?null:this.props.lazyStyles)},this.renderContents?(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,this.props.children,this.props.builderBlock&&this.props.builderBlock.children&&this.props.builderBlock.children.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:e.id,block:e})}))):null)},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Section=withBuilder(SectionComponent,{name:\"Core:Section\",static:!0,image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F682efef23ace49afac61748dd305c70a\",inputs:[{name:\"maxWidth\",type:\"number\",defaultValue:1200},{name:\"lazyLoad\",type:\"boolean\",defaultValue:!1,advanced:!0,description:\"Only render this section when in view\"}],defaultStyles:{paddingLeft:\"20px\",paddingRight:\"20px\",paddingTop:\"50px\",paddingBottom:\"50px\",marginTop:\"0px\",width:\"100vw\",marginLeft:\"calc(50% - 50vw)\"},canHaveChildren:!0,defaultChildren:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{textAlign:\"center\"}},component:{name:\"Text\",options:{text:\"<p><b>I am a section! My content keeps from getting too wide, so that it's easy to read even on big screens.</b></p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur</p>\"}}}]}),StateProviderComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){var e=this;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderStoreContext.Consumer,null,(function(t){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderStoreContext.Provider,{value:__assign(__assign({},t),{state:__assign(__assign({},t.state),e.props.state),context:__assign(__assign({},t.context),e.props.context)})},e.props.builderBlock&&e.props.builderBlock.children&&e.props.builderBlock.children.map((function(e,t){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{block:e,key:e.id,index:t,child:!0})})),e.props.children)}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),StateProvider=withBuilder(StateProviderComponent,{name:\"Builder:StateProvider\",canHaveChildren:!0,static:!0,noWrap:!0,hideFromInsertMenu:!0}),prefetched=new Set;function searchToObject(e){var t=(e.search||\"\").substring(1).split(\"&\"),n={};for(var i in t)if(t[i]&&\"string\"==typeof t[i]){var r=t[i].split(\"=\");n[decodeURIComponent(r[0])]=decodeURIComponent(r[1])}return n}var RouterComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.builder=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder,t.routed=!1,t.preloadQueue=0,t.onPopState=function(e){t.updateLocationState()},t.onMouseOverOrTouchStart=function(e){if(!(t.preloadQueue>4)&&!1!==t.props.preloadOnHover){var n=t.findHrefTarget(e);if(n){var i=n.getAttribute(\"href\");if(i){if(!t.isRelative(i)){var r=t.convertToRelative(i);if(!r)return;i=r}if(!i.startsWith(\"#\")&&!prefetched.has(i)){prefetched.add(i);var o=t.parseUrl(i);t.preloadQueue++;var a=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.getUserAttributes();a.urlPath=o.pathname,a.queryString=o.search;var s=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.get(t.model,{userAttributes:a,key:t.model+\":\"+o.pathname+o.search}).subscribe((function(){t.preloadQueue--,s.unsubscribe()}))}}}}},t.onClick=function(e){return __awaiter(t,void 0,void 0,(function(){var t,n,i,r;return __generator(this,(function(o){if(!1===this.props.handleRouting)return[2];if(0!==e.button||e.ctrlKey||e.defaultPrevented||e.metaKey)return[2];if(!(t=this.findHrefTarget(e)))return[2];if(t.target&&\"_client\"!==t.target)return[2];if(!(n=t.getAttribute(\"href\")))return[2];if(this.props.onRoute&&(i={url:n,anchorNode:t,preventDefault:function(){this.defaultPrevented=!0},defaultPrevented:!1},this.props.onRoute(i),i.defaultPrevented))return[2];if(!this.isRelative(n)){if(!(r=this.convertToRelative(n)))return[2];n=r}return n.startsWith(\"#\")||(e.preventDefault(),this.route(n)),[2]}))}))},t.privateState=null,t}return __extends(t,e),t.prototype.route=function(e){var t;return this.routed=!0,\"function\"==typeof(null===(t=window.history)||void 0===t?void 0:t.pushState)?(history.pushState(null,\"\",e),this.updateLocationState(),!0):(location.href=e,!1)},t.prototype.updateLocationState=function(){this.privateState&&this.privateState.update((function(e){e.location=__assign(__assign({},e.location),{pathname:location.pathname,search:location.search,path:location.pathname.split(\"/\").slice(1),query:searchToObject(location)})}))},Object.defineProperty(t.prototype,\"model\",{get:function(){return this.props.model||\"page\"},enumerable:!1,configurable:!0}),t.prototype.componentDidMount=function(){\"undefined\"!=typeof document&&(document.addEventListener(\"click\",this.onClick),window.addEventListener(\"popstate\",this.onPopState),document.addEventListener(\"mouseover\",this.onMouseOverOrTouchStart),document.addEventListener(\"touchstart\",this.onMouseOverOrTouchStart))},t.prototype.componentWillUnmount=function(){\"undefined\"!=typeof document&&(document.removeEventListener(\"click\",this.onClick),document.removeEventListener(\"mouseover\",this.onMouseOverOrTouchStart),window.removeEventListener(\"popstate\",this.onPopState),document.removeEventListener(\"touchstart\",this.onMouseOverOrTouchStart))},t.prototype.render=function(){var e=this,t=this.model;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,null,(function(n){e.privateState=n;var i=n.state&&n.state.location&&n.state.location.pathname+n.state.location.search;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{className:\"builder-router\",\"data-model\":t},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"style\",{nonce:n.context.nonce},\"\\n                @keyframes builderLoadingSpinner {\\n                  0% {\\n                    transform: rotate(0deg);\\n                  }\\n                  100% {\\n                    transform: rotate(360deg);\\n                  }\\n                }\\n                /* TODO: overridable tag */\\n                .builder-page-loading {\\n                  -webkit-animation: builderLoadingSpinner 1s infinite linear;\\n                  animation: builderLoadingSpinner 1s infinite linear;\\n                  -webkit-transform: translateZ(0);\\n                  transform: translateZ(0);\\n                  border-radius: 50%;\\n                  width: 36px;\\n                  height: 36px;\\n                  margin: 6px auto;\\n                  position: relative;\\n                  border: 1px solid transparent;\\n                  border-left: 1px solid #808284;\\n                }\\n              \"),(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderComponent,{key:i,data:e.props.data,content:e.routed?void 0:e.props.content,modelName:t,options:{key:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing?void 0:e.model+\":\"+i},nonce:n.context.nonce},e.props.children||(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{display:\"flex\"}},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\",{css:{margin:\"40vh auto\"},className:\"builder-page-loading\"}))))}))},t.prototype.findHrefTarget=function(e){for(var t=e.target;t;){if(t instanceof HTMLAnchorElement&&t.getAttribute(\"href\"))return t;if(t===e.currentTarget)break;t=t.parentElement}return null},t.prototype.isRelative=function(e){return!e.match(/^(\\/\\/|https?:\\/\\/)/i)},t.prototype.parseUrl=function(e){var t=document.createElement(\"a\");return t.href=e,t},t.prototype.convertToRelative=function(e){var t=this.parseUrl(location.href),n=this.parseUrl(e);if(t.host===n.host){var i=n.pathname+(n.search?n.search:\"\");return i.startsWith(\"#\")?null:i||\"/\"}return null},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Router=withBuilder(RouterComponent,{name:\"Core:Router\",hideFromInsertMenu:!0,inputs:[{name:\"model\",type:\"string\",defaultValue:\"page\",advanced:!0},{name:\"handleRouting\",type:\"boolean\",defaultValue:!0,advanced:!0},{name:\"preloadOnHover\",type:\"boolean\",defaultValue:!0,advanced:!0},{name:\"onRoute\",type:\"function\",advanced:!0}]});function Mutation(e){var t,n,i=react__WEBPACK_IMPORTED_MODULE_2___default().useRef(null);useWaitForSelector(e.selector,(function(t){\"afterEnd\"!==e.type&&(t.innerHTML=\"\"),t.appendChild(i.current.firstElementChild)}));var r=null===(t=e.builderBlock)||void 0===t?void 0:t.children;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\",{style:{display:\"none\"},ref:i},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{style:{display:\"inline\"},child:!0,parentElementId:null===(n=e.builderBlock)||void 0===n?void 0:n.id,dataPath:\"this.children\",blocks:r}))}function useWaitForSelector(e,t){react__WEBPACK_IMPORTED_MODULE_2___default().useLayoutEffect((function(){try{var n=document.querySelector(e);if(n)return void t(n)}catch(e){console.warn(e)}var i=new MutationObserver((function(){try{var n=document.querySelector(e);n&&(i.disconnect(),t(n))}catch(e){console.warn(e)}}));return i.observe(document.body,{attributes:!0,subtree:!0,characterData:!0}),function(){i.disconnect()}}),[e])}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(Mutation,{name:\"Builder:Mutation\",canHaveChildren:!0,noWrap:!0,hideFromInsertMenu:!0,inputs:[{name:\"type\",type:\"string\",defaultValue:\"replace\",enum:[{label:\"Replace\",value:\"replace\",helperText:\"Replace the contents of this site region with content from Builder\"},{label:\"Append\",value:\"afterEnd\",helperText:\"Append Builder content after the chosen site region\"}]},{name:\"selector\",type:\"builder:domSelector\"}]});var get=function(e,t,n){var i=String.prototype.split.call(t,/[,[\\].]+?/).filter(Boolean).reduce((function(e,t){return null!=e?e[t]:e}),e);return void 0===i||i===e?n:i},MULTIPART_CONTENT_TYPE=\"multipart/form-data\",JSON_CONTENT_TYPE=\"application/json\",ENCODED_CONTENT_TYPE=\"application/x-www-form-urlencoded\",FormComponent=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.ref=null,t.state={state:\"unsubmitted\",responseData:null,formErrorMessage:\"\"},t}return __extends(t,e),Object.defineProperty(t.prototype,\"submissionState\",{get:function(){return _builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&this.props.previewState||this.state.state},enumerable:!1,configurable:!0}),t.prototype.render=function(){var e=this;return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Consumer,null,(function(t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderStoreContext.Provider,{value:__assign(__assign({},t),{state:__assign(__assign({},t.state),{formErrorMessage:e.state.formErrorMessage})})},(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"form\",__assign({},e.props.validate?{}:{noValidate:!0},{ref:function(t){return e.ref=t},action:!e.props.sendWithJs&&e.props.action?e.props.action:void 0,method:e.props.method,name:e.props.name,onSubmit:function(t){var n,i=e.props.sendWithJs||\"email\"===e.props.sendSubmissionsTo;if(\"zapier\"===e.props.sendSubmissionsTo)t.preventDefault();else if(i){if(!e.props.action&&\"email\"!==e.props.sendSubmissionsTo)return void t.preventDefault();t.preventDefault();var r=t.currentTarget,o=e.props.customHeaders||{},a=void 0,s=new FormData(r),l=Array.from(t.currentTarget.querySelectorAll(\"input,select,textarea\")).filter((function(e){return!!e.name})).filter((function(e){return!!e.name&&(\"radio\"!==e.type||e.checked)})).map((function(e){var t,n=e.name;if(e instanceof HTMLInputElement)if(\"radio\"===e.type){if(e.checked)return{key:n,value:t=e.value}}else if(\"checkbox\"===e.type)t=e.checked;else if(\"number\"===e.type||\"range\"===e.type){var i=e.valueAsNumber;isNaN(i)||(t=i)}else t=\"file\"===e.type?e.files:e.value;else t=e.value;return{key:n,value:t}})),u=e.props.contentType;if(\"email\"===e.props.sendSubmissionsTo&&(u=MULTIPART_CONTENT_TYPE),Array.from(l).forEach((function(e){var t=e.value;(t instanceof File||Array.isArray(t)&&t[0]instanceof File||t instanceof FileList)&&(u=MULTIPART_CONTENT_TYPE)})),u===MULTIPART_CONTENT_TYPE)a=s;else if(u===JSON_CONTENT_TYPE){var d={};Array.from(l).forEach((function(e){var t=e.value,n=e.key;set(d,n,t)})),a=JSON.stringify(d)}else{if(u!==ENCODED_CONTENT_TYPE)return void console.error(\"Unsupported content type: \",u);a=Array.from(l).map((function(e){var t=e.value,n=e.key;return encodeURIComponent(n)+\"=\"+encodeURIComponent(t)})).join(\"&\")}u&&u!==MULTIPART_CONTENT_TYPE&&(i&&(null===(n=e.props.action)||void 0===n?void 0:n.includes(\"zapier.com\"))||(o[\"content-type\"]=u));var c=new CustomEvent(\"presubmit\",{detail:{body:a}});if(e.ref&&(e.ref.dispatchEvent(c),c.defaultPrevented))return;e.setState(__assign(__assign({},e.state),{state:\"sending\"}));var p=\"\".concat(\"dev\"===_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.env?\"http://localhost:5000\":\"https://builder.io\",\"/api/v1/form-submit?apiKey=\").concat(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.apiKey,\"&to=\").concat(btoa(e.props.sendSubmissionsToEmail||\"\"),\"&name=\").concat(encodeURIComponent(e.props.name||\"\"));fetch(\"email\"===e.props.sendSubmissionsTo?p:e.props.action,{body:a,headers:o,method:e.props.method||\"post\"}).then((function(t){return __awaiter(e,void 0,void 0,(function(){var e,n,i,r,o;return __generator(this,(function(a){switch(a.label){case 0:return(n=t.headers.get(\"content-type\"))&&-1!==n.indexOf(JSON_CONTENT_TYPE)?[4,t.json()]:[3,2];case 1:return e=a.sent(),[3,4];case 2:return[4,t.text()];case 3:e=a.sent(),a.label=4;case 4:if(!t.ok&&this.props.errorMessagePath&&(i=get(e,this.props.errorMessagePath))&&(\"string\"!=typeof i&&(i=JSON.stringify(i)),this.setState(__assign(__assign({},this.state),{formErrorMessage:i}))),this.setState(__assign(__assign({},this.state),{responseData:e,state:t.ok?\"success\":\"error\"})),t.ok){if(r=new CustomEvent(\"submit:success\",{detail:{res:t,body:e}}),this.ref){if(this.ref.dispatchEvent(r),r.defaultPrevented)return[2];!1!==this.props.resetFormOnSubmit&&this.ref.reset()}this.props.successUrl&&(this.ref?(o=new CustomEvent(\"route\",{detail:{url:this.props.successUrl}}),this.ref.dispatchEvent(o),o.defaultPrevented||(location.href=this.props.successUrl)):location.href=this.props.successUrl)}return[2]}}))}))}),(function(t){var n=new CustomEvent(\"submit:error\",{detail:{error:t}});e.ref&&(e.ref.dispatchEvent(n),n.defaultPrevented)||e.setState(__assign(__assign({},e.state),{responseData:t,state:\"error\"}))}))}}},e.props.attributes),e.props.builderBlock&&e.props.builderBlock.children&&e.props.builderBlock.children.map((function(e,t){return (0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlock$1,{key:e.id,block:e})})),\"error\"===e.submissionState&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{dataPath:\"errorMessage\",blocks:e.props.errorMessage}),\"sending\"===e.submissionState&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{dataPath:\"sendingMessage\",blocks:e.props.sendingMessage}),\"error\"===e.submissionState&&e.state.responseData&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"pre\",{className:\"builder-form-error-text\",css:{padding:10,color:\"red\",textAlign:\"center\"}},JSON.stringify(e.state.responseData,null,2)),\"success\"===e.submissionState&&(0,_emotion_core__WEBPACK_IMPORTED_MODULE_1__.jsx)(BuilderBlocks,{dataPath:\"successMessage\",blocks:e.props.successMessage})))}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Form=withBuilder(FormComponent,{name:\"Form:Form\",defaults:{responsiveStyles:{large:{marginTop:\"15px\",paddingBottom:\"15px\"}}},image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fef36d2a846134910b64b88e6d18c5ca5\",inputs:[{name:\"sendSubmissionsTo\",type:\"string\",enum:[{label:\"Send to email\",value:\"email\",helperText:\"Send form submissions to the email address of your choosing\"},{label:\"Custom\",value:\"custom\",helperText:\"Handle where the form requests go manually with a little code, e.g. to your own custom backend\"}],defaultValue:\"email\"},{name:\"sendSubmissionsToEmail\",type:\"string\",required:!0,defaultValue:\"your@email.com\",showIf:'options.get(\"sendSubmissionsTo\") === \"email\"'},{name:\"sendWithJs\",type:\"boolean\",helperText:\"Set to false to use basic html form action\",defaultValue:!0,showIf:'options.get(\"sendSubmissionsTo\") === \"custom\"'},{name:\"name\",type:\"string\",defaultValue:\"My form\"},{name:\"action\",type:\"string\",helperText:\"URL to send the form data to\",showIf:'options.get(\"sendSubmissionsTo\") === \"custom\"'},{name:\"contentType\",type:\"string\",defaultValue:JSON_CONTENT_TYPE,advanced:!0,enum:[JSON_CONTENT_TYPE,MULTIPART_CONTENT_TYPE,ENCODED_CONTENT_TYPE],showIf:'options.get(\"sendSubmissionsTo\") === \"custom\" && options.get(\"sendWithJs\") === true'},{name:\"method\",type:\"string\",showIf:'options.get(\"sendSubmissionsTo\") === \"custom\"',defaultValue:\"POST\",advanced:!0},{name:\"previewState\",type:\"string\",enum:[\"unsubmitted\",\"sending\",\"success\",\"error\"],defaultValue:\"unsubmitted\",helperText:'Choose a state to edit, e.g. choose \"success\" to show what users see on success and edit the message',showIf:'options.get(\"sendSubmissionsTo\") !== \"zapier\" && options.get(\"sendWithJs\") === true'},{name:\"successUrl\",type:\"url\",helperText:\"Optional URL to redirect the user to on form submission success\",showIf:'options.get(\"sendSubmissionsTo\") !== \"zapier\" && options.get(\"sendWithJs\") === true'},{name:\"resetFormOnSubmit\",type:\"boolean\",showIf:function(e){return\"custom\"===e.get(\"sendSubmissionsTo\")&&!0===e.get(\"sendWithJs\")},advanced:!0},{name:\"successMessage\",type:\"uiBlocks\",hideFromUI:!0,defaultValue:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Text\",options:{text:\"<span>Thanks!</span>\"}}}]},{name:\"validate\",type:\"boolean\",defaultValue:!0,advanced:!0},{name:\"errorMessagePath\",type:\"text\",advanced:!0,helperText:'Path to where to get the error message from in a JSON response to display to the user, e.g. \"error.message\" for a response like { \"error\": { \"message\": \"this username is taken\" }}'},{name:\"errorMessage\",type:\"uiBlocks\",hideFromUI:!0,defaultValue:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},bindings:{\"component.options.text\":\"state.formErrorMessage || block.component.options.text\"},component:{name:\"Text\",options:{text:\"<span>Form submission error :( Please check your answers and try again</span>\"}}}]},{name:\"sendingMessage\",type:\"uiBlocks\",hideFromUI:!0,defaultValue:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Text\",options:{text:\"<span>Sending...</span>\"}}}]},__assign(__assign({name:\"customHeaders\",type:\"map\"},{valueType:{type:\"string\"}}),{advanced:!0,showIf:'options.get(\"sendSubmissionsTo\") === \"custom\" && options.get(\"sendWithJs\") === true'})],noWrap:!0,canHaveChildren:!0,defaultChildren:[{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Text\",options:{text:\"<span>Enter your name</span>\"}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Form:Input\",options:{name:\"name\",placeholder:\"Jane Doe\"}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Text\",options:{text:\"<span>Enter your email</span>\"}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Form:Input\",options:{name:\"email\",placeholder:\"jane@doe.com\"}}},{\"@type\":\"@builder.io/sdk:Element\",responsiveStyles:{large:{marginTop:\"10px\"}},component:{name:\"Form:SubmitButton\",options:{text:\"Submit\"}}}]}),FormInputComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"input\",__assign({key:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&this.props.defaultValue?this.props.defaultValue:\"default-key\",placeholder:this.props.placeholder,type:this.props.type,name:this.props.name},void 0===this.props.value?{defaultValue:this.props.defaultValue}:{value:this.props.value},{required:this.props.required},this.props.attributes))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),FormInput=withBuilder(FormInputComponent,{name:\"Form:Input\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fad6f37889d9e40bbbbc72cdb5875d6ca\",inputs:[{name:\"type\",type:\"text\",enum:[\"text\",\"number\",\"email\",\"url\",\"checkbox\",\"radio\",\"range\",\"date\",\"datetime-local\",\"search\",\"tel\",\"time\",\"file\",\"month\",\"week\",\"password\",\"color\",\"hidden\"],defaultValue:\"text\"},{name:\"name\",type:\"string\",required:!0,helperText:'Every input in a form needs a unique name describing what it takes, e.g. \"email\"'},{name:\"placeholder\",type:\"string\",defaultValue:\"Hello there\",helperText:\"Text to display when there is no value\"},{name:\"defaultValue\",type:\"string\"},{name:\"value\",type:\"string\",advanced:!0},{name:\"required\",type:\"boolean\",helperText:\"Is this input required to be filled out to submit a form\",defaultValue:!1}],noWrap:!0,static:!0,defaultStyles:{paddingTop:\"10px\",paddingBottom:\"10px\",paddingLeft:\"10px\",paddingRight:\"10px\",borderRadius:\"3px\",borderWidth:\"1px\",borderStyle:\"solid\",borderColor:\"#ccc\"}}),FormSubmitButtonComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"button\",__assign({type:\"submit\"},this.props.attributes),this.props.text)},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),FormSubmitButton=withBuilder(FormSubmitButtonComponent,{name:\"Form:SubmitButton\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fdf2820ffed1f4349a94c40b3221f5b98\",defaultStyles:{appearance:\"none\",paddingTop:\"15px\",paddingBottom:\"15px\",paddingLeft:\"25px\",paddingRight:\"25px\",backgroundColor:\"#3898EC\",color:\"white\",borderRadius:\"4px\",cursor:\"pointer\"},inputs:[{name:\"text\",type:\"text\",defaultValue:\"Click me\"}],static:!0,noWrap:!0}),LabelComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"label\",__assign({htmlFor:this.props.for},this.props.attributes),this.props.text&&react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\",{className:\"builder-label-text\",dangerouslySetInnerHTML:{__html:this.props.text}}),this.props.builderBlock&&this.props.builderBlock.children&&this.props.builderBlock.children.map((function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlock$1,{key:e.id,block:e})})))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Label=withBuilder(LabelComponent,{name:\"Form:Label\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F9322342f04b545fb9a8091cd801dfb5b\",inputs:[{name:\"text\",type:\"html\",richText:!0,defaultValue:\"Label\"},{name:\"for\",type:\"text\",helperText:\"The name of the input this label is for\",advanced:!0}],noWrap:!0,static:!0,canHaveChildren:!0}),FormSelectComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){var e=this.props.options;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"select\",__assign({value:this.props.value,key:_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&this.props.defaultValue?this.props.defaultValue:\"default-key\",defaultValue:this.props.defaultValue,name:this.props.name,required:this.props.required},this.props.attributes),e&&e.map((function(e){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"option\",{value:e.value},e.name||e.value)})))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),FormSelect=withBuilder(FormSelectComponent,{name:\"Form:Select\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F83acca093fb24aaf94dee136e9a4b045\",defaultStyles:{alignSelf:\"flex-start\"},inputs:[{name:\"options\",type:\"list\",required:!0,subFields:[{name:\"value\",type:\"text\",required:!0},{name:\"name\",type:\"text\"}],defaultValue:[{value:\"option 1\"},{value:\"option 2\"}]},{name:\"name\",type:\"string\",required:!0,helperText:'Every select in a form needs a unique name describing what it gets, e.g. \"email\"'},{name:\"defaultValue\",type:\"string\"},{name:\"value\",type:\"string\",advanced:!0},{name:\"required\",type:\"boolean\",defaultValue:!1}],static:!0,noWrap:!0}),TextAreaComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(){return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"textarea\",__assign({placeholder:this.props.placeholder,name:this.props.name,value:this.props.value,defaultValue:this.props.defaultValue,required:this.props.required},this.props.attributes))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),TextArea=withBuilder(TextAreaComponent,{name:\"Form:TextArea\",image:\"https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Ff74a2f3de58c4c3e939204e5b6b8f6c3\",inputs:[{advanced:!0,name:\"value\",type:\"string\"},{name:\"name\",type:\"string\",required:!0,helperText:'Every input in a form needs a unique name describing what it gets, e.g. \"email\"'},{name:\"defaultValue\",type:\"string\"},{name:\"placeholder\",type:\"string\",defaultValue:\"Hello there\"},{name:\"required\",type:\"boolean\",defaultValue:!1}],defaultStyles:{paddingTop:\"10px\",paddingBottom:\"10px\",paddingLeft:\"10px\",paddingRight:\"10px\",borderRadius:\"3px\",borderWidth:\"1px\",borderStyle:\"solid\",borderColor:\"#ccc\"},static:!0,noWrap:!0}),ImgComponent=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.getSrcSet=function(){var e=this.props.image;if(e&&\"string\"==typeof e&&e.match(/builder\\.io/))return getSrcSet(e)},t.prototype.render=function(){var e=this.props.attributes||{},t=this.getSrcSet(),n=e.style,i=__rest(e,[\"style\"]),r={objectFit:this.props.backgroundSize,objectPosition:this.props.backgroundPosition,aspectRatio:this.props.aspectRatio},o=__assign(__assign({},r),n);return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"img\",__assign({loading:\"lazy\"},i,{src:this.props.image||e.src,srcSet:t,alt:this.props.altText,title:this.props.title,style:o,className:\"builder-raw-img\"}))},t}((react__WEBPACK_IMPORTED_MODULE_2___default().Component)),Img=withBuilder(ImgComponent,{name:\"Raw:Img\",hideFromInsertMenu:!0,image:\"https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4\",inputs:[{name:\"image\",bubble:!0,type:\"file\",allowedFileTypes:IMAGE_FILE_TYPES,required:!0},{name:\"backgroundSize\",type:\"text\",defaultValue:\"cover\",enum:[{label:\"contain\",value:\"contain\",helperText:\"The image should never get cropped\"},{label:\"cover\",value:\"cover\",helperText:\"The image should fill it's box, cropping when needed\"}]},{name:\"backgroundPosition\",type:\"text\",defaultValue:\"center\",enum:[\"center\",\"top\",\"left\",\"right\",\"bottom\",\"top left\",\"top right\",\"bottom left\",\"bottom right\"]},{name:\"altText\",type:\"string\",helperText:\"Text to display when the user has images off\"},{name:\"title\",type:\"string\",helperText:\"Text to display when hovering over the asset\"},{name:\"aspectRatio\",type:\"number\",helperText:\"This is the ratio of height/width, e.g. set to 1.5 for a 300px wide and 200px tall photo. Set to 0 to not force the image to maintain it's aspect ratio\",advanced:!0,defaultValue:.7041}],noWrap:!0}),RawText=function(e){var t=e.attributes||{};return react__WEBPACK_IMPORTED_MODULE_2__.createElement(\"span\",{className:(null==t?void 0:t.class)||(null==t?void 0:t.className),dangerouslySetInnerHTML:{__html:e.text||\"\"}})};_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(RawText,{name:\"Builder:RawText\",hideFromInsertMenu:!0,inputs:[{name:\"text\",bubble:!0,type:\"longText\",required:!0}]});var filterWithCustomTargetingScript='function filterWithCustomTargeting(e,t,n,r){var i={query:t,startDate:n,endDate:r},o=e.date&&new Date(e.date)||new Date;return!(i.startDate&&new Date(i.startDate)>o)&&(!(i.endDate&&new Date(i.endDate)<o)&&(!i.query||!i.query.length||i.query.every((function(t){return objectMatchesQuery(e,t)}))))}function isString(e){return\"string\"==typeof e}function isNumber(e){return\"number\"==typeof e}function objectMatchesQuery(e,t){return function(){var n=t.property,r=t.operator,i=t.value;if(t&&\"urlPath\"===t.property&&t.value&&\"string\"==typeof t.value&&\"/\"!==t.value&&t.value.endsWith(\"/\")&&(i=t.value.slice(0,-1)),!n||!r)return!0;if(Array.isArray(i))return\"isNot\"===r?i.every((function(t){return objectMatchesQuery(e,{property:n,operator:r,value:t})})):!!i.find((function(t){return objectMatchesQuery(e,{property:n,operator:r,value:t})}));var o=e[n];if(Array.isArray(o))return o.includes(i);switch(r){case\"is\":return o===i;case\"isNot\":return o!==i;case\"contains\":return(isString(o)||Array.isArray(o))&&o.includes(String(i));case\"startsWith\":return isString(o)&&o.startsWith(String(i));case\"endsWith\":return isString(o)&&o.endsWith(String(i));case\"greaterThan\":return isNumber(o)&&isNumber(i)&&o>i;case\"lessThan\":return isNumber(o)&&isNumber(i)&&o<i;case\"greaterThanOrEqualTo\":return isNumber(o)&&isNumber(i)&&o>=i;case\"lessThanOrEqualTo\":return isNumber(o)&&isNumber(i)&&o<=i}return!1}()}';function filterWithCustomTargeting(e,t,n,i){var r={query:t,startDate:n,endDate:i},o=e.date&&new Date(e.date)||new Date;return!(r.startDate&&new Date(r.startDate)>o)&&(!(r.endDate&&new Date(r.endDate)<o)&&(!r.query||!r.query.length||r.query.every((function(t){return objectMatchesQuery(e,t)}))))}function isString(e){return\"string\"==typeof e}function isNumber(e){return\"number\"==typeof e}function objectMatchesQuery(e,t){return function(){var n=t.property,i=t.operator,r=t.value;if(t&&\"urlPath\"===t.property&&t.value&&\"string\"==typeof t.value&&\"/\"!==t.value&&t.value.endsWith(\"/\")&&(r=t.value.slice(0,-1)),!n||!i)return!0;if(Array.isArray(r))return\"isNot\"===i?r.every((function(t){return objectMatchesQuery(e,{property:n,operator:i,value:t})})):!!r.find((function(t){return objectMatchesQuery(e,{property:n,operator:i,value:t})}));var o=e[n];if(Array.isArray(o))return o.includes(r);switch(i){case\"is\":return o===r;case\"isNot\":return o!==r;case\"contains\":return(isString(o)||Array.isArray(o))&&o.includes(String(r));case\"startsWith\":return isString(o)&&o.startsWith(String(r));case\"endsWith\":return isString(o)&&o.endsWith(String(r));case\"greaterThan\":return isNumber(o)&&isNumber(r)&&o>r;case\"lessThan\":return isNumber(o)&&isNumber(r)&&o<r;case\"greaterThanOrEqualTo\":return isNumber(o)&&isNumber(r)&&o>=r;case\"lessThanOrEqualTo\":return isNumber(o)&&isNumber(r)&&o<=r}return!1}()}function PersonalizationContainer(e){var t,n,i,r,o,a,s,l,u,d,c,p,f,m,h,v,g,b,y,_,x,S=Boolean(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isBrowser&&(null===(t=window.__hydrated)||void 0===t?void 0:t[null===(n=e.builderBlock)||void 0===n?void 0:n.id])),k=(0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null),B=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(S),w=B[0],C=B[1],E=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1),R=E[0],T=E[1],I=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);I[0];var j=I[1],O=(0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(BuilderStoreContext);if((0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){var e;C(!0),T(!0);var t=_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.userAttributesChanged.subscribe((function(){j((function(e){return e+1}))})),n=[function(){return t.unsubscribe()}];if(!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&!_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing){var i=P[0];null===(e=k.current)||void 0===e||e.dispatchEvent(new CustomEvent(\"builder.variantLoaded\",{detail:{variant:i||\"default\",content:O.content},bubbles:!0}));var r=new IntersectionObserver((function(e){e.forEach((function(e){var t;e.isIntersecting&&(null===(t=k.current)||void 0===t||t.dispatchEvent(new CustomEvent(\"builder.variantDisplayed\",{detail:{variant:i||\"default\",content:O.content},bubbles:!0})))}))}));r.observe(k.current),n.push((function(){return r.disconnect()}))}return function(){n.forEach((function(e){return e()}))}}),[]),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isServer)return react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",__assign({},e.attributes,{style:__assign({opacity:1,transition:\"opacity 0.2s ease-in-out\"},null===(i=e.attributes)||void 0===i?void 0:i.style),className:\"builder-personalization-container \".concat(e.attributes.className)}),null===(r=e.variants)||void 0===r?void 0:r.map((function(t,n){var i,r;return react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"template\",{key:n,\"data-variant-id\":(null===(i=e.builderBlock)||void 0===i?void 0:i.id)+n},react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlocks,{blocks:t.blocks,parentElementId:null===(r=e.builderBlock)||void 0===r?void 0:r.id,dataPath:\"component.options.variants.\".concat(n,\".blocks\"),child:!0}))})),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"script\",{nonce:O.context.nonce,id:\"variants-script-\".concat(null===(o=e.builderBlock)||void 0===o?void 0:o.id),dangerouslySetInnerHTML:{__html:getPersonalizationScript(e.variants,(null===(a=e.builderBlock)||void 0===a?void 0:a.id)||\"none\",null===(s=e.builderState.state)||void 0===s?void 0:s.locale)}}),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlocks,{blocks:null===(l=e.builderBlock)||void 0===l?void 0:l.children,parentElementId:null===(u=e.builderBlock)||void 0===u?void 0:u.id,dataPath:\"this.children\",child:!0})),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"script\",{nonce:O.context.nonce,dangerouslySetInnerHTML:{__html:\"\\n         window.__hydrated = window.__hydrated || {};\\n         window.__hydrated['\".concat(null===(d=e.builderBlock)||void 0===d?void 0:d.id,\"'] = true;\\n        \").replace(/\\s+/g,\" \")}}));var P=(e.variants||[]).filter((function(t){var n;return filterWithCustomTargeting(__assign(__assign({},(null===(n=e.builderState.state)||void 0===n?void 0:n.locale)?{locale:e.builderState.state.locale}:{}),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.builder.getUserAttributes()),t.query,t.startDate,t.endDate)}));return react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment),null,react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\",__assign({ref:k},e.attributes,{style:__assign({opacity:w?1:0,transition:\"opacity 0.2s ease-in-out\"},null===(c=e.attributes)||void 0===c?void 0:c.style),className:\"builder-personalization-container \".concat(e.attributes.className).concat(w?\"\":\" builder-personalization-container-loading\")}),R&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&\"number\"==typeof e.previewingIndex&&e.previewingIndex<((null===(p=e.variants)||void 0===p?void 0:p.length)||0)?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlocks,{blocks:null===(m=null===(f=e.variants)||void 0===f?void 0:f[e.previewingIndex])||void 0===m?void 0:m.blocks,parentElementId:null===(h=e.builderBlock)||void 0===h?void 0:h.id,dataPath:\"component.options.variants.\".concat(e.previewingIndex,\".blocks\"),child:!0}):R&&_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing&&\"number\"!=typeof e.previewingIndex||!w||!P.length?react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlocks,{blocks:null===(v=e.builderBlock)||void 0===v?void 0:v.children,parentElementId:null===(g=e.builderBlock)||void 0===g?void 0:g.id,dataPath:\"this.children\",child:!0}):react__WEBPACK_IMPORTED_MODULE_2___default().createElement(BuilderBlocks,{blocks:null===(b=P[0])||void 0===b?void 0:b.blocks,parentElementId:null===(y=e.builderBlock)||void 0===y?void 0:y.id,dataPath:\"component.options.variants.\".concat(null===(_=e.variants)||void 0===_?void 0:_.indexOf(P[0]),\".blocks\"),child:!0})),react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"script\",{nonce:O.context.nonce,dangerouslySetInnerHTML:{__html:\"\\n         window.__hydrated = window.__hydrated || {};\\n         window.__hydrated['\".concat(null===(x=e.builderBlock)||void 0===x?void 0:x.id,\"'] = true;\\n        \").replace(/\\s+/g,\" \")}}))}function getPersonalizationScript(e,t,n){return\"\\n      (function() {\\n        function getCookie(name) {\\n          var nameEQ = name + \\\"=\\\";\\n          var ca = document.cookie.split(';');\\n          for(var i=0;i < ca.length;i++) {\\n              var c = ca[i];\\n              while (c.charAt(0)==' ') c = c.substring(1,c.length);\\n              if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\\n          }\\n          return null;\\n        }\\n        function removeVariants() {\\n          variants.forEach(function (template, index) {\\n            document.querySelector('template[data-variant-id=\\\"' + \\\"\".concat(t,\"\\\" + index + '\\\"]').remove();\\n          });\\n          document.getElementById('variants-script-\").concat(t,\"').remove();\\n        }\\n\\n        var attributes = JSON.parse(getCookie(\\\"\").concat(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.attributesCookieName,'\") || \"{}\");\\n        ').concat(n?'attributes.locale = \"'.concat(n,'\";'):\"\",\"\\n        var variants = \").concat(JSON.stringify(null==e?void 0:e.map((function(e){return{query:e.query,startDate:e.startDate,endDate:e.endDate}}))),\";\\n        var winningVariantIndex = variants.findIndex(function(variant) {\\n          return filterWithCustomTargeting(\\n            attributes,\\n            variant.query,\\n            variant.startDate,\\n            variant.endDate\\n          );\\n        });\\n        var isDebug = location.href.includes('builder.debug=true');\\n        if (isDebug) {\\n          console.debug('PersonalizationContainer', {\\n            attributes: attributes,\\n            variants: variants,\\n            winningVariantIndex: winningVariantIndex,\\n            });\\n        }\\n        if (winningVariantIndex !== -1) {\\n          var winningVariant = document.querySelector('template[data-variant-id=\\\"' + \\\"\").concat(t,\"\\\" + winningVariantIndex + '\\\"]');\\n          if (winningVariant) {\\n            var parentNode = winningVariant.parentNode;\\n            var newParent = parentNode.cloneNode(false);\\n            newParent.appendChild(winningVariant.content.firstChild);\\n            parentNode.parentNode.replaceChild(newParent, parentNode);\\n            if (isDebug) {\\n              console.debug('PersonalizationContainer', 'Winning variant Replaced:', winningVariant);\\n            }\\n          }\\n        } else if (variants.length > 0) {\\n          removeVariants();\\n        }\\n        \").concat(filterWithCustomTargetingScript,\"\\n      })();\\n    \").replace(/\\s+/g,\" \")}function useIsPreviewing(){var e=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1),t=e[0],n=e[1];return (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){(_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isEditing||_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isPreviewing)&&n(!0)}),[]),t}_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.registerComponent(PersonalizationContainer,{name:\"PersonalizationContainer\",noWrap:!0,friendlyName:\"Dynamic Container\",image:\"https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F37229ed30d8c41dfb10b8cca1992053a\",canHaveChildren:!0,inputs:[{name:\"variants\",defaultValue:[],behavior:\"personalizationVariantList\",type:\"list\",subFields:[{name:\"name\",type:\"text\",localized:!1},{name:\"query\",friendlyName:\"Targeting rules\",type:\"BuilderQuery\",defaultValue:[],localized:!1},{name:\"startDate\",type:\"date\",localized:!1},{name:\"endDate\",type:\"date\",localized:!1},{name:\"blocks\",type:\"UiBlocks\",hideFromUI:!0,defaultValue:[]}]}]}),_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.isReact=!0,_builder_io_sdk__WEBPACK_IMPORTED_MODULE_0__.Builder.sdkInfo={name:\"react\",version:SDK_VERSION};\n//# sourceMappingURL=builder-react.es5.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@builder.io/react/dist/builder-react.es5.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@builder.io/sdk/dist/index.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/@builder.io/sdk/dist/index.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BehaviorSubject: () => (/* binding */ BehaviorSubject),\n/* harmony export */   Builder: () => (/* binding */ Builder),\n/* harmony export */   BuilderComponent: () => (/* binding */ BuilderComponent),\n/* harmony export */   Subscription: () => (/* binding */ Subscription),\n/* harmony export */   builder: () => (/* binding */ builder),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/@builder.io/sdk/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var hash_sum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hash-sum */ \"(app-pages-browser)/./node_modules/hash-sum/hash-sum.js\");\n/* harmony import */ var hash_sum__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hash_sum__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n(function () {\n  if (typeof window === 'undefined' || typeof window.CustomEvent === 'function') return false;\n\n  function CustomEvent(event, params) {\n    params = params || { bubbles: false, cancelable: false, detail: null };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  }\n\n  window.CustomEvent = CustomEvent;\n})();\n\nvar isSafari = typeof window !== 'undefined' &&\r\n    /^((?!chrome|android).)*safari/i.test(window.navigator.userAgent);\r\nvar isClient = typeof window !== 'undefined';\r\n// TODO: queue all of these in a debounceNextTick\r\nfunction nextTick(fn) {\r\n    // if (typeof process !== 'undefined' && process.nextTick) {\r\n    //   console.log('process.nextTick?');\r\n    //   process.nextTick(fn);\r\n    //   return;\r\n    // }\r\n    // FIXME: fix the real safari issue of this randomly not working\r\n    if (!isClient || isSafari || typeof MutationObserver === 'undefined') {\r\n        setTimeout(fn);\r\n        return;\r\n    }\r\n    var called = 0;\r\n    var observer = new MutationObserver(function () { return fn(); });\r\n    var element = document.createTextNode('');\r\n    observer.observe(element, {\r\n        characterData: true,\r\n    });\r\n    // tslint:disable-next-line\r\n    element.data = String((called = ++called));\r\n}\n\nvar PROPERTY_NAME_DENY_LIST = Object.freeze(['__proto__', 'prototype', 'constructor']);\r\n// TODO: unit tests\r\nvar QueryString = /** @class */ (function () {\r\n    function QueryString() {\r\n    }\r\n    QueryString.parseDeep = function (queryString) {\r\n        var obj = this.parse(queryString);\r\n        return this.deepen(obj);\r\n    };\r\n    QueryString.stringifyDeep = function (obj) {\r\n        var map = this.flatten(obj);\r\n        return this.stringify(map);\r\n    };\r\n    QueryString.parse = function (queryString) {\r\n        var query = {};\r\n        var pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\r\n        for (var i = 0; i < pairs.length; i++) {\r\n            var pair = pairs[i].split('=');\r\n            // TODO: node support?\r\n            try {\r\n                query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\r\n            }\r\n            catch (error) {\r\n                // Ignore malformed URI components\r\n            }\r\n        }\r\n        return query;\r\n    };\r\n    QueryString.stringify = function (map) {\r\n        var str = '';\r\n        for (var key in map) {\r\n            if (map.hasOwnProperty(key)) {\r\n                var value = map[key];\r\n                if (str) {\r\n                    str += '&';\r\n                }\r\n                str += encodeURIComponent(key) + '=' + encodeURIComponent(value);\r\n            }\r\n        }\r\n        return str;\r\n    };\r\n    QueryString.deepen = function (map) {\r\n        // FIXME; Should be type Tree = Record<string, string | Tree>\r\n        // requires a typescript upgrade.\r\n        var output = {};\r\n        for (var k in map) {\r\n            var t = output;\r\n            var parts = k.split('.');\r\n            var key = parts.pop();\r\n            for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\r\n                var part = parts_1[_i];\r\n                assertAllowedPropertyName(part);\r\n                t = t[part] = t[part] || {};\r\n            }\r\n            t[key] = map[k];\r\n        }\r\n        return output;\r\n    };\r\n    QueryString.flatten = function (obj, _current, _res) {\r\n        if (_res === void 0) { _res = {}; }\r\n        for (var key in obj) {\r\n            var value = obj[key];\r\n            var newKey = _current ? _current + '.' + key : key;\r\n            if (value && typeof value === 'object') {\r\n                this.flatten(value, newKey, _res);\r\n            }\r\n            else {\r\n                _res[newKey] = value;\r\n            }\r\n        }\r\n        return _res;\r\n    };\r\n    return QueryString;\r\n}());\r\nfunction assertAllowedPropertyName(name) {\r\n    if (PROPERTY_NAME_DENY_LIST.indexOf(name) >= 0)\r\n        throw new Error(\"Property name \\\"\".concat(name, \"\\\" is not allowed\"));\r\n}\n\nvar Subscription = /** @class */ (function () {\r\n    function Subscription(listeners, listener) {\r\n        this.listeners = listeners;\r\n        this.listener = listener;\r\n        this.unsubscribed = false;\r\n        this.otherSubscriptions = [];\r\n    }\r\n    Object.defineProperty(Subscription.prototype, \"closed\", {\r\n        get: function () {\r\n            return this.unsubscribed;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Subscription.prototype.add = function (subscription) {\r\n        this.otherSubscriptions.push(subscription);\r\n    };\r\n    Subscription.prototype.unsubscribe = function () {\r\n        if (this.unsubscribed) {\r\n            return;\r\n        }\r\n        if (this.listener && this.listeners) {\r\n            var index = this.listeners.indexOf(this.listener);\r\n            if (index > -1) {\r\n                this.listeners.splice(index, 1);\r\n            }\r\n        }\r\n        this.otherSubscriptions.forEach(function (sub) { return sub.unsubscribe(); });\r\n        this.unsubscribed = true;\r\n    };\r\n    return Subscription;\r\n}());\r\n// TODO: follow minimal basic spec: https://github.com/tc39/proposal-observable\r\nvar BehaviorSubject = /** @class */ (function () {\r\n    function BehaviorSubject(value) {\r\n        var _this = this;\r\n        this.value = value;\r\n        this.listeners = [];\r\n        this.errorListeners = [];\r\n        this.then = function () {\r\n            var _a;\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return (_a = _this.toPromise()).then.apply(_a, args);\r\n        };\r\n    }\r\n    BehaviorSubject.prototype.next = function (value) {\r\n        this.value = value;\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            listener(value);\r\n        }\r\n    };\r\n    // TODO: implement this as PIPE instead\r\n    BehaviorSubject.prototype.map = function (fn) {\r\n        var newSubject = new BehaviorSubject(fn(this.value));\r\n        // TODO: on destroy delete these\r\n        this.subscribe(function (val) {\r\n            newSubject.next(fn(val));\r\n        });\r\n        this.catch(function (err) {\r\n            newSubject.error(err);\r\n        });\r\n        return newSubject;\r\n    };\r\n    BehaviorSubject.prototype.catch = function (errorListener) {\r\n        this.errorListeners.push(errorListener);\r\n        return new Subscription(this.errorListeners, errorListener);\r\n    };\r\n    BehaviorSubject.prototype.error = function (error) {\r\n        for (var _i = 0, _a = this.errorListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            listener(error);\r\n        }\r\n    };\r\n    BehaviorSubject.prototype.subscribe = function (listener, errorListener) {\r\n        this.listeners.push(listener);\r\n        if (errorListener) {\r\n            this.errorListeners.push(errorListener);\r\n        }\r\n        return new Subscription(this.listeners, listener);\r\n    };\r\n    BehaviorSubject.prototype.toPromise = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var subscription = _this.subscribe(function (value) {\r\n                resolve(value);\r\n                subscription.unsubscribe();\r\n            }, function (err) {\r\n                reject(err);\r\n                subscription.unsubscribe();\r\n            });\r\n        });\r\n    };\r\n    BehaviorSubject.prototype.promise = function () {\r\n        return this.toPromise();\r\n    };\r\n    return BehaviorSubject;\r\n}());\n\nvar State = {\r\n    Pending: 'Pending',\r\n    Fulfilled: 'Fulfilled',\r\n    Rejected: 'Rejected',\r\n};\r\nfunction isFunction(val) {\r\n    return val && typeof val === 'function';\r\n}\r\nfunction isObject(val) {\r\n    return val && typeof val === 'object';\r\n}\r\nvar TinyPromise = /** @class */ (function () {\r\n    function TinyPromise(executor) {\r\n        this._state = State.Pending;\r\n        this._handlers = [];\r\n        this._value = null;\r\n        executor(this._resolve.bind(this), this._reject.bind(this));\r\n    }\r\n    TinyPromise.prototype._resolve = function (x) {\r\n        var _this = this;\r\n        if (x instanceof TinyPromise) {\r\n            x.then(this._resolve.bind(this), this._reject.bind(this));\r\n        }\r\n        else if (isObject(x) || isFunction(x)) {\r\n            var called_1 = false;\r\n            try {\r\n                var thenable = x.then;\r\n                if (isFunction(thenable)) {\r\n                    thenable.call(x, function (result) {\r\n                        if (!called_1)\r\n                            _this._resolve(result);\r\n                        called_1 = true;\r\n                        return undefined;\r\n                    }, function (error) {\r\n                        if (!called_1)\r\n                            _this._reject(error);\r\n                        called_1 = true;\r\n                        return undefined;\r\n                    });\r\n                }\r\n                else {\r\n                    this._fulfill(x);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (!called_1) {\r\n                    this._reject(ex);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._fulfill(x);\r\n        }\r\n    };\r\n    TinyPromise.prototype._fulfill = function (result) {\r\n        var _this = this;\r\n        this._state = State.Fulfilled;\r\n        this._value = result;\r\n        this._handlers.forEach(function (handler) { return _this._callHandler(handler); });\r\n    };\r\n    TinyPromise.prototype._reject = function (error) {\r\n        var _this = this;\r\n        this._state = State.Rejected;\r\n        this._value = error;\r\n        this._handlers.forEach(function (handler) { return _this._callHandler(handler); });\r\n    };\r\n    TinyPromise.prototype._isPending = function () {\r\n        return this._state === State.Pending;\r\n    };\r\n    TinyPromise.prototype._isFulfilled = function () {\r\n        return this._state === State.Fulfilled;\r\n    };\r\n    TinyPromise.prototype._isRejected = function () {\r\n        return this._state === State.Rejected;\r\n    };\r\n    TinyPromise.prototype._addHandler = function (onFulfilled, onRejected) {\r\n        this._handlers.push({\r\n            onFulfilled: onFulfilled,\r\n            onRejected: onRejected,\r\n        });\r\n    };\r\n    TinyPromise.prototype._callHandler = function (handler) {\r\n        if (this._isFulfilled() && isFunction(handler.onFulfilled)) {\r\n            handler.onFulfilled(this._value);\r\n        }\r\n        else if (this._isRejected() && isFunction(handler.onRejected)) {\r\n            handler.onRejected(this._value);\r\n        }\r\n    };\r\n    TinyPromise.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        switch (this._state) {\r\n            case State.Pending: {\r\n                return new TinyPromise(function (resolve, reject) {\r\n                    _this._addHandler(function (value) {\r\n                        nextTick(function () {\r\n                            try {\r\n                                if (isFunction(onFulfilled)) {\r\n                                    resolve(onFulfilled(value));\r\n                                }\r\n                                else {\r\n                                    resolve(value);\r\n                                }\r\n                            }\r\n                            catch (ex) {\r\n                                reject(ex);\r\n                            }\r\n                        });\r\n                    }, function (error) {\r\n                        nextTick(function () {\r\n                            try {\r\n                                if (isFunction(onRejected)) {\r\n                                    resolve(onRejected(error));\r\n                                }\r\n                                else {\r\n                                    reject(error);\r\n                                }\r\n                            }\r\n                            catch (ex) {\r\n                                reject(ex);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n            case State.Fulfilled: {\r\n                return new TinyPromise(function (resolve, reject) {\r\n                    nextTick(function () {\r\n                        try {\r\n                            if (isFunction(onFulfilled)) {\r\n                                resolve(onFulfilled(_this._value));\r\n                            }\r\n                            else {\r\n                                resolve(_this._value);\r\n                            }\r\n                        }\r\n                        catch (ex) {\r\n                            reject(ex);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            case State.Rejected: {\r\n                return new TinyPromise(function (resolve, reject) {\r\n                    nextTick(function () {\r\n                        try {\r\n                            if (isFunction(onRejected)) {\r\n                                resolve(onRejected(_this._value));\r\n                            }\r\n                            else {\r\n                                reject(_this._value);\r\n                            }\r\n                        }\r\n                        catch (ex) {\r\n                            reject(ex);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n    return TinyPromise;\r\n}());\r\nvar Promise$1 = (typeof Promise !== 'undefined' ? Promise : TinyPromise);\n\n// Webpack workaround to conditionally require certain external modules\r\n// only on the server and not bundle them on the client\r\nvar serverOnlyRequire;\r\ntry {\r\n    // tslint:disable-next-line:no-eval\r\n    serverOnlyRequire = eval('require');\r\n}\r\ncatch (err) {\r\n    // all good\r\n    serverOnlyRequire = (function () { return null; });\r\n}\r\nvar serverOnlyRequire$1 = serverOnlyRequire;\n\nfunction promiseResolve(value) {\r\n    return new Promise$1(function (resolve) { return resolve(value); });\r\n}\r\n// Adapted from https://raw.githubusercontent.com/developit/unfetch/master/src/index.mjs\r\nfunction tinyFetch(url, options) {\r\n    if (options === void 0) { options = {}; }\r\n    return new Promise$1(function (resolve, reject) {\r\n        var request = new XMLHttpRequest();\r\n        request.open(options.method || 'get', url, true);\r\n        if (options.headers) {\r\n            for (var i in options.headers) {\r\n                request.setRequestHeader(i, options.headers[i]);\r\n            }\r\n        }\r\n        request.withCredentials = options.credentials === 'include';\r\n        request.onload = function () {\r\n            resolve(response());\r\n        };\r\n        request.onerror = reject;\r\n        request.send(options.body);\r\n        function response() {\r\n            var keys = [];\r\n            var all = [];\r\n            var headers = {};\r\n            var header = undefined;\r\n            request\r\n                .getAllResponseHeaders()\r\n                .replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function (_match, _key, value) {\r\n                var key = _key;\r\n                keys.push((key = key.toLowerCase()));\r\n                all.push([key, value]);\r\n                header = headers[key];\r\n                headers[key] = header ? \"\".concat(header, \",\").concat(value) : value;\r\n                return '';\r\n            });\r\n            return {\r\n                ok: ((request.status / 100) | 0) === 2,\r\n                status: request.status,\r\n                statusText: request.statusText,\r\n                url: request.responseURL,\r\n                clone: response,\r\n                text: function () { return promiseResolve(request.responseText); },\r\n                json: function () { return promiseResolve(request.responseText).then(JSON.parse); },\r\n                blob: function () { return promiseResolve(new Blob([request.response])); },\r\n                headers: {\r\n                    keys: function () { return keys; },\r\n                    entries: function () { return all; },\r\n                    get: function (n) { return headers[n.toLowerCase()]; },\r\n                    has: function (n) { return n.toLowerCase() in headers; },\r\n                },\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction getFetch() {\r\n    // If fetch is defined, in the browser, via polyfill, or in a Cloudflare worker, use it.\r\n    var _fetch = undefined;\r\n    if (globalThis.fetch) {\r\n        _fetch !== null && _fetch !== void 0 ? _fetch : (_fetch = globalThis.fetch);\r\n    }\r\n    else if (typeof window === 'undefined') {\r\n        // If fetch is not defined, in a Node.js environment, use node-fetch.\r\n        try {\r\n            // node-fetch@^3 is ESM only, and will throw error on require.\r\n            _fetch !== null && _fetch !== void 0 ? _fetch : (_fetch = serverOnlyRequire$1('node-fetch'));\r\n        }\r\n        catch (e) {\r\n            // If node-fetch is not installed, use tiny-fetch.\r\n            console.warn('node-fetch is not installed. consider polyfilling fetch or installing node-fetch.');\r\n            console.warn(e);\r\n        }\r\n    }\r\n    // Otherwise, use tiny-fetch.\r\n    return _fetch !== null && _fetch !== void 0 ? _fetch : tinyFetch;\r\n}\n\nfunction assign(target) {\r\n    var to = Object(target);\r\n    for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n            // Skip over if undefined or null\r\n            for (var nextKey in nextSource) {\r\n                // Avoid bugs when hasOwnProperty is shadowed\r\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                    to[nextKey] = nextSource[nextKey];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return to;\r\n}\n\nfunction throttle(func, wait, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var context;\r\n    var args;\r\n    var result;\r\n    var timeout = null;\r\n    var previous = 0;\r\n    var later = function () {\r\n        previous = options.leading === false ? 0 : Date.now();\r\n        timeout = null;\r\n        result = func.apply(context, args);\r\n        if (!timeout)\r\n            context = args = null;\r\n    };\r\n    return function () {\r\n        var now = Date.now();\r\n        if (!previous && options.leading === false)\r\n            previous = now;\r\n        var remaining = wait - (now - previous);\r\n        context = this;\r\n        args = arguments;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            result = func.apply(context, args);\r\n            if (!timeout)\r\n                context = args = null;\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(later, remaining);\r\n        }\r\n        return result;\r\n    };\r\n}\n\nvar camelCaseToKebabCase = function (str) {\r\n    return str ? str.replace(/([A-Z])/g, function (g) { return \"-\".concat(g[0].toLowerCase()); }) : '';\r\n};\r\nvar Animator = /** @class */ (function () {\r\n    function Animator() {\r\n    }\r\n    Animator.prototype.bindAnimations = function (animations) {\r\n        for (var _i = 0, animations_1 = animations; _i < animations_1.length; _i++) {\r\n            var animation = animations_1[_i];\r\n            switch (animation.trigger) {\r\n                case 'pageLoad':\r\n                    this.triggerAnimation(animation);\r\n                    break;\r\n                case 'hover':\r\n                    this.bindHoverAnimation(animation);\r\n                    break;\r\n                case 'scrollInView':\r\n                    this.bindScrollInViewAnimation(animation);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Animator.prototype.warnElementNotPresent = function (id) {\r\n        console.warn(\"Cannot animate element: element with ID \".concat(id, \" not found!\"));\r\n    };\r\n    Animator.prototype.augmentAnimation = function (animation, element) {\r\n        var stylesUsed = this.getAllStylesUsed(animation);\r\n        var computedStyle = getComputedStyle(element);\r\n        // const computedStyle = getComputedStyle(element);\r\n        // // FIXME: this will break if original load is in one reponsive size then resize to another hmmm\r\n        // Need to use transform instead of left since left can change on screen sizes\r\n        var firstStyles = animation.steps[0].styles;\r\n        var lastStyles = animation.steps[animation.steps.length - 1].styles;\r\n        var bothStyles = [firstStyles, lastStyles];\r\n        // FIXME: this won't work as expected for augmented animations - may need the editor itself to manage this\r\n        for (var _i = 0, bothStyles_1 = bothStyles; _i < bothStyles_1.length; _i++) {\r\n            var styles = bothStyles_1[_i];\r\n            for (var _a = 0, stylesUsed_1 = stylesUsed; _a < stylesUsed_1.length; _a++) {\r\n                var style = stylesUsed_1[_a];\r\n                if (!(style in styles)) {\r\n                    styles[style] = computedStyle[style];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Animator.prototype.getAllStylesUsed = function (animation) {\r\n        var properties = [];\r\n        for (var _i = 0, _a = animation.steps; _i < _a.length; _i++) {\r\n            var step = _a[_i];\r\n            for (var key in step.styles) {\r\n                if (properties.indexOf(key) === -1) {\r\n                    properties.push(key);\r\n                }\r\n            }\r\n        }\r\n        return properties;\r\n    };\r\n    Animator.prototype.triggerAnimation = function (animation) {\r\n        var _this = this;\r\n        // TODO: do for ALL elements\r\n        var elements = Array.prototype.slice.call(document.getElementsByClassName(animation.elementId || animation.id || ''));\r\n        if (!elements.length) {\r\n            this.warnElementNotPresent(animation.elementId || animation.id || '');\r\n            return;\r\n        }\r\n        Array.from(elements).forEach(function (element) {\r\n            _this.augmentAnimation(animation, element);\r\n            // TODO: do this properly, may have other animations of different properties\r\n            // TODO: only override the properties\r\n            // TODO: if there is an entrance and hover animation, the transition duration will get effed\r\n            // element.setAttribute('style', '');\r\n            // const styledUsed = this.getAllStylesUsed(animation);\r\n            element.style.transition = 'none';\r\n            element.style.transitionDelay = '0';\r\n            assign(element.style, animation.steps[0].styles);\r\n            // TODO: queue/batch these timeouts\r\n            // TODO: only include properties explicitly set in the animation\r\n            // using Object.keys(styles)\r\n            setTimeout(function () {\r\n                element.style.transition = \"all \".concat(animation.duration, \"s \").concat(camelCaseToKebabCase(animation.easing));\r\n                if (animation.delay) {\r\n                    element.style.transitionDelay = animation.delay + 's';\r\n                }\r\n                assign(element.style, animation.steps[1].styles);\r\n                // TODO: maybe remove/reset transitoin property after animation duration\r\n                // TODO: queue timers\r\n                setTimeout(function () {\r\n                    // TODO: what if has other transition (reset back to what it was)\r\n                    element.style.transition = '';\r\n                    element.style.transitionDelay = '';\r\n                }, (animation.delay || 0) * 1000 + animation.duration * 1000 + 100);\r\n            });\r\n        });\r\n    };\r\n    Animator.prototype.bindHoverAnimation = function (animation) {\r\n        var _this = this;\r\n        // TODO: is it multiple binding when editing...?\r\n        // TODO: unbind on element remove\r\n        // TODO: apply to ALL elements\r\n        var elements = Array.prototype.slice.call(document.getElementsByClassName(animation.elementId || animation.id || ''));\r\n        if (!elements.length) {\r\n            this.warnElementNotPresent(animation.elementId || animation.id || '');\r\n            return;\r\n        }\r\n        Array.from(elements).forEach(function (element) {\r\n            _this.augmentAnimation(animation, element);\r\n            var defaultState = animation.steps[0].styles;\r\n            var hoverState = animation.steps[1].styles;\r\n            function attachDefaultState() {\r\n                assign(element.style, defaultState);\r\n            }\r\n            function attachHoverState() {\r\n                assign(element.style, hoverState);\r\n            }\r\n            attachDefaultState();\r\n            element.addEventListener('mouseenter', attachHoverState);\r\n            element.addEventListener('mouseleave', attachDefaultState);\r\n            // TODO: queue/batch these timeouts\r\n            setTimeout(function () {\r\n                element.style.transition = \"all \".concat(animation.duration, \"s \").concat(camelCaseToKebabCase(animation.easing));\r\n                if (animation.delay) {\r\n                    element.style.transitionDelay = animation.delay + 's';\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // TODO: unbind on element remove\r\n    Animator.prototype.bindScrollInViewAnimation = function (animation) {\r\n        var _this = this;\r\n        // TODO: apply to ALL matching elements\r\n        var elements = Array.prototype.slice.call(document.getElementsByClassName(animation.elementId || animation.id || ''));\r\n        if (!elements.length) {\r\n            this.warnElementNotPresent(animation.elementId || animation.id || '');\r\n            return;\r\n        }\r\n        // TODO: if server side rendered and scrolled into view don't animate...\r\n        Array.from(elements).forEach(function (element) {\r\n            _this.augmentAnimation(animation, element);\r\n            var triggered = false;\r\n            var pendingAnimation = false;\r\n            function immediateOnScroll() {\r\n                if (!triggered && isScrolledIntoView(element)) {\r\n                    triggered = true;\r\n                    pendingAnimation = true;\r\n                    setTimeout(function () {\r\n                        assign(element.style, animation.steps[1].styles);\r\n                        if (!animation.repeat) {\r\n                            document.removeEventListener('scroll', onScroll);\r\n                        }\r\n                        setTimeout(function () {\r\n                            pendingAnimation = false;\r\n                            if (!animation.repeat) {\r\n                                element.style.transition = '';\r\n                                element.style.transitionDelay = '';\r\n                            }\r\n                        }, (animation.duration + (animation.delay || 0)) * 1000 + 100);\r\n                    });\r\n                }\r\n                else if (animation.repeat &&\r\n                    triggered &&\r\n                    !pendingAnimation &&\r\n                    !isScrolledIntoView(element)) {\r\n                    // we want to repeat the animation every time the the element is out of view and back again\r\n                    triggered = false;\r\n                    assign(element.style, animation.steps[0].styles);\r\n                }\r\n            }\r\n            // TODO: roll all of these in one for more efficiency of checking all the rects\r\n            var onScroll = throttle(immediateOnScroll, 200, { leading: false });\r\n            // TODO: fully in view or partially\r\n            function isScrolledIntoView(elem) {\r\n                var rect = elem.getBoundingClientRect();\r\n                var windowHeight = window.innerHeight;\r\n                var thresholdPercent = (animation.thresholdPercent || 0) / 100;\r\n                var threshold = thresholdPercent * windowHeight;\r\n                // TODO: partial in view? or what if element is larger than screen itself\r\n                return (rect.bottom > threshold && rect.top < windowHeight - threshold // Element is peeking top or bottom\r\n                // (rect.top > 0 && rect.bottom < window.innerHeight) || // element fits within the screen and is fully on screen (not hanging off at all)\r\n                // (rect.top < 0 && rect.bottom > window.innerHeight) // element is larger than the screen and hangs over the top and bottom\r\n                );\r\n            }\r\n            var defaultState = animation.steps[0].styles;\r\n            function attachDefaultState() {\r\n                assign(element.style, defaultState);\r\n            }\r\n            attachDefaultState();\r\n            // TODO: queue/batch these timeouts!\r\n            setTimeout(function () {\r\n                element.style.transition = \"all \".concat(animation.duration, \"s \").concat(camelCaseToKebabCase(animation.easing));\r\n                if (animation.delay) {\r\n                    element.style.transitionDelay = animation.delay + 's';\r\n                }\r\n            });\r\n            // TODO: one listener for everything\r\n            document.addEventListener('scroll', onScroll, { capture: true, passive: true });\r\n            // Do an initial check\r\n            immediateOnScroll();\r\n        });\r\n    };\r\n    return Animator;\r\n}());\n\n/**\r\n * RegExp to match field-content in RFC 7230 sec 3.2\r\n *\r\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n * field-vchar   = VCHAR / obs-text\r\n * obs-text      = %x80-FF\r\n */\r\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(request, response) {\r\n        this.request = request;\r\n        this.response = response;\r\n    }\r\n    Cookies.prototype.get = function (name) {\r\n        var header = this.request.headers['cookie'];\r\n        if (!header) {\r\n            return;\r\n        }\r\n        var match = header.match(getPattern(name));\r\n        if (!match) {\r\n            return;\r\n        }\r\n        var value = match[1];\r\n        return value;\r\n    };\r\n    Cookies.prototype.set = function (name, value, opts) {\r\n        var res = this.response;\r\n        var req = this.request;\r\n        var headers = res.getHeader('Set-Cookie') || [];\r\n        // TODO: just make this always true\r\n        var secure = this.secure !== undefined\r\n            ? !!this.secure\r\n            : req.protocol === 'https' || req.connection.encrypted;\r\n        var cookie = new Cookie(name, value, opts);\r\n        if (typeof headers === 'string') {\r\n            headers = [headers];\r\n        }\r\n        if (!secure && opts && opts.secure) {\r\n            throw new Error('Cannot send secure cookie over unencrypted connection');\r\n        }\r\n        cookie.secure = secure;\r\n        if (opts && 'secure' in opts) {\r\n            cookie.secure = !!opts.secure;\r\n        }\r\n        pushCookie(headers, cookie);\r\n        var setHeader = res.setHeader;\r\n        setHeader.call(res, 'Set-Cookie', headers);\r\n        return this;\r\n    };\r\n    return Cookies;\r\n}());\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie(name, value, attrs) {\r\n        this.path = '/';\r\n        this.domain = undefined;\r\n        this.httpOnly = true;\r\n        this.sameSite = false;\r\n        this.secure = false;\r\n        this.overwrite = false;\r\n        this.name = '';\r\n        this.value = '';\r\n        if (!fieldContentRegExp.test(name)) {\r\n            throw new TypeError('argument name is invalid');\r\n        }\r\n        if (value && !fieldContentRegExp.test(value)) {\r\n            throw new TypeError('argument value is invalid');\r\n        }\r\n        if (!value) {\r\n            this.expires = new Date(0);\r\n        }\r\n        this.name = name;\r\n        this.value = value || '';\r\n        if (attrs.expires) {\r\n            this.expires = attrs.expires;\r\n        }\r\n        if (attrs.secure) {\r\n            this.secure = attrs.secure;\r\n        }\r\n    }\r\n    Cookie.prototype.toString = function () {\r\n        return \"\".concat(this.name, \"=\").concat(this.value);\r\n    };\r\n    Cookie.prototype.toHeader = function () {\r\n        var header = this.toString();\r\n        if (this.maxAge) {\r\n            this.expires = new Date(Date.now() + this.maxAge);\r\n        }\r\n        if (this.path) {\r\n            header += \"; path=\".concat(this.path);\r\n        }\r\n        if (this.expires) {\r\n            header += \"; expires=\".concat(this.expires.toUTCString());\r\n        }\r\n        if (this.domain) {\r\n            header += \"; domain=\".concat(this.domain);\r\n        }\r\n        // TODO: samesite=none by default (?)\r\n        header += \"; SameSite=\".concat(this.sameSite === true ? 'strict' : 'None');\r\n        // TODO: On by default\r\n        if (this.secure) {\r\n            header += '; secure';\r\n        }\r\n        if (this.httpOnly) {\r\n            header += '; httponly';\r\n        }\r\n        return header;\r\n    };\r\n    return Cookie;\r\n}());\r\nfunction getPattern(name) {\r\n    return new RegExp(\"(?:^|;) *\".concat(name.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&'), \"=([^;]*)\"));\r\n}\r\nfunction pushCookie(headers, cookie) {\r\n    if (cookie.overwrite) {\r\n        for (var i = headers.length - 1; i >= 0; i--) {\r\n            if (headers[i].indexOf(\"\".concat(cookie.name, \"=\")) === 0) {\r\n                headers.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n    headers.push(cookie.toHeader());\r\n}\n\nfunction omit(obj) {\r\n    var values = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        values[_i - 1] = arguments[_i];\r\n    }\r\n    var newObject = Object.assign({}, obj);\r\n    for (var _a = 0, values_1 = values; _a < values_1.length; _a++) {\r\n        var key = values_1[_a];\r\n        delete newObject[key];\r\n    }\r\n    return newObject;\r\n}\n\n/**\r\n * @credit https://stackoverflow.com/a/2117523\r\n */\r\nfunction uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\n/**\r\n * Slightly cleaner and smaller UUIDs\r\n */\r\nfunction uuid() {\r\n    return uuidv4().replace(/-/g, '');\r\n}\n\nfunction emptyUrl() {\r\n    return {\r\n        query: null,\r\n        port: null,\r\n        auth: null,\r\n        hash: null,\r\n        host: null,\r\n        hostname: null,\r\n        href: null,\r\n        path: null,\r\n        pathname: null,\r\n        protocol: null,\r\n        search: null,\r\n        slashes: null,\r\n    };\r\n}\r\n// Replacement for `url.parse` using `URL` global object that works with relative paths.\r\n// Assumptions: this function operates in a NodeJS environment.\r\nfunction parse$1(url) {\r\n    var _a;\r\n    var out = emptyUrl();\r\n    var u;\r\n    var pathOnly = url === '' || url[0] === '/';\r\n    if (pathOnly) {\r\n        u = new URL(url, 'http://0.0.0.0/');\r\n        out.href = u.href;\r\n        out.href = (_a = out.href) === null || _a === void 0 ? void 0 : _a.slice(14); // remove 'http://0.0.0.0/'\r\n    }\r\n    else {\r\n        u = new URL(url);\r\n        out.href = u.href;\r\n        out.port = u.port === '' ? null : u.port;\r\n        out.hash = u.hash === '' ? null : u.hash;\r\n        out.host = u.host;\r\n        out.hostname = u.hostname;\r\n        out.href = u.href;\r\n        out.pathname = u.pathname;\r\n        out.protocol = u.protocol;\r\n        out.slashes = url[u.protocol.length] === '/'; // check if the mimetype is proceeded by a slash\r\n    }\r\n    out.search = u.search;\r\n    out.query = u.search.slice(1); // remove '?'\r\n    out.path = \"\".concat(u.pathname).concat(u.search);\r\n    out.pathname = u.pathname;\r\n    return out;\r\n}\n\n/**\r\n * Safe conversion to error type. Intended to be used in catch blocks where the\r\n *  value is not guaranteed to be an error.\r\n *\r\n *  @example\r\n *  try {\r\n *    throw new Error('Something went wrong')\r\n *  }\r\n *  catch (err: unknown) {\r\n *    const error: Error = toError(err)\r\n *  }\r\n */\r\nfunction toError(err) {\r\n    if (err instanceof Error)\r\n        return err;\r\n    return new Error(String(err));\r\n}\n\nvar DEFAULT_API_VERSION = 'v3';\n\nvar SDK_VERSION = '6.1.2';\n\nfunction datePlusMinutes(minutes) {\r\n    if (minutes === void 0) { minutes = 30; }\r\n    return new Date(Date.now() + minutes * 60000);\r\n}\r\nvar isPositiveNumber = function (thing) {\r\n    return typeof thing === 'number' && !isNaN(thing) && thing >= 0;\r\n};\r\nvar isReactNative = typeof navigator === 'object' && navigator.product === 'ReactNative';\r\nvar validEnvList = [\r\n    'production',\r\n    'qa',\r\n    'test',\r\n    'development',\r\n    'dev',\r\n    'cdn-qa',\r\n    'cloud',\r\n    'fast',\r\n    'cdn2',\r\n    'cdn-prod',\r\n];\r\nfunction getQueryParam(url, variable) {\r\n    var query = url.split('?')[1] || '';\r\n    var vars = query.split('&');\r\n    for (var i = 0; i < vars.length; i++) {\r\n        var pair = vars[i].split('=');\r\n        if (decodeURIComponent(pair[0]) === variable) {\r\n            return decodeURIComponent(pair[1]);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nvar urlParser = {\r\n    parse: function (url) {\r\n        var el = document.createElement('a');\r\n        el.href = url;\r\n        var out = {};\r\n        var props = [\r\n            'username',\r\n            'password',\r\n            'host',\r\n            'hostname',\r\n            'port',\r\n            'protocol',\r\n            'origin',\r\n            'pathname',\r\n            'search',\r\n            'hash',\r\n        ];\r\n        for (var _i = 0, props_1 = props; _i < props_1.length; _i++) {\r\n            var prop = props_1[_i];\r\n            out[prop] = el[prop];\r\n        }\r\n        // IE 11 pathname handling workaround\r\n        // (IE omits preceeding '/', unlike other browsers)\r\n        if ((out.pathname || out.pathname === '') &&\r\n            typeof out.pathname === 'string' &&\r\n            out.pathname.indexOf('/') !== 0) {\r\n            out.pathname = '/' + out.pathname;\r\n        }\r\n        return out;\r\n    },\r\n};\r\nvar parse = isReactNative\r\n    ? function () { return emptyUrl(); }\r\n    : typeof window === 'object'\r\n        ? urlParser.parse\r\n        : parse$1;\r\nfunction setCookie(name, value, expires) {\r\n    try {\r\n        var expiresString = '';\r\n        // TODO: need to know if secure server side\r\n        if (expires) {\r\n            expiresString = '; expires=' + expires.toUTCString();\r\n        }\r\n        var secure = isBrowser ? location.protocol === 'https:' : true;\r\n        document.cookie =\r\n            name +\r\n                '=' +\r\n                (value || '') +\r\n                expiresString +\r\n                '; path=/' +\r\n                (secure ? '; secure; SameSite=None' : '');\r\n    }\r\n    catch (err) {\r\n        console.warn('Could not set cookie', err);\r\n    }\r\n}\r\nfunction getCookie(name) {\r\n    try {\r\n        return (decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' +\r\n            encodeURIComponent(name).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') +\r\n            '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1')) || null);\r\n    }\r\n    catch (err) {\r\n        console.warn('Could not get cookie', err);\r\n    }\r\n}\r\nfunction size(object) {\r\n    return Object.keys(object).length;\r\n}\r\nfunction find(target, callback) {\r\n    var list = target;\r\n    // Makes sures is always has an positive integer as length.\r\n    var length = list.length >>> 0;\r\n    var thisArg = arguments[1];\r\n    for (var i = 0; i < length; i++) {\r\n        var element = list[i];\r\n        if (callback.call(thisArg, element, i, list)) {\r\n            return element;\r\n        }\r\n    }\r\n}\r\nvar sessionStorageKey = 'builderSessionId';\r\nvar localStorageKey = 'builderVisitorId';\r\nvar isBrowser = typeof window !== 'undefined' && !isReactNative;\r\nvar isIframe = isBrowser && window.top !== window.self;\r\nfunction BuilderComponent(info) {\r\n    if (info === void 0) { info = {}; }\r\n    return Builder.Component(info);\r\n}\r\nvar Builder = /** @class */ (function () {\r\n    function Builder(apiKey, request, response, forceNewInstance, authToken, apiVersion) {\r\n        if (apiKey === void 0) { apiKey = null; }\r\n        if (forceNewInstance === void 0) { forceNewInstance = false; }\r\n        if (authToken === void 0) { authToken = null; }\r\n        var _this = this;\r\n        this.request = request;\r\n        this.response = response;\r\n        this.eventsQueue = [];\r\n        this.throttledClearEventsQueue = throttle(function () {\r\n            _this.processEventsQueue();\r\n            // Extend the session cookie\r\n            _this.setCookie(sessionStorageKey, _this.sessionId, datePlusMinutes(30));\r\n        }, 5);\r\n        this.env = 'production';\r\n        this.sessionId = this.getSessionId();\r\n        this.targetContent = true;\r\n        this.contentPerRequest = 1;\r\n        // TODO: make array or function\r\n        this.allowCustomFonts = true;\r\n        this.cookies = null;\r\n        // TODO: api options object\r\n        this.cachebust = false;\r\n        this.overrideParams = '';\r\n        this.noCache = false;\r\n        this.preview = false;\r\n        /**\r\n         * Dictates which API endpoint is used when fetching content. Allows `'content'` and `'query'`.\r\n         * Defaults to `'query'`.\r\n         */\r\n        this.apiEndpoint$ = new BehaviorSubject('query');\r\n        this.apiVersion$ = new BehaviorSubject(undefined);\r\n        this.canTrack$ = new BehaviorSubject(!this.browserTrackingDisabled);\r\n        this.hasOverriddenCanTrack = false;\r\n        this.apiKey$ = new BehaviorSubject(null);\r\n        this.authToken$ = new BehaviorSubject(null);\r\n        this.userAttributesChanged = new BehaviorSubject(null);\r\n        this.editingMode$ = new BehaviorSubject(isIframe);\r\n        // TODO: decorator to do this stuff with the get/set (how do with typing too? compiler?)\r\n        this.editingModel$ = new BehaviorSubject(null);\r\n        this.userAgent = (typeof navigator === 'object' && navigator.userAgent) || '';\r\n        this.trackingHooks = [];\r\n        // Set this to control the userId\r\n        // TODO: allow changing it mid session and updating existing data to be associated\r\n        // e.g. for when a user navigates and then logs in\r\n        this.visitorId = this.getVisitorId();\r\n        this.autoTrack = !Builder.isBrowser\r\n            ? false\r\n            : !this.isDevelopmentEnv &&\r\n                !(Builder.isBrowser && location.search.indexOf('builder.preview=') !== -1);\r\n        this.trackingUserAttributes = {};\r\n        this.blockContentLoading = '';\r\n        this.observersByKey = {};\r\n        this.noEditorUpdates = {};\r\n        this.overrides = {};\r\n        this.queryOptions = {};\r\n        this.getContentQueue = null;\r\n        this.priorContentQueue = null;\r\n        this.testCookiePrefix = 'builder.tests';\r\n        this.cookieQueue = [];\r\n        // TODO: use a window variable for this perhaps, e.g. bc webcomponents may be loading builder twice\r\n        // with it's and react (use rollup build to fix)\r\n        if (Builder.isBrowser && !forceNewInstance && Builder.singletonInstance) {\r\n            return Builder.singletonInstance;\r\n        }\r\n        if (this.request && this.response) {\r\n            this.setUserAgent(this.request.headers['user-agent'] || '');\r\n            this.cookies = new Cookies(this.request, this.response);\r\n        }\r\n        if (apiKey) {\r\n            this.apiKey = apiKey;\r\n        }\r\n        if (apiVersion) {\r\n            this.apiVersion = apiVersion;\r\n        }\r\n        if (authToken) {\r\n            this.authToken = authToken;\r\n        }\r\n        if (isBrowser) {\r\n            if (Builder.isEditing) {\r\n                this.bindMessageListeners();\r\n                parent.postMessage({\r\n                    type: 'builder.animatorOptions',\r\n                    data: {\r\n                        options: {\r\n                            version: 2,\r\n                        },\r\n                    },\r\n                }, '*');\r\n            }\r\n            // TODO: postmessage to parent the builder info for every package\r\n            // type: 'builder.sdk', data: { name: '@builder.io/react', version: '0.1.23' }\r\n            // (window as any).BUILDER_VERSION = Builder.VERSION;\r\n            // Ensure always one Builder global singleton\r\n            // TODO: some people won't want this, e.g. rakuten\r\n            // Maybe hide this behind symbol or on document, etc\r\n            // if ((window as any).Builder) {\r\n            //   Builder.components = (window as any).Builder.components;\r\n            // } else {\r\n            //   (window as any).Builder = Builder;\r\n            // }\r\n        }\r\n        if (isIframe) {\r\n            this.messageFrameLoaded();\r\n        }\r\n        // TODO: on destroy clear subscription\r\n        this.canTrack$.subscribe(function (value) {\r\n            if (value) {\r\n                if (typeof sessionStorage !== 'undefined') {\r\n                    try {\r\n                        if (!sessionStorage.getItem(sessionStorageKey)) {\r\n                            sessionStorage.setItem(sessionStorageKey, _this.sessionId);\r\n                        }\r\n                    }\r\n                    catch (err) {\r\n                        console.debug('Session storage error', err);\r\n                    }\r\n                }\r\n                if (_this.eventsQueue.length) {\r\n                    _this.throttledClearEventsQueue();\r\n                }\r\n                if (_this.cookieQueue.length) {\r\n                    _this.cookieQueue.forEach(function (item) {\r\n                        _this.setCookie(item[0], item[1]);\r\n                    });\r\n                    _this.cookieQueue.length = 0;\r\n                }\r\n            }\r\n        });\r\n        if (isBrowser) {\r\n            // TODO: defer so subclass constructor runs and injects location service\r\n            this.setTestsFromUrl();\r\n            // TODO: do this on every request send?\r\n            this.getOverridesFromQueryString();\r\n            // cookies used in personalization container script, so need to set before hydration to match script result\r\n            var userAttrCookie = this.getCookie(Builder.attributesCookieName);\r\n            if (userAttrCookie) {\r\n                try {\r\n                    var attributes = JSON.parse(userAttrCookie);\r\n                    this.setUserAttributes(attributes);\r\n                }\r\n                catch (err) {\r\n                    console.debug('Error parsing user attributes cookie', err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Builder.register = function (type, info) {\r\n        if (type === 'plugin') {\r\n            info = this.serializeIncludingFunctions(info, true);\r\n        }\r\n        // TODO: all must have name and can't conflict?\r\n        var typeList = this.registry[type];\r\n        if (!typeList) {\r\n            typeList = this.registry[type] = [];\r\n        }\r\n        typeList.push(info);\r\n        if (Builder.isBrowser) {\r\n            var message = {\r\n                type: 'builder.register',\r\n                data: {\r\n                    type: type,\r\n                    info: info,\r\n                },\r\n            };\r\n            try {\r\n                parent.postMessage(message, '*');\r\n                if (parent !== window) {\r\n                    window.postMessage(message, '*');\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.debug('Could not postmessage', err);\r\n            }\r\n        }\r\n        this.registryChange.next(this.registry);\r\n    };\r\n    Builder.registerEditor = function (info) {\r\n        if (Builder.isBrowser) {\r\n            window.postMessage({\r\n                type: 'builder.registerEditor',\r\n                data: omit(info, 'component'),\r\n            }, '*');\r\n            var hostname = location.hostname;\r\n            if (!Builder.isTrustedHost(hostname)) {\r\n                console.error('Builder.registerEditor() called in the wrong environment! You cannot load custom editors from your app, they must be loaded through the Builder.io app itself. Follow the readme here for more details: https://github.com/builderio/builder/tree/master/plugins/cloudinary or contact chat us in our Spectrum community for help: https://spectrum.chat/builder');\r\n            }\r\n        }\r\n        this.editors.push(info);\r\n    };\r\n    Builder.registerPlugin = function (info) {\r\n        this.plugins.push(info);\r\n    };\r\n    Builder.registerAction = function (action) {\r\n        var _a;\r\n        this.actions.push(action);\r\n        if (Builder.isBrowser) {\r\n            var actionClone = JSON.parse(JSON.stringify(action));\r\n            if (action.action) {\r\n                actionClone.action = action.action.toString();\r\n            }\r\n            (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n                type: 'builder.registerAction',\r\n                data: actionClone,\r\n            }, '*');\r\n        }\r\n    };\r\n    Builder.registerTrustedHost = function (host) {\r\n        this.trustedHosts.push(host);\r\n    };\r\n    /**\r\n     * @param context @type {import('isolated-vm').Context}\r\n     * Use this function to control the execution context of custom code on the server.\r\n     * const ivm = require('isolated-vm');\r\n     * const isolate = new ivm.Isolate({ memoryLimit: 128 });\r\n     * const context = isolate.createContextSync();\r\n     * Builder.setServerContext(context);\r\n     */\r\n    Builder.setServerContext = function (context) {\r\n        this.serverContext = context;\r\n    };\r\n    Builder.isTrustedHost = function (hostname) {\r\n        var isTrusted = this.trustedHosts.findIndex(function (trustedHost) {\r\n            return trustedHost.startsWith('*.')\r\n                ? hostname.endsWith(trustedHost.slice(1))\r\n                : trustedHost === hostname;\r\n        }) > -1;\r\n        return isTrusted;\r\n    };\r\n    Builder.isTrustedHostForEvent = function (event) {\r\n        if (event.origin === 'null') {\r\n            return false;\r\n        }\r\n        var url = parse(event.origin);\r\n        return url.hostname && Builder.isTrustedHost(url.hostname);\r\n    };\r\n    Builder.runAction = function (action) {\r\n        // TODO\r\n        var actionObject = typeof action === 'string' ? find(this.actions, function (item) { return item.name === action; }) : action;\r\n        if (!actionObject) {\r\n            throw new Error(\"Action not found: \".concat(action));\r\n        }\r\n    };\r\n    Builder.fields = function (name, fields) {\r\n        var _a;\r\n        (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n            type: 'builder.fields',\r\n            data: { name: name, fields: fields },\r\n        }, '*');\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * @hidden\r\n     *\r\n     * Use Builder.register('editor.settings', {}) instead.\r\n     */\r\n    Builder.set = function (settings) {\r\n        Builder.register('editor.settings', settings);\r\n    };\r\n    Builder.import = function (packageName) {\r\n        if (!Builder.isBrowser) {\r\n            // TODO: server side support *maybe*\r\n            console.warn('Builder.import used on the server - this should only be used in the browser');\r\n            return;\r\n        }\r\n        var System = window.System;\r\n        if (!System) {\r\n            console.warn('System.js not available. Please include System.js when using Builder.import');\r\n            return;\r\n        }\r\n        return System.import(\"https://cdn.builder.io/systemjs/\".concat(packageName));\r\n    };\r\n    Object.defineProperty(Builder, \"editingPage\", {\r\n        // useCdnApi = false;\r\n        get: function () {\r\n            return this._editingPage;\r\n        },\r\n        set: function (editingPage) {\r\n            this._editingPage = editingPage;\r\n            if (isBrowser && isIframe) {\r\n                if (editingPage) {\r\n                    document.body.classList.add('builder-editing-page');\r\n                }\r\n                else {\r\n                    document.body.classList.remove('builder-editing-page');\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.serializeIncludingFunctions = function (info, isForPlugin) {\r\n        var serializeFn = function (fnValue) {\r\n            var fnStr = fnValue.toString().trim();\r\n            // we need to account for a few different fn syntaxes:\r\n            // 1. `function name(args) => {code}`\r\n            // 2. `name(args) => {code}`\r\n            // 3. `(args) => {}`\r\n            // 4. `args => {}`\r\n            // 5. `async function(args) {code}`\r\n            // 6. `async (args) => {}`\r\n            // 7. `async args => {}`\r\n            var isArrowWithoutParens = /^[a-zA-Z0-9_]+\\s*=>/i.test(fnStr);\r\n            var appendFunction = !fnStr.startsWith('function') &&\r\n                !fnStr.startsWith('async') &&\r\n                !fnStr.startsWith('(') &&\r\n                !isArrowWithoutParens;\r\n            return \"return (\".concat(appendFunction ? 'function ' : '').concat(fnStr, \").apply(this, arguments)\");\r\n        };\r\n        var objToReturn = JSON.parse(JSON.stringify(info, function (key, value) {\r\n            var shouldNotSerializeFn = isForPlugin && key === 'onSave';\r\n            if (typeof value === 'function' && !shouldNotSerializeFn) {\r\n                return serializeFn(value);\r\n            }\r\n            return value;\r\n        }));\r\n        if (isForPlugin) {\r\n            objToReturn.onSave = info.onSave;\r\n        }\r\n        return objToReturn;\r\n    };\r\n    Builder.prepareComponentSpecToSend = function (spec) {\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, this.serializeIncludingFunctions(spec)), { class: undefined });\r\n    };\r\n    Builder.registerBlock = function (component, options) {\r\n        this.registerComponent(component, options);\r\n    };\r\n    Builder.registerComponent = function (component, options) {\r\n        var _a;\r\n        var spec = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ class: component }, component.builderOptions), options);\r\n        this.addComponent(spec);\r\n        var editable = options.models && this.singletonInstance.editingModel\r\n            ? isBrowser && options.models.includes(this.singletonInstance.editingModel)\r\n            : isBrowser;\r\n        if (editable) {\r\n            var sendSpec = this.prepareComponentSpecToSend(spec);\r\n            (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n                type: 'builder.registerComponent',\r\n                data: sendSpec,\r\n            }, '*');\r\n        }\r\n    };\r\n    Builder.addComponent = function (component) {\r\n        var current = find(this.components, function (item) { return item.name === component.name; });\r\n        if (current) {\r\n            // FIXME: why does sometimes we get an extra post without class - probably\r\n            // from postMessage handler wrong in some place\r\n            if (current.class && !component.class) {\r\n                return;\r\n            }\r\n            this.components.splice(this.components.indexOf(current), 1, component);\r\n        }\r\n        else {\r\n            this.components.push(component);\r\n        }\r\n    };\r\n    // TODO: style guide, etc off this system as well?\r\n    Builder.component = function (info) {\r\n        var _this = this;\r\n        if (info === void 0) { info = {}; }\r\n        return function (component) {\r\n            var _a;\r\n            var spec = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, info), { class: component });\r\n            if (!spec.name) {\r\n                spec.name = component.name;\r\n            }\r\n            _this.addComponent(spec);\r\n            var sendSpec = _this.prepareComponentSpecToSend(spec);\r\n            // TODO: serialize component name and inputs\r\n            if (isBrowser) {\r\n                (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n                    type: 'builder.registerComponent',\r\n                    data: sendSpec,\r\n                }, '*');\r\n            }\r\n            return component;\r\n        };\r\n    };\r\n    Object.defineProperty(Builder, \"Component\", {\r\n        get: function () {\r\n            return this.component;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.processEventsQueue = function () {\r\n        if (!this.eventsQueue.length) {\r\n            return;\r\n        }\r\n        var events = this.eventsQueue;\r\n        this.eventsQueue = [];\r\n        var fullUserAttributes = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, Builder.overrideUserAttributes), this.trackingUserAttributes);\r\n        for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\r\n            var event_1 = events_1[_i];\r\n            if (!event_1.data.metadata) {\r\n                event_1.data.metadata = {};\r\n            }\r\n            if (!event_1.data.metadata.user) {\r\n                event_1.data.metadata.user = {};\r\n            }\r\n            Object.assign(event_1.data.metadata.user, fullUserAttributes, event_1.data.metadata.user);\r\n        }\r\n        var host = this.host;\r\n        getFetch()(\"\".concat(host, \"/api/v1/track\"), {\r\n            method: 'POST',\r\n            body: JSON.stringify({ events: events }),\r\n            headers: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ 'content-type': 'application/json' }, this.getSdkHeaders()),\r\n            mode: 'cors',\r\n        }).catch(function () {\r\n            // Not the end of the world\r\n        });\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"browserTrackingDisabled\", {\r\n        get: function () {\r\n            return Builder.isBrowser && Boolean(window.builderNoTrack || !navigator.cookieEnabled);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"canTrack\", {\r\n        get: function () {\r\n            return this.canTrack$.value;\r\n        },\r\n        set: function (canTrack) {\r\n            this.hasOverriddenCanTrack = true;\r\n            if (this.canTrack !== canTrack) {\r\n                this.canTrack$.next(canTrack);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"apiVersion\", {\r\n        get: function () {\r\n            return this.apiVersion$.value;\r\n        },\r\n        set: function (apiVersion) {\r\n            if (this.apiVersion !== apiVersion) {\r\n                this.apiVersion$.next(apiVersion);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"apiEndpoint\", {\r\n        get: function () {\r\n            return this.apiEndpoint$.value;\r\n        },\r\n        set: function (apiEndpoint) {\r\n            if (this.apiEndpoint !== apiEndpoint) {\r\n                this.apiEndpoint$.next(apiEndpoint);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"editingMode\", {\r\n        get: function () {\r\n            return this.editingMode$.value;\r\n        },\r\n        set: function (value) {\r\n            if (value !== this.editingMode) {\r\n                this.editingMode$.next(value);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"editingModel\", {\r\n        get: function () {\r\n            return this.editingModel$.value;\r\n        },\r\n        set: function (value) {\r\n            if (value !== this.editingModel) {\r\n                this.editingModel$.next(value);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.findParentElement = function (target, callback, checkElement) {\r\n        if (checkElement === void 0) { checkElement = true; }\r\n        if (!(target instanceof HTMLElement)) {\r\n            return null;\r\n        }\r\n        var parent = checkElement ? target : target.parentElement;\r\n        do {\r\n            if (!parent) {\r\n                return null;\r\n            }\r\n            var matches = callback(parent);\r\n            if (matches) {\r\n                return parent;\r\n            }\r\n        } while ((parent = parent.parentElement));\r\n        return null;\r\n    };\r\n    Builder.prototype.findBuilderParent = function (target) {\r\n        return this.findParentElement(target, function (el) {\r\n            var id = el.getAttribute('builder-id') || el.id;\r\n            return Boolean(id && id.indexOf('builder-') === 0);\r\n        });\r\n    };\r\n    Builder.prototype.setUserAgent = function (userAgent) {\r\n        this.userAgent = userAgent || '';\r\n    };\r\n    /**\r\n     * Set a hook to modify events being tracked from builder, such as impressions and clicks\r\n     *\r\n     * For example, to track the model ID of each event associated with content for querying\r\n     * by mode, you can do\r\n     *\r\n     *    builder.setTrackingHook((event, context) => {\r\n     *      if (context.content) {\r\n     *        event.data.metadata.modelId = context.content.modelId\r\n     *      }\r\n     *    })\r\n     */\r\n    Builder.prototype.setTrackingHook = function (hook) {\r\n        this.trackingHooks.push(hook);\r\n    };\r\n    Builder.prototype.track = function (eventName, properties, context) {\r\n        if (properties === void 0) { properties = {}; }\r\n        // TODO: queue up track requests and fire them off when canTrack set to true - otherwise may get lots of clicks with no impressions\r\n        if (isIframe || !isBrowser || Builder.isPreviewing) {\r\n            return;\r\n        }\r\n        var apiKey = this.apiKey;\r\n        if (!apiKey) {\r\n            console.error('Builder integration error: Looks like the Builder SDK has not been initialized properly (your API key has not been set). Make sure you are calling `builder.init(\"«YOUR-API-KEY»\");` as early as possible in your application\\'s code.');\r\n            return;\r\n        }\r\n        var eventData = JSON.parse(JSON.stringify({\r\n            type: eventName,\r\n            data: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, omit(properties, 'meta')), { metadata: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ sdkVersion: Builder.VERSION, url: location.href }, properties.meta), properties.metadata), ownerId: apiKey, userAttributes: this.getUserAttributes(), sessionId: this.sessionId, visitorId: this.visitorId }),\r\n        }));\r\n        for (var _i = 0, _a = this.trackingHooks; _i < _a.length; _i++) {\r\n            var hook = _a[_i];\r\n            var returnValue = hook(eventData, context || {});\r\n            if (returnValue) {\r\n                eventData = returnValue;\r\n            }\r\n        }\r\n        // batch events\r\n        this.eventsQueue.push(eventData);\r\n        if (this.canTrack) {\r\n            this.throttledClearEventsQueue();\r\n        }\r\n    };\r\n    Builder.prototype.getSessionId = function () {\r\n        var _this = this;\r\n        var sessionId = null;\r\n        try {\r\n            if (Builder.isBrowser && typeof sessionStorage !== 'undefined') {\r\n                sessionId = this.getCookie(sessionStorageKey);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.debug('Session storage error', err);\r\n            // It's ok\r\n        }\r\n        if (!sessionId) {\r\n            sessionId = uuid();\r\n        }\r\n        // Give the app a second to start up and set canTrack to false if needed\r\n        if (Builder.isBrowser) {\r\n            setTimeout(function () {\r\n                try {\r\n                    if (_this.canTrack) {\r\n                        _this.setCookie(sessionStorageKey, sessionId, datePlusMinutes(30));\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.debug('Cookie setting error', err);\r\n                }\r\n            });\r\n        }\r\n        return sessionId;\r\n    };\r\n    Builder.prototype.getVisitorId = function () {\r\n        var _this = this;\r\n        if (this.visitorId) {\r\n            return this.visitorId;\r\n        }\r\n        var visitorId = null;\r\n        try {\r\n            if (Builder.isBrowser && typeof localStorage !== 'undefined') {\r\n                // TODO: cookie instead?\r\n                visitorId = localStorage.getItem(localStorageKey);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.debug('Local storage error', err);\r\n            // It's ok\r\n        }\r\n        if (!visitorId) {\r\n            visitorId = uuid();\r\n        }\r\n        this.visitorId = visitorId;\r\n        // Give the app a second to start up and set canTrack to false if needed\r\n        if (Builder.isBrowser) {\r\n            setTimeout(function () {\r\n                try {\r\n                    if (_this.canTrack && typeof localStorage !== 'undefined' && visitorId) {\r\n                        localStorage.setItem(localStorageKey, visitorId);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.debug('Session storage error', err);\r\n                }\r\n            });\r\n        }\r\n        return visitorId;\r\n    };\r\n    Builder.prototype.trackImpression = function (contentId, variationId, properties, context) {\r\n        if (isIframe || !isBrowser || Builder.isPreviewing) {\r\n            return;\r\n        }\r\n        // TODO: use this.track method\r\n        this.track('impression', {\r\n            contentId: contentId,\r\n            variationId: variationId !== contentId ? variationId : undefined,\r\n            metadata: properties,\r\n        }, context);\r\n    };\r\n    Builder.prototype.trackConversion = function (amount, contentId, variationId, customProperties, context) {\r\n        if (isIframe || !isBrowser || Builder.isPreviewing) {\r\n            return;\r\n        }\r\n        var meta = typeof contentId === 'object' ? contentId : customProperties;\r\n        var useContentId = typeof contentId === 'string' ? contentId : undefined;\r\n        this.track('conversion', { amount: amount, variationId: variationId, meta: meta, contentId: useContentId }, context);\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"isDevelopmentEnv\", {\r\n        // TODO: set this for QA\r\n        get: function () {\r\n            // Automatic determining of development environment\r\n            return (Builder.isIframe ||\r\n                (Builder.isBrowser && (location.hostname === 'localhost' || location.port !== '')) ||\r\n                this.env !== 'production');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.trackInteraction = function (contentId, variationId, alreadyTrackedOne, event, context) {\r\n        if (alreadyTrackedOne === void 0) { alreadyTrackedOne = false; }\r\n        if (isIframe || !isBrowser || Builder.isPreviewing) {\r\n            return;\r\n        }\r\n        var target = event && event.target;\r\n        var targetBuilderElement = target && this.findBuilderParent(target);\r\n        function round(num) {\r\n            return Math.round(num * 1000) / 1000;\r\n        }\r\n        var metadata = {};\r\n        if (event) {\r\n            var clientX = event.clientX, clientY = event.clientY;\r\n            if (target) {\r\n                var targetRect = target.getBoundingClientRect();\r\n                var xOffset = clientX - targetRect.left;\r\n                var yOffset = clientY - targetRect.top;\r\n                var xRatio = round(xOffset / targetRect.width);\r\n                var yRatio = round(yOffset / targetRect.height);\r\n                metadata.targetOffset = {\r\n                    x: xRatio,\r\n                    y: yRatio,\r\n                };\r\n            }\r\n            if (targetBuilderElement) {\r\n                var targetRect = targetBuilderElement.getBoundingClientRect();\r\n                var xOffset = clientX - targetRect.left;\r\n                var yOffset = clientY - targetRect.top;\r\n                var xRatio = round(xOffset / targetRect.width);\r\n                var yRatio = round(yOffset / targetRect.height);\r\n                metadata.builderTargetOffset = {\r\n                    x: xRatio,\r\n                    y: yRatio,\r\n                };\r\n            }\r\n        }\r\n        var builderId = targetBuilderElement &&\r\n            (targetBuilderElement.getAttribute('builder-id') || targetBuilderElement.id);\r\n        if (builderId && targetBuilderElement) {\r\n            metadata.builderElementIndex = [].slice\r\n                .call(document.getElementsByClassName(builderId))\r\n                .indexOf(targetBuilderElement);\r\n        }\r\n        this.track('click', {\r\n            contentId: contentId,\r\n            metadata: metadata,\r\n            variationId: variationId !== contentId ? variationId : undefined,\r\n            unique: !alreadyTrackedOne,\r\n            targetBuilderElement: builderId || undefined,\r\n        }, context);\r\n    };\r\n    Builder.prototype.component = function (info) {\r\n        if (info === void 0) { info = {}; }\r\n        return Builder.component(info);\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"apiKey\", {\r\n        get: function () {\r\n            return this.apiKey$.value;\r\n        },\r\n        set: function (key) {\r\n            this.apiKey$.next(key);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Builder.prototype, \"authToken\", {\r\n        get: function () {\r\n            return this.authToken$.value;\r\n        },\r\n        set: function (token) {\r\n            this.authToken$.next(token);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.modifySearch = function (search) {\r\n        return search.replace(/(^|&|\\?)(builder_.*?)=/gi, function (_match, group1, group2) { return group1 + group2.replace(/_/g, '.') + '='; });\r\n    };\r\n    Builder.prototype.setTestsFromUrl = function () {\r\n        var search = this.getLocation().search;\r\n        try {\r\n            var params = QueryString.parseDeep(this.modifySearch(search || '').substr(1));\r\n            var tests = params.builder && params.builder.tests;\r\n            if (tests && typeof tests === 'object') {\r\n                for (var key in tests) {\r\n                    if (tests.hasOwnProperty(key)) {\r\n                        this.setTestCookie(key, tests[key]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.debug('Error parsing tests from URL', e);\r\n        }\r\n    };\r\n    Builder.prototype.resetOverrides = function () {\r\n        // Ugly - pass down instances per request instead using react context\r\n        // or use builder.get('foo', { req, res }) in react...........\r\n        Builder.overrideUserAttributes = {};\r\n        this.cachebust = false;\r\n        this.noCache = false;\r\n        this.preview = false;\r\n        this.editingModel = null;\r\n        this.overrides = {};\r\n        this.env = 'production';\r\n        this.userAgent = '';\r\n        this.request = undefined;\r\n        this.response = undefined;\r\n    };\r\n    Builder.prototype.getOverridesFromQueryString = function () {\r\n        var location = this.getLocation();\r\n        try {\r\n            var params = QueryString.parseDeep(this.modifySearch(location.search || '').substr(1));\r\n            var builder = params.builder;\r\n            if (builder) {\r\n                var userAttributes = builder.userAttributes, overrides = builder.overrides, env = builder.env, host = builder.host, api = builder.api, cachebust = builder.cachebust, noCache = builder.noCache, preview = builder.preview, editing = builder.editing, frameEditing = builder.frameEditing, options = builder.options, overrideParams = builder.params;\r\n                if (userAttributes) {\r\n                    this.setUserAttributes(userAttributes);\r\n                }\r\n                if (options) {\r\n                    // picking only locale, includeRefs, and enrich for now\r\n                    this.queryOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, (options.locale && { locale: options.locale })), (options.includeRefs && { includeRefs: options.includeRefs })), (options.enrich && { enrich: options.enrich }));\r\n                }\r\n                if (overrides) {\r\n                    this.overrides = overrides;\r\n                }\r\n                if (validEnvList.indexOf(env || api) > -1) {\r\n                    this.env = env || api;\r\n                }\r\n                if (Builder.isEditing) {\r\n                    var editingModel = frameEditing || editing || preview;\r\n                    if (editingModel && editingModel !== 'true') {\r\n                        this.editingModel = editingModel;\r\n                    }\r\n                }\r\n                if (cachebust) {\r\n                    this.cachebust = true;\r\n                }\r\n                if (noCache) {\r\n                    this.noCache = true;\r\n                }\r\n                if (preview) {\r\n                    this.preview = true;\r\n                }\r\n                if (params) {\r\n                    this.overrideParams = overrideParams;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.debug('Error parsing overrides from URL', e);\r\n        }\r\n    };\r\n    Builder.prototype.messageFrameLoaded = function () {\r\n        var _a;\r\n        (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n            type: 'builder.loaded',\r\n            data: {\r\n                value: true,\r\n            },\r\n        }, '*');\r\n    };\r\n    Builder.prototype.bindMessageListeners = function () {\r\n        var _this = this;\r\n        addEventListener('message', function (event) {\r\n            var _a, _b, _c, _d;\r\n            var isTrusted = Builder.isTrustedHostForEvent(event);\r\n            if (!isTrusted)\r\n                return;\r\n            var data = event.data;\r\n            if (data) {\r\n                switch (data.type) {\r\n                    case 'builder.ping': {\r\n                        (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n                            type: 'builder.pong',\r\n                            data: {},\r\n                        }, '*');\r\n                        break;\r\n                    }\r\n                    case 'builder.register': {\r\n                        // TODO: possibly do this for all...\r\n                        if (event.source === window) {\r\n                            break;\r\n                        }\r\n                        var options = data.data;\r\n                        if (!options) {\r\n                            break;\r\n                        }\r\n                        var type = options.type, info = options.info;\r\n                        // TODO: all must have name and can't conflict?\r\n                        var typeList = Builder.registry[type];\r\n                        if (!typeList) {\r\n                            typeList = Builder.registry[type] = [];\r\n                        }\r\n                        typeList.push(info);\r\n                        Builder.registryChange.next(Builder.registry);\r\n                        break;\r\n                    }\r\n                    case 'builder.settingsChange': {\r\n                        // TODO: possibly do this for all...\r\n                        if (event.source === window) {\r\n                            break;\r\n                        }\r\n                        var settings = data.data;\r\n                        if (!settings) {\r\n                            break;\r\n                        }\r\n                        Object.assign(Builder.settings, settings);\r\n                        Builder.settingsChange.next(Builder.settings);\r\n                        break;\r\n                    }\r\n                    case 'builder.registerEditor': {\r\n                        // TODO: possibly do this for all...\r\n                        if (event.source === window) {\r\n                            break;\r\n                        }\r\n                        var info_1 = data.data;\r\n                        if (!info_1) {\r\n                            break;\r\n                        }\r\n                        var hasComponent_1 = !!info_1.component;\r\n                        Builder.editors.every(function (thisInfo, index) {\r\n                            if (info_1.name === thisInfo.name) {\r\n                                if (thisInfo.component && !hasComponent_1) {\r\n                                    return false;\r\n                                }\r\n                                else {\r\n                                    Builder.editors[index] = thisInfo;\r\n                                }\r\n                                return false;\r\n                            }\r\n                            return true;\r\n                        });\r\n                        break;\r\n                    }\r\n                    case 'builder.triggerAnimation': {\r\n                        Builder.animator.triggerAnimation(data.data);\r\n                        break;\r\n                    }\r\n                    case 'builder.contentUpdate':\r\n                        var key = data.data.key || data.data.alias || data.data.entry || data.data.modelName;\r\n                        var contentData = data.data.data; // hmmm...\r\n                        var observer = _this.observersByKey[key];\r\n                        if (observer && !_this.noEditorUpdates[key]) {\r\n                            observer.next([contentData]);\r\n                        }\r\n                        break;\r\n                    case 'builder.getComponents':\r\n                        (_b = window.parent) === null || _b === void 0 ? void 0 : _b.postMessage({\r\n                            type: 'builder.components',\r\n                            data: Builder.components.map(function (item) { return Builder.prepareComponentSpecToSend(item); }),\r\n                        }, '*');\r\n                        break;\r\n                    case 'builder.editingModel':\r\n                        _this.editingModel = data.data.model;\r\n                        break;\r\n                    case 'builder.registerComponent':\r\n                        var componentData = data.data;\r\n                        Builder.addComponent(componentData);\r\n                        break;\r\n                    case 'builder.blockContentLoading':\r\n                        if (typeof data.data.model === 'string') {\r\n                            _this.blockContentLoading = data.data.model;\r\n                        }\r\n                        break;\r\n                    case 'builder.editingMode':\r\n                        var editingMode = data.data;\r\n                        if (editingMode) {\r\n                            _this.editingMode = true;\r\n                            document.body.classList.add('builder-editing');\r\n                        }\r\n                        else {\r\n                            _this.editingMode = false;\r\n                            document.body.classList.remove('builder-editing');\r\n                        }\r\n                        break;\r\n                    case 'builder.editingPageMode':\r\n                        var editingPageMode = data.data;\r\n                        Builder.editingPage = editingPageMode;\r\n                        break;\r\n                    case 'builder.overrideUserAttributes':\r\n                        var userAttributes = data.data;\r\n                        assign(Builder.overrideUserAttributes, userAttributes);\r\n                        _this.flushGetContentQueue(true);\r\n                        // TODO: refetch too\r\n                        break;\r\n                    case 'builder.overrideTestGroup':\r\n                        var _e = data.data, variationId = _e.variationId, contentId = _e.contentId;\r\n                        if (variationId && contentId) {\r\n                            _this.setTestCookie(contentId, variationId);\r\n                            _this.flushGetContentQueue(true);\r\n                        }\r\n                        break;\r\n                    case 'builder.evaluate': {\r\n                        var text = data.data.text;\r\n                        var args = data.data.arguments || [];\r\n                        var id_1 = data.data.id;\r\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\r\n                        var fn = new Function(text);\r\n                        var result = void 0;\r\n                        var error = null;\r\n                        try {\r\n                            result = fn.apply(_this, args);\r\n                        }\r\n                        catch (err) {\r\n                            error = toError(err);\r\n                        }\r\n                        if (error) {\r\n                            (_c = window.parent) === null || _c === void 0 ? void 0 : _c.postMessage({\r\n                                type: 'builder.evaluateError',\r\n                                data: { id: id_1, error: error.message },\r\n                            }, '*');\r\n                        }\r\n                        else {\r\n                            if (result && typeof result.then === 'function') {\r\n                                result\r\n                                    .then(function (finalResult) {\r\n                                    var _a;\r\n                                    (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({\r\n                                        type: 'builder.evaluateResult',\r\n                                        data: { id: id_1, result: finalResult },\r\n                                    }, '*');\r\n                                })\r\n                                    .catch(console.error);\r\n                            }\r\n                            else {\r\n                                (_d = window.parent) === null || _d === void 0 ? void 0 : _d.postMessage({\r\n                                    type: 'builder.evaluateResult',\r\n                                    data: { result: result, id: id_1 },\r\n                                }, '*');\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"defaultCanTrack\", {\r\n        get: function () {\r\n            return Boolean(Builder.isBrowser &&\r\n                navigator.userAgent.trim() &&\r\n                !navigator.userAgent.match(/bot|crawler|spider|robot|crawling|prerender|google|baidu|bing|msn|duckduckbot|teoma|slurp|yandex|phantom|headless|selenium|puppeteer/i) &&\r\n                !this.browserTrackingDisabled);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.init = function (apiKey, canTrack, req, res, authToken, apiVersion) {\r\n        if (canTrack === void 0) { canTrack = this.defaultCanTrack; }\r\n        if (req) {\r\n            this.request = req;\r\n        }\r\n        if (res) {\r\n            this.response = res;\r\n        }\r\n        if (!this.hasOverriddenCanTrack) {\r\n            this.canTrack = canTrack;\r\n        }\r\n        this.apiKey = apiKey;\r\n        if (authToken) {\r\n            this.authToken = authToken;\r\n        }\r\n        if (apiVersion) {\r\n            this.apiVersion = apiVersion;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"previewingModel\", {\r\n        get: function () {\r\n            var search = this.getLocation().search;\r\n            var params = QueryString.parse((search || '').substr(1));\r\n            return params['builder.preview'];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // TODO: allow adding location object as property and/or in constructor\r\n    Builder.prototype.getLocation = function () {\r\n        var _a;\r\n        var parsedLocation = {};\r\n        // in ssr mode\r\n        if (this.request) {\r\n            parsedLocation = parse((_a = this.request.url) !== null && _a !== void 0 ? _a : '');\r\n        }\r\n        else if (typeof location === 'object') {\r\n            // in the browser\r\n            parsedLocation = parse(location.href);\r\n        }\r\n        // IE11 bug with parsed path being empty string\r\n        // causes issues with our user targeting\r\n        if (parsedLocation.pathname === '') {\r\n            parsedLocation.pathname = '/';\r\n        }\r\n        return parsedLocation;\r\n    };\r\n    Builder.prototype.getUserAttributes = function (userAgent) {\r\n        if (userAgent === void 0) { userAgent = this.userAgent || ''; }\r\n        var isMobile = {\r\n            Android: function () {\r\n                return userAgent.match(/Android/i);\r\n            },\r\n            BlackBerry: function () {\r\n                return userAgent.match(/BlackBerry/i);\r\n            },\r\n            iOS: function () {\r\n                return userAgent.match(/iPhone|iPod/i);\r\n            },\r\n            Opera: function () {\r\n                return userAgent.match(/Opera Mini/i);\r\n            },\r\n            Windows: function () {\r\n                return userAgent.match(/IEMobile/i) || userAgent.match(/WPDesktop/i);\r\n            },\r\n            any: function () {\r\n                return (isMobile.Android() ||\r\n                    isMobile.BlackBerry() ||\r\n                    isMobile.iOS() ||\r\n                    isMobile.Opera() ||\r\n                    isMobile.Windows());\r\n            },\r\n        };\r\n        var isTablet = userAgent.match(/Tablet|iPad/i);\r\n        var url = this.getLocation();\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ urlPath: url.pathname, host: url.host || url.hostname, \r\n            // TODO: maybe an option to choose to target off of mobile/tablet/desktop or just mobile/desktop\r\n            device: isTablet ? 'tablet' : isMobile.any() ? 'mobile' : 'desktop' }, Builder.overrideUserAttributes);\r\n    };\r\n    Builder.prototype.setUserAttributes = function (options) {\r\n        assign(Builder.overrideUserAttributes, options);\r\n        if (this.canTrack) {\r\n            this.setCookie(Builder.attributesCookieName, JSON.stringify(this.getUserAttributes()));\r\n        }\r\n        this.userAttributesChanged.next(options);\r\n    };\r\n    /**\r\n     * Set user attributes just for tracking purposes.\r\n     *\r\n     * Do this so properties exist on event objects for querying insights, but\r\n     * won't affect targeting\r\n     *\r\n     * Use this when you want to track properties but don't need to target off\r\n     * of them to optimize cache efficiency\r\n     */\r\n    Builder.prototype.setTrackingUserAttributes = function (attributes) {\r\n        assign(this.trackingUserAttributes, attributes);\r\n    };\r\n    Builder.prototype.get = function (modelName, options) {\r\n        var _a;\r\n        if (options === void 0) { options = {}; }\r\n        var instance = this;\r\n        var finalLocale = options.locale || ((_a = options.userAttributes) === null || _a === void 0 ? void 0 : _a.locale) || this.getUserAttributes().locale;\r\n        if (!('noTraverse' in options)) {\r\n            options.noTraverse = false;\r\n        }\r\n        var finalOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, options), (finalLocale && {\r\n            locale: String(finalLocale),\r\n            userAttributes: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ locale: String(finalLocale) }, options.userAttributes),\r\n        }));\r\n        if (!Builder.isBrowser) {\r\n            instance = new Builder(options.apiKey || this.apiKey, options.req, options.res, undefined, options.authToken || this.authToken, options.apiVersion || this.apiVersion);\r\n            instance.apiEndpoint = this.apiEndpoint;\r\n            instance.setUserAttributes(this.getUserAttributes());\r\n        }\r\n        else {\r\n            // NOTE: All these are when .init is not called and the customer\r\n            // directly calls .get on the singleton instance of Builder\r\n            if (options.apiKey && !this.apiKey) {\r\n                this.apiKey = options.apiKey;\r\n            }\r\n            if (options.authToken && !this.authToken) {\r\n                this.authToken = options.authToken;\r\n            }\r\n            if (options.apiVersion && !this.apiVersion) {\r\n                this.apiVersion = options.apiVersion;\r\n            }\r\n        }\r\n        return instance.queueGetContent(modelName, finalOptions).map(\r\n        /* map( */ function (matches) {\r\n            var match = matches && matches[0];\r\n            if (Builder.isStatic) {\r\n                return match;\r\n            }\r\n            var matchData = match && match.data;\r\n            if (!matchData) {\r\n                return null;\r\n            }\r\n            if (typeof matchData.blocksString !== 'undefined') {\r\n                matchData.blocks = JSON.parse(matchData.blocksString);\r\n                delete matchData.blocksString;\r\n            }\r\n            return {\r\n                // TODO: add ab test info here and other high level stuff\r\n                data: matchData,\r\n                id: match.id,\r\n                variationId: match.testVariationId || match.variationId || null,\r\n                testVariationId: match.testVariationId || match.variationId || null,\r\n                testVariationName: match.testVariationName || null,\r\n                lastUpdated: match.lastUpdated || null,\r\n            };\r\n        });\r\n        // );\r\n    };\r\n    // TODO: entry id in options\r\n    Builder.prototype.queueGetContent = function (modelName, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // TODO: if query do modelName + query\r\n        var key = options.key ||\r\n            options.alias ||\r\n            // TODO: SDKs only pass entry key when given to them, and never when editing...\r\n            // options.entry ||\r\n            // TODO: this is ugly - instead of multiple of same model with different options are sent\r\n            // say requires key/alias. Or if not perhaps make a reliable hash of the options and use that.\r\n            // TODO: store last user state on last request and if user attributes different now\r\n            // give a warning that need to use keys to request new contente\r\n            // (options &&\r\n            //   Object.keys(options).filter(key => key !== 'model').length &&\r\n            //   JSON.stringify({ model: modelName, ...options, initialContent: undefined })) ||\r\n            modelName;\r\n        var isEditingThisModel = this.editingModel === modelName;\r\n        // TODO: include params in this key........\r\n        var currentObservable = this.observersByKey[key];\r\n        // if (options.query && options.query._id) {\r\n        //   this.flushGetContentQueue([options])\r\n        // }\r\n        if (this.apiKey === 'DEMO' && !this.overrides[key] && !options.initialContent) {\r\n            options.initialContent = [];\r\n        }\r\n        var initialContent = options.initialContent;\r\n        // TODO: refresh option in options\r\n        if (currentObservable && (!currentObservable.value || options.cache)) {\r\n            // TODO: test if this ran, otherwise on 404 some observers may never be called...\r\n            if (currentObservable.value) {\r\n                nextTick(function () {\r\n                    // TODO: return a new observable and only that one fires subscribers, don't refire for existing ones\r\n                    currentObservable.next(currentObservable.value);\r\n                });\r\n            }\r\n            return currentObservable;\r\n        }\r\n        if (isEditingThisModel) {\r\n            if (Builder.isBrowser) {\r\n                parent.postMessage({ type: 'builder.updateContent', data: { options: options } }, '*');\r\n            }\r\n        }\r\n        if (!initialContent /* || isEditingThisModel */) {\r\n            if (!this.getContentQueue) {\r\n                this.getContentQueue = [];\r\n            }\r\n            this.getContentQueue.push((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, options), { model: modelName, key: key }));\r\n            if (this.getContentQueue && this.getContentQueue.length >= this.contentPerRequest) {\r\n                var queue_1 = this.getContentQueue.slice();\r\n                this.getContentQueue = [];\r\n                nextTick(function () {\r\n                    _this.flushGetContentQueue(false, queue_1);\r\n                });\r\n            }\r\n            else {\r\n                nextTick(function () {\r\n                    _this.flushGetContentQueue();\r\n                });\r\n            }\r\n        }\r\n        var observable = new BehaviorSubject(null);\r\n        this.observersByKey[key] = observable;\r\n        if (options.noEditorUpdates) {\r\n            this.noEditorUpdates[key] = true;\r\n        }\r\n        if (initialContent) {\r\n            nextTick(function () {\r\n                // TODO: need to testModify this I think...?\r\n                observable.next(initialContent);\r\n            });\r\n        }\r\n        return observable;\r\n    };\r\n    // this is needed to satisfy the Angular SDK, which used to rely on the more complex version of `requestUrl`.\r\n    // even though we only use `fetch()` now, we prefer to keep the old behavior and use the `fetch` that comes from\r\n    // the core SDK for consistency\r\n    Builder.prototype.requestUrl = function (url, options) {\r\n        return getFetch()(url, this.addSdkHeaders(options)).then(function (res) { return res.json(); });\r\n    };\r\n    Object.defineProperty(Builder.prototype, \"host\", {\r\n        get: function () {\r\n            switch (this.env) {\r\n                case 'qa':\r\n                    return 'https://qa.builder.io';\r\n                case 'test':\r\n                    return 'https://builder-io-test.web.app';\r\n                case 'fast':\r\n                    return 'https://fast.builder.io';\r\n                case 'cloud':\r\n                    return 'https://cloud.builder.io';\r\n                case 'cdn2':\r\n                    return 'https://cdn2.builder.io';\r\n                case 'cdn-qa':\r\n                    return 'https://cdn-qa.builder.io';\r\n                case 'development':\r\n                case 'dev':\r\n                    return 'http://localhost:5000';\r\n                case 'cdn-prod':\r\n                    return 'https://cdn.builder.io';\r\n                default:\r\n                    return Builder.overrideHost || 'https://cdn.builder.io';\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Builder.prototype.getSdkHeaders = function () {\r\n        if (!Builder.sdkInfo) {\r\n            return {};\r\n        }\r\n        return {\r\n            'X-Builder-SDK': Builder.sdkInfo.name,\r\n            'X-Builder-SDK-GEN': '1',\r\n            'X-Builder-SDK-Version': Builder.sdkInfo.version,\r\n        };\r\n    };\r\n    Builder.prototype.addSdkHeaders = function (fetchOptions) {\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, fetchOptions), { headers: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, fetchOptions.headers), this.getSdkHeaders()) });\r\n    };\r\n    Builder.prototype.makeFetchApiCall = function (url, requestOptions) {\r\n        return getFetch()(url, this.addSdkHeaders(requestOptions));\r\n    };\r\n    /**\r\n     * Flatten a nested MongoDB query object into a flat object with dot-separated keys.\r\n     * $ keys are not flattened and are left as is.\r\n     *\r\n     * { foo: { bar: { $gt: 5 }}} -> { 'foo.bar': { '$gt': 5 }}\r\n     * { foo: {'bar.id': { $elemMatch: { 'baz.id': { $in: ['abc', 'bcd'] }}}}} -> { 'foo.bar.id': { '$elemMatch': { 'baz.id': { '$in': ['abc', 'bcd'] }}}}\r\n     */\r\n    Builder.prototype.flattenMongoQuery = function (obj, _current, _res) {\r\n        if (_res === void 0) { _res = {}; }\r\n        for (var key in obj) {\r\n            var value = obj[key];\r\n            var newKey = _current ? _current + '.' + key : key;\r\n            if (value &&\r\n                typeof value === 'object' &&\r\n                !Array.isArray(value) &&\r\n                !Object.keys(value).find(function (item) { return item.startsWith('$'); })) {\r\n                this.flattenMongoQuery(value, newKey, _res);\r\n            }\r\n            else {\r\n                _res[newKey] = value;\r\n            }\r\n        }\r\n        return _res;\r\n    };\r\n    Builder.prototype.flushGetContentQueue = function (usePastQueue, useQueue) {\r\n        var _this = this;\r\n        var _a, _b;\r\n        if (usePastQueue === void 0) { usePastQueue = false; }\r\n        if (!this.apiKey) {\r\n            throw new Error(\"Fetching content failed, expected apiKey to be defined instead got: \".concat(this.apiKey));\r\n        }\r\n        if (this.apiVersion) {\r\n            if (!['v1', 'v3'].includes(this.apiVersion)) {\r\n                throw new Error(\"Invalid apiVersion: expected 'v1' or 'v3', received '\".concat(this.apiVersion, \"'\"));\r\n            }\r\n        }\r\n        else {\r\n            this.apiVersion = DEFAULT_API_VERSION;\r\n        }\r\n        if (!usePastQueue && !this.getContentQueue) {\r\n            return;\r\n        }\r\n        var queue = useQueue || (usePastQueue ? this.priorContentQueue : this.getContentQueue) || [];\r\n        // TODO: do this on every request send?\r\n        this.getOverridesFromQueryString();\r\n        var queryParams = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ \r\n            // TODO: way to force a request to be in a separate queue. or just lower queue limit to be 1 by default\r\n            omit: (_a = queue[0].omit) !== null && _a !== void 0 ? _a : 'meta.componentsUsed', apiKey: this.apiKey }, queue[0].options), this.queryOptions);\r\n        if (queue[0].locale) {\r\n            queryParams.locale = queue[0].locale;\r\n        }\r\n        if (queue[0].fields) {\r\n            queryParams.fields = queue[0].fields;\r\n        }\r\n        if (queue[0].format) {\r\n            queryParams.format = queue[0].format;\r\n        }\r\n        if ('noTraverse' in queue[0]) {\r\n            queryParams.noTraverse = queue[0].noTraverse;\r\n        }\r\n        if ('includeUnpublished' in queue[0]) {\r\n            queryParams.includeUnpublished = queue[0].includeUnpublished;\r\n        }\r\n        if (queue[0].sort) {\r\n            queryParams.sort = queue[0].sort;\r\n        }\r\n        var pageQueryParams = (typeof location !== 'undefined'\r\n            ? QueryString.parseDeep(location.search.substr(1))\r\n            : undefined) || {}; // TODO: WHAT about SSR (this.request) ?\r\n        var userAttributes = \r\n        // FIXME: HACK: only checks first in queue for user attributes overrides, should check all\r\n        // TODO: merge user attributes provided here with defaults and current user attiributes (?)\r\n        queue && queue[0].userAttributes\r\n            ? queue[0].userAttributes\r\n            : this.targetContent\r\n                ? this.getUserAttributes()\r\n                : {\r\n                    urlPath: this.getLocation().pathname,\r\n                };\r\n        var fullUrlQueueItem = queue.find(function (item) { return !!item.includeUrl; });\r\n        if (fullUrlQueueItem) {\r\n            var location_1 = this.getLocation();\r\n            if (location_1.origin) {\r\n                queryParams.url = \"\".concat(location_1.origin).concat(location_1.pathname).concat(location_1.search);\r\n            }\r\n        }\r\n        var urlQueueItem = useQueue === null || useQueue === void 0 ? void 0 : useQueue.find(function (item) { return item.url; });\r\n        if (urlQueueItem === null || urlQueueItem === void 0 ? void 0 : urlQueueItem.url) {\r\n            userAttributes.urlPath = urlQueueItem.url.split('?')[0];\r\n        }\r\n        // TODO: merge in the attribute from query string ones\r\n        // TODO: make this an option per component/request\r\n        queryParams.userAttributes = JSON.stringify(userAttributes);\r\n        if (!usePastQueue && !useQueue) {\r\n            this.priorContentQueue = queue;\r\n            this.getContentQueue = null;\r\n        }\r\n        var cachebust = this.cachebust ||\r\n            isIframe ||\r\n            pageQueryParams.cachebust ||\r\n            pageQueryParams['builder.cachebust'];\r\n        if (cachebust || this.env !== 'production') {\r\n            queryParams.cachebust = true;\r\n        }\r\n        if (Builder.isEditing) {\r\n            queryParams.isEditing = true;\r\n        }\r\n        if (this.noCache || this.env !== 'production') {\r\n            queryParams.noCache = true;\r\n        }\r\n        if (size(this.overrides)) {\r\n            for (var key in this.overrides) {\r\n                if (this.overrides.hasOwnProperty(key)) {\r\n                    queryParams[\"overrides.\".concat(key)] = this.overrides[key];\r\n                }\r\n            }\r\n        }\r\n        for (var _i = 0, queue_2 = queue; _i < queue_2.length; _i++) {\r\n            var options = queue_2[_i];\r\n            var format_1 = options.format;\r\n            if (format_1) {\r\n                queryParams.format = format_1;\r\n            }\r\n            // TODO: remove me and make permodel\r\n            if (options.static) {\r\n                queryParams.static = options.static;\r\n            }\r\n            if (options.cachebust) {\r\n                queryParams.cachebust = options.cachebust;\r\n            }\r\n            if (isPositiveNumber(options.cacheSeconds)) {\r\n                queryParams.cacheSeconds = options.cacheSeconds;\r\n            }\r\n            if (isPositiveNumber(options.staleCacheSeconds)) {\r\n                queryParams.staleCacheSeconds = options.staleCacheSeconds;\r\n            }\r\n            if (this.apiEndpoint === 'content') {\r\n                queryParams.includeRefs = true;\r\n            }\r\n            var properties = [\r\n                'prerender',\r\n                'extractCss',\r\n                'limit',\r\n                'offset',\r\n                'query',\r\n                'preview',\r\n                'model',\r\n                'entry',\r\n                'rev',\r\n                'static',\r\n                'includeRefs',\r\n            ];\r\n            for (var _c = 0, properties_1 = properties; _c < properties_1.length; _c++) {\r\n                var key = properties_1[_c];\r\n                var value = options[key];\r\n                if (value !== undefined) {\r\n                    if (this.apiEndpoint === 'query') {\r\n                        queryParams.options = queryParams.options || {};\r\n                        queryParams.options[options.key] = queryParams.options[options.key] || {};\r\n                        queryParams.options[options.key][key] = JSON.stringify(value);\r\n                    }\r\n                    else {\r\n                        queryParams[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.preview && this.previewingModel === ((_b = queue === null || queue === void 0 ? void 0 : queue[0]) === null || _b === void 0 ? void 0 : _b.model)) {\r\n            queryParams.preview = 'true';\r\n        }\r\n        var hasParams = Object.keys(queryParams).length > 0;\r\n        // TODO: option to force dev or qa api here\r\n        var host = this.host;\r\n        var keyNames = queue.map(function (item) { return encodeURIComponent(item.key); }).join(',');\r\n        if (this.overrideParams) {\r\n            var params = omit(QueryString.parse(this.overrideParams), 'apiKey');\r\n            assign(queryParams, params);\r\n        }\r\n        var format = queryParams.format;\r\n        var isApiCallForCodegen = format === 'solid' || format === 'react';\r\n        var isApiCallForCodegenOrQuery = isApiCallForCodegen || this.apiEndpoint === 'query';\r\n        if (this.apiEndpoint === 'content') {\r\n            if (queue[0].query) {\r\n                delete queryParams.query;\r\n                var objectToFlatten = { query: queue[0].query };\r\n                var flattened = this.flattenMongoQuery(objectToFlatten);\r\n                for (var key in flattened) {\r\n                    queryParams[key] = JSON.stringify(flattened[key]);\r\n                }\r\n            }\r\n        }\r\n        var queryStr = QueryString.stringifyDeep(queryParams);\r\n        var fetchOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ headers: {} }, queue[0].fetchOptions);\r\n        if (this.authToken) {\r\n            fetchOptions.headers = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, fetchOptions.headers), { Authorization: \"Bearer \".concat(this.authToken) });\r\n        }\r\n        var url;\r\n        if (isApiCallForCodegen) {\r\n            url = \"\".concat(host, \"/api/v1/codegen/\").concat(this.apiKey, \"/\").concat(keyNames);\r\n        }\r\n        else if (this.apiEndpoint === 'query') {\r\n            url = \"\".concat(host, \"/api/v3/query/\").concat(this.apiKey, \"/\").concat(keyNames);\r\n        }\r\n        else {\r\n            url = \"\".concat(host, \"/api/v3/content/\").concat(queue[0].model);\r\n        }\r\n        url = url + (queryParams && hasParams ? \"?\".concat(queryStr) : '');\r\n        var promise = this.makeFetchApiCall(url, fetchOptions)\r\n            .then(function (res) { return res.json(); })\r\n            .then(function (result) {\r\n            for (var _i = 0, queue_3 = queue; _i < queue_3.length; _i++) {\r\n                var options = queue_3[_i];\r\n                var keyName = options.key;\r\n                if (options.model === _this.blockContentLoading && !options.noEditorUpdates) {\r\n                    continue;\r\n                }\r\n                var isEditingThisModel = _this.editingModel === options.model;\r\n                if (isEditingThisModel && Builder.isEditing) {\r\n                    parent.postMessage({ type: 'builder.updateContent', data: { options: options } }, '*');\r\n                    // return;\r\n                }\r\n                var observer = _this.observersByKey[keyName];\r\n                if (!observer) {\r\n                    return;\r\n                }\r\n                var data = isApiCallForCodegenOrQuery ? result[keyName] : result.results;\r\n                var sorted = data; // sortBy(data, item => item.priority);\r\n                if (data) {\r\n                    var testModifiedResults = Builder.isServer\r\n                        ? sorted\r\n                        : _this.processResultsForTests(sorted);\r\n                    observer.next(testModifiedResults);\r\n                }\r\n                else {\r\n                    var search = _this.getLocation().search;\r\n                    if ((search || '').includes('builder.preview=' + options.model)) {\r\n                        var previewData = {\r\n                            id: 'preview',\r\n                            name: 'Preview',\r\n                            data: {},\r\n                        };\r\n                        observer.next([previewData]);\r\n                    }\r\n                    observer.next([]);\r\n                }\r\n            }\r\n        }, function (err) {\r\n            for (var _i = 0, queue_4 = queue; _i < queue_4.length; _i++) {\r\n                var options = queue_4[_i];\r\n                var observer = _this.observersByKey[options.key];\r\n                if (!observer) {\r\n                    return;\r\n                }\r\n                observer.error(err);\r\n            }\r\n        });\r\n        return promise;\r\n    };\r\n    Builder.prototype.processResultsForTests = function (results) {\r\n        var _this = this;\r\n        var _a;\r\n        var mappedResults = results.map(function (item) {\r\n            if (!item.variations) {\r\n                return item;\r\n            }\r\n            var cookieValue = _this.getTestCookie(item.id);\r\n            var cookieVariation = cookieValue === item.id ? item : item.variations[cookieValue];\r\n            if (cookieVariation) {\r\n                return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, item), { data: cookieVariation.data, variationId: cookieValue, testVariationId: cookieValue, testVariationName: cookieVariation.name });\r\n            }\r\n            if (_this.canTrack && item.variations && size(item.variations)) {\r\n                var n = 0;\r\n                var random = Math.random();\r\n                for (var id in item.variations) {\r\n                    var variation = item.variations[id];\r\n                    var testRatio = variation.testRatio;\r\n                    n += testRatio;\r\n                    if (random < n) {\r\n                        _this.setTestCookie(item.id, variation.id);\r\n                        var variationName = variation.name || (variation.id === item.id ? 'Default variation' : '');\r\n                        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, item), { data: variation.data, variationId: variation.id, testVariationId: variation.id, variationName: variationName, testVariationName: variationName });\r\n                    }\r\n                }\r\n                _this.setTestCookie(item.id, item.id);\r\n            }\r\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, item), { variationId: item.id }), (item.variations &&\r\n                size(item.variations) && {\r\n                testVariationId: item.id,\r\n                testVariationName: 'Default variation',\r\n            }));\r\n        });\r\n        if (isIframe) {\r\n            (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage({ type: 'builder.contentResults', data: { results: mappedResults } }, '*');\r\n        }\r\n        return mappedResults;\r\n    };\r\n    Builder.prototype.getTestCookie = function (contentId) {\r\n        return this.getCookie(\"\".concat(this.testCookiePrefix, \".\").concat(contentId));\r\n    };\r\n    Builder.prototype.setTestCookie = function (contentId, variationId) {\r\n        if (!this.canTrack) {\r\n            this.cookieQueue.push([contentId, variationId]);\r\n            return;\r\n        }\r\n        // 30 days from now\r\n        var future = new Date();\r\n        future.setDate(future.getDate() + 30);\r\n        return this.setCookie(\"\".concat(this.testCookiePrefix, \".\").concat(contentId), variationId, future);\r\n    };\r\n    Builder.prototype.getCookie = function (name) {\r\n        if (this.cookies) {\r\n            return this.cookies.get(name);\r\n        }\r\n        return Builder.isBrowser && getCookie(name);\r\n    };\r\n    Builder.prototype.setCookie = function (name, value, expires) {\r\n        if (this.cookies && !(Builder.isServer && Builder.isStatic)) {\r\n            return this.cookies.set(name, value, {\r\n                expires: expires,\r\n                secure: this.getLocation().protocol === 'https:',\r\n            });\r\n        }\r\n        return Builder.isBrowser && setCookie(name, value, expires);\r\n    };\r\n    Builder.prototype.getContent = function (modelName, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (!this.apiKey) {\r\n            throw new Error(\"Fetching content from model \".concat(modelName, \" failed, expected apiKey to be defined instead got: \").concat(this.apiKey));\r\n        }\r\n        return this.queueGetContent(modelName, options);\r\n    };\r\n    Builder.prototype.getAll = function (modelName, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var instance = this;\r\n        if (!Builder.isBrowser) {\r\n            instance = new Builder(options.apiKey || this.apiKey, options.req, options.res, false, options.authToken || this.authToken, options.apiVersion || this.apiVersion);\r\n            instance.setUserAttributes(this.getUserAttributes());\r\n        }\r\n        else {\r\n            // NOTE: All these are when .init is not called and the customer\r\n            // directly calls .get on the singleton instance of Builder\r\n            if (options.apiKey && !this.apiKey) {\r\n                this.apiKey = options.apiKey;\r\n            }\r\n            if (options.authToken && !this.authToken) {\r\n                this.authToken = options.authToken;\r\n            }\r\n            if (options.apiVersion && !this.apiVersion) {\r\n                this.apiVersion = options.apiVersion;\r\n            }\r\n        }\r\n        // Set noTraverse=true if NOT already passed by user, for query performance\r\n        if (!('noTraverse' in options)) {\r\n            options.noTraverse = true;\r\n        }\r\n        return instance\r\n            .getContent(modelName, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ limit: 30 }, options), { key: options.key ||\r\n                // Make the key include all options, so we don't reuse cache for the same content fetched\r\n                // with different options\r\n                Builder.isBrowser\r\n                ? \"\".concat(modelName, \":\").concat(hash_sum__WEBPACK_IMPORTED_MODULE_0___default()(omit(options, 'initialContent', 'req', 'res')))\r\n                : undefined }))\r\n            .promise();\r\n    };\r\n    Builder.VERSION = SDK_VERSION;\r\n    Builder.components = [];\r\n    /**\r\n     * Makes it so that a/b tests generate code like {@link\r\n     * https://www.builder.io/blog/high-performance-no-code#__next:~:text=Static%20generated%20A%2FB%20testing}\r\n     * instead of the old way where we render only one test group at a time on the\r\n     * server. This is the preferred/better way not and we should ultimately make it\r\n     * the default\r\n     */\r\n    Builder.isStatic = true;\r\n    Builder.animator = new Animator();\r\n    Builder.nextTick = nextTick;\r\n    Builder.throttle = throttle;\r\n    Builder.editors = [];\r\n    Builder.trustedHosts = [\r\n        '*.beta.builder.io',\r\n        'beta.builder.io',\r\n        'builder.io',\r\n        'localhost',\r\n        'qa.builder.io',\r\n    ];\r\n    Builder.plugins = [];\r\n    Builder.actions = [];\r\n    Builder.registry = {};\r\n    Builder.attributesCookieName = 'builder.userAttributes';\r\n    Builder.registryChange = new BehaviorSubject({});\r\n    Builder._editingPage = false;\r\n    Builder.isIframe = isIframe;\r\n    Builder.isBrowser = isBrowser;\r\n    Builder.isReactNative = isReactNative;\r\n    Builder.isServer = !isBrowser && !isReactNative;\r\n    Builder.previewingModel = Builder.isBrowser && getQueryParam(location.href, 'builder.preview');\r\n    Builder.settings = {};\r\n    Builder.settingsChange = new BehaviorSubject({});\r\n    // TODO: this is quick and dirty, do better implementation later. Also can be unreliable\r\n    // if page 301s etc. Use a query param instead? also could have issues with redirects. Injecting var could\r\n    // work but is async...\r\n    Builder.isEditing = Boolean(isIframe &&\r\n        ((document.referrer && document.referrer.match(/builder\\.io|localhost:1234/)) ||\r\n            location.search.indexOf('builder.frameEditing=') !== -1));\r\n    Builder.isPreviewing = Boolean(isBrowser &&\r\n        (location.search.indexOf('builder.preview=') !== -1 ||\r\n            location.search.indexOf('builder.frameEditing=') !== -1));\r\n    Builder.isReact = false;\r\n    Builder.sdkInfo = undefined;\r\n    Builder.overrideUserAttributes = {};\r\n    return Builder;\r\n}());\n\nvar builder = new Builder(null, undefined, undefined, true);\r\nBuilder.singletonInstance = builder;\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@builder.io/sdk/dist/index.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@builder.io/sdk/node_modules/tslib/tslib.es6.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@builder.io/sdk/node_modules/tslib/tslib.es6.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@builder.io/sdk/node_modules/tslib/tslib.es6.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/cache/dist/cache.browser.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@emotion/cache/dist/cache.browser.esm.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/sheet */ \"(app-pages-browser)/./node_modules/@emotion/sheet/dist/sheet.browser.esm.js\");\n/* harmony import */ var _emotion_stylis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/stylis */ \"(app-pages-browser)/./node_modules/@emotion/stylis/dist/stylis.browser.esm.js\");\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(app-pages-browser)/./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js\");\n\n\n\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new _emotion_stylis__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stylisOptions);\n\n  if (true) {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if ( true && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (true) {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__.StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createCache);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/cache/dist/cache.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/core/dist/core.browser.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@emotion/core/dist/core.browser.esm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheProvider: () => (/* reexport safe */ _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.C),\n/* harmony export */   ClassNames: () => (/* binding */ ClassNames),\n/* harmony export */   Global: () => (/* binding */ Global),\n/* harmony export */   ThemeContext: () => (/* reexport safe */ _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.T),\n/* harmony export */   createElement: () => (/* binding */ jsx),\n/* harmony export */   css: () => (/* reexport safe */ _emotion_css__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   jsx: () => (/* binding */ jsx),\n/* harmony export */   keyframes: () => (/* binding */ keyframes),\n/* harmony export */   withEmotionCache: () => (/* reexport safe */ _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.w)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/cache */ \"(app-pages-browser)/./node_modules/@emotion/cache/dist/cache.browser.esm.js\");\n/* harmony import */ var _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./emotion-element-04d85134.browser.esm.js */ \"(app-pages-browser)/./node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js\");\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/utils */ \"(app-pages-browser)/./node_modules/@emotion/utils/dist/utils.browser.esm.js\");\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/serialize */ \"(app-pages-browser)/./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n/* harmony import */ var _emotion_sheet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/sheet */ \"(app-pages-browser)/./node_modules/@emotion/sheet/dist/sheet.browser.esm.js\");\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/css */ \"(app-pages-browser)/./node_modules/@emotion/css/dist/css.browser.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.h.call(props, 'css')) {\n    // $FlowFixMe\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = _emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.E;\n  createElementArgArray[1] = (0,_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.c)(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return react__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global = /* #__PURE__ */(0,_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.w)(function (props, cache) {\n  if ( true && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.T.Consumer, null, function (theme) {\n      var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_5__.serializeStyles)([styles(theme)]);\n      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_5__.serializeStyles)([styles]);\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n});\n\n// maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar InnerGlobal = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new _emotion_sheet__WEBPACK_IMPORTED_MODULE_6__.StyleSheet({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_4__.insertStyles)(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n\n    return null;\n  };\n\n  return InnerGlobal;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\n\nvar keyframes = function keyframes() {\n  var insertable = _emotion_css__WEBPACK_IMPORTED_MODULE_7__[\"default\"].apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_4__.getRegisteredStyles)(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar ClassNames = (0,_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.w)(function (props, context) {\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_emotion_element_04d85134_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.T.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && \"development\" !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_5__.serializeStyles)(args, context.registered);\n\n      {\n        (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_4__.insertStyles)(context, serialized, false);\n      }\n\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && \"development\" !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n    var possiblyStyleElement = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(Noop, null);\n\n\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, possiblyStyleElement, ele);\n  });\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/core/dist/core.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C: () => (/* binding */ CacheProvider),\n/* harmony export */   E: () => (/* binding */ Emotion),\n/* harmony export */   T: () => (/* binding */ ThemeContext),\n/* harmony export */   c: () => (/* binding */ createEmotionProps),\n/* harmony export */   h: () => (/* binding */ hasOwnProperty),\n/* harmony export */   w: () => (/* binding */ withEmotionCache)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/inheritsLoose */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/cache */ \"(app-pages-browser)/./node_modules/@emotion/cache/dist/cache.browser.esm.js\");\n/* harmony import */ var _emotion_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/utils */ \"(app-pages-browser)/./node_modules/@emotion/utils/dist/utils.browser.esm.js\");\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/serialize */ \"(app-pages-browser)/./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n\n\n\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar EmotionCacheContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? (0,_emotion_cache__WEBPACK_IMPORTED_MODULE_2__[\"default\"])() : null);\nvar ThemeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if ( true && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\n  if (true) {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  return newProps;\n};\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_3__.getRegisteredStyles)(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__.serializeStyles)(registeredStyles);\n\n  if ( true && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_4__.serializeStyles)([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = (0,_emotion_utils__WEBPACK_IMPORTED_MODULE_3__.insertStyles)(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && ( false || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(type, newProps);\n  var possiblyStyleElement = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(Noop, null);\n\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, possiblyStyleElement, ele);\n}; // eslint-disable-next-line no-undef\n\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  if (typeof props.css === 'function') {\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (true) {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/css/dist/css.browser.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@emotion/css/dist/css.browser.esm.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_serialize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/serialize */ \"(app-pages-browser)/./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\");\n\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return (0,_emotion_serialize__WEBPACK_IMPORTED_MODULE_0__.serializeStyles)(args);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (css);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jc3MvZGlzdC9jc3MuYnJvd3Nlci5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7O0FBRXJEO0FBQ0Esc0VBQXNFLGFBQWE7QUFDbkY7QUFDQTs7QUFFQSxTQUFTLG1FQUFlO0FBQ3hCOztBQUVBLGlFQUFlLEdBQUcsRUFBQyIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvendlYmthcHVua2Evbm9kZV9tb2R1bGVzL0BlbW90aW9uL2Nzcy9kaXN0L2Nzcy5icm93c2VyLmVzbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZXJpYWxpemVTdHlsZXMgfSBmcm9tICdAZW1vdGlvbi9zZXJpYWxpemUnO1xuXG5mdW5jdGlvbiBjc3MoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gc2VyaWFsaXplU3R5bGVzKGFyZ3MpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjc3M7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/css/dist/css.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/hash/dist/hash.browser.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@emotion/hash/dist/hash.browser.esm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (murmur2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9oYXNoL2Rpc3QvaGFzaC5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxVQUFVO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7OztBQUdKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3p3ZWJrYXB1bmthL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9oYXNoL2Rpc3QvaGFzaC5icm93c2VyLmVzbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL2dhcnljb3VydC9tdXJtdXJoYXNoLWpzXG4vLyBQb3J0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vYWFwcGxlYnkvc21oYXNoZXIvYmxvYi82MWEwNTMwZjI4Mjc3ZjJlODUwYmZjMzk2MDBjZTYxZDAyYjUxOGRlL3NyYy9NdXJtdXJIYXNoMi5jcHAjTDM3LUw4NlxuZnVuY3Rpb24gbXVybXVyMihzdHIpIHtcbiAgLy8gJ20nIGFuZCAncicgYXJlIG1peGluZyBjb25zdGFudHMgZ2VuZXJhdGVkIG9mZmxpbmUuXG4gIC8vIFRoZXkncmUgbm90IHJlYWxseSAnbWFnaWMnLCB0aGV5IGp1c3QgaGFwcGVuIHRvIHdvcmsgd2VsbC5cbiAgLy8gY29uc3QgbSA9IDB4NWJkMWU5OTU7XG4gIC8vIGNvbnN0IHIgPSAyNDtcbiAgLy8gSW5pdGlhbGl6ZSB0aGUgaGFzaFxuICB2YXIgaCA9IDA7IC8vIE1peCA0IGJ5dGVzIGF0IGEgdGltZSBpbnRvIHRoZSBoYXNoXG5cbiAgdmFyIGssXG4gICAgICBpID0gMCxcbiAgICAgIGxlbiA9IHN0ci5sZW5ndGg7XG5cbiAgZm9yICg7IGxlbiA+PSA0OyArK2ksIGxlbiAtPSA0KSB7XG4gICAgayA9IHN0ci5jaGFyQ29kZUF0KGkpICYgMHhmZiB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgOCB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgMTYgfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDI0O1xuICAgIGsgPVxuICAgIC8qIE1hdGguaW11bChrLCBtKTogKi9cbiAgICAoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChrID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICAgIGsgXj1cbiAgICAvKiBrID4+PiByOiAqL1xuICAgIGsgPj4+IDI0O1xuICAgIGggPVxuICAgIC8qIE1hdGguaW11bChrLCBtKTogKi9cbiAgICAoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChrID4+PiAxNikgKiAweGU5OTUgPDwgMTYpIF5cbiAgICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gICAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgfSAvLyBIYW5kbGUgdGhlIGxhc3QgZmV3IGJ5dGVzIG9mIHRoZSBpbnB1dCBhcnJheVxuXG5cbiAgc3dpdGNoIChsZW4pIHtcbiAgICBjYXNlIDM6XG4gICAgICBoIF49IChzdHIuY2hhckNvZGVBdChpICsgMikgJiAweGZmKSA8PCAxNjtcblxuICAgIGNhc2UgMjpcbiAgICAgIGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAxKSAmIDB4ZmYpIDw8IDg7XG5cbiAgICBjYXNlIDE6XG4gICAgICBoIF49IHN0ci5jaGFyQ29kZUF0KGkpICYgMHhmZjtcbiAgICAgIGggPVxuICAgICAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAgICAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgfSAvLyBEbyBhIGZldyBmaW5hbCBtaXhlcyBvZiB0aGUgaGFzaCB0byBlbnN1cmUgdGhlIGxhc3QgZmV3XG4gIC8vIGJ5dGVzIGFyZSB3ZWxsLWluY29ycG9yYXRlZC5cblxuXG4gIGggXj0gaCA+Pj4gMTM7XG4gIGggPVxuICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIHJldHVybiAoKGggXiBoID4+PiAxNSkgPj4+IDApLnRvU3RyaW5nKDM2KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbXVybXVyMjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/hash/dist/hash.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/serialize/dist/serialize.browser.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@emotion/serialize/dist/serialize.browser.esm.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeStyles: () => (/* binding */ serializeStyles)\n/* harmony export */ });\n/* harmony import */ var _emotion_hash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/hash */ \"(app-pages-browser)/./node_modules/@emotion/hash/dist/hash.browser.esm.js\");\n/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/unitless */ \"(app-pages-browser)/./node_modules/@emotion/serialize/node_modules/@emotion/unitless/dist/unitless.browser.esm.js\");\n/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/memoize */ \"(app-pages-browser)/./node_modules/@emotion/serialize/node_modules/@emotion/memoize/dist/memoize.browser.esm.js\");\n\n\n\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = (0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (_emotion_unitless__WEBPACK_IMPORTED_MODULE_1__[\"default\"][key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (true) {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if ( true && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if ( true && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (true) {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (true) {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if ( true && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && \"development\" !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if ( true && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (true) {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if ( true && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if ( true && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (true) {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = (0,_emotion_hash__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(styles) + identifierName;\n\n  if (true) {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/serialize/dist/serialize.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/serialize/node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@emotion/serialize/node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (memoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zZXJpYWxpemUvbm9kZV9tb2R1bGVzL0BlbW90aW9uL21lbW9pemUvZGlzdC9tZW1vaXplLmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3p3ZWJrYXB1bmthL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zZXJpYWxpemUvbm9kZV9tb2R1bGVzL0BlbW90aW9uL21lbW9pemUvZGlzdC9tZW1vaXplLmJyb3dzZXIuZXNtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG1lbW9pemUoZm4pIHtcbiAgdmFyIGNhY2hlID0ge307XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgaWYgKGNhY2hlW2FyZ10gPT09IHVuZGVmaW5lZCkgY2FjaGVbYXJnXSA9IGZuKGFyZyk7XG4gICAgcmV0dXJuIGNhY2hlW2FyZ107XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/serialize/node_modules/@emotion/memoize/dist/memoize.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/serialize/node_modules/@emotion/unitless/dist/unitless.browser.esm.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@emotion/serialize/node_modules/@emotion/unitless/dist/unitless.browser.esm.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (unitlessKeys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zZXJpYWxpemUvbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxZQUFZLEVBQUMiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3p3ZWJrYXB1bmthL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zZXJpYWxpemUvbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHVuaXRsZXNzS2V5cyA9IHtcbiAgYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6IDEsXG4gIGJvcmRlckltYWdlT3V0c2V0OiAxLFxuICBib3JkZXJJbWFnZVNsaWNlOiAxLFxuICBib3JkZXJJbWFnZVdpZHRoOiAxLFxuICBib3hGbGV4OiAxLFxuICBib3hGbGV4R3JvdXA6IDEsXG4gIGJveE9yZGluYWxHcm91cDogMSxcbiAgY29sdW1uQ291bnQ6IDEsXG4gIGNvbHVtbnM6IDEsXG4gIGZsZXg6IDEsXG4gIGZsZXhHcm93OiAxLFxuICBmbGV4UG9zaXRpdmU6IDEsXG4gIGZsZXhTaHJpbms6IDEsXG4gIGZsZXhOZWdhdGl2ZTogMSxcbiAgZmxleE9yZGVyOiAxLFxuICBncmlkUm93OiAxLFxuICBncmlkUm93RW5kOiAxLFxuICBncmlkUm93U3BhbjogMSxcbiAgZ3JpZFJvd1N0YXJ0OiAxLFxuICBncmlkQ29sdW1uOiAxLFxuICBncmlkQ29sdW1uRW5kOiAxLFxuICBncmlkQ29sdW1uU3BhbjogMSxcbiAgZ3JpZENvbHVtblN0YXJ0OiAxLFxuICBtc0dyaWRSb3c6IDEsXG4gIG1zR3JpZFJvd1NwYW46IDEsXG4gIG1zR3JpZENvbHVtbjogMSxcbiAgbXNHcmlkQ29sdW1uU3BhbjogMSxcbiAgZm9udFdlaWdodDogMSxcbiAgbGluZUhlaWdodDogMSxcbiAgb3BhY2l0eTogMSxcbiAgb3JkZXI6IDEsXG4gIG9ycGhhbnM6IDEsXG4gIHRhYlNpemU6IDEsXG4gIHdpZG93czogMSxcbiAgekluZGV4OiAxLFxuICB6b29tOiAxLFxuICBXZWJraXRMaW5lQ2xhbXA6IDEsXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IDEsXG4gIGZsb29kT3BhY2l0eTogMSxcbiAgc3RvcE9wYWNpdHk6IDEsXG4gIHN0cm9rZURhc2hhcnJheTogMSxcbiAgc3Ryb2tlRGFzaG9mZnNldDogMSxcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogMSxcbiAgc3Ryb2tlT3BhY2l0eTogMSxcbiAgc3Ryb2tlV2lkdGg6IDFcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVuaXRsZXNzS2V5cztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/serialize/node_modules/@emotion/unitless/dist/unitless.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/sheet/dist/sheet.browser.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@emotion/sheet/dist/sheet.browser.esm.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StyleSheet: () => (/* binding */ StyleSheet)\n/* harmony export */ });\n/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? \"development\" === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (true) {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zaGVldC9kaXN0L3NoZWV0LmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBLFNBQVMsYUFBYTs7QUFFdEIsa0NBQWtDLG1DQUFtQzs7QUFFckUsMEJBQTBCLHdCQUF3QjtBQUNsRDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7O0FBRUo7OztBQUdBLGtCQUFrQixpQ0FBaUM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGFBQW9CO0FBQ3ZFO0FBQ0E7QUFDQSxnQ0FBZ0M7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9GQUFvRjtBQUNwRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixZQUFZLElBQXFDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0EsQ0FBQzs7QUFFcUIiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3p3ZWJrYXB1bmthL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zaGVldC9kaXN0L3NoZWV0LmJyb3dzZXIuZXNtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5cbkJhc2VkIG9mZiBnbGFtb3IncyBTdHlsZVNoZWV0LCB0aGFua3MgU3VuaWwg4p2k77iPXG5cbmhpZ2ggcGVyZm9ybWFuY2UgU3R5bGVTaGVldCBmb3IgY3NzLWluLWpzIHN5c3RlbXNcblxuLSB1c2VzIG11bHRpcGxlIHN0eWxlIHRhZ3MgYmVoaW5kIHRoZSBzY2VuZXMgZm9yIG1pbGxpb25zIG9mIHJ1bGVzXG4tIHVzZXMgYGluc2VydFJ1bGVgIGZvciBhcHBlbmRpbmcgaW4gcHJvZHVjdGlvbiBmb3IgKm11Y2gqIGZhc3RlciBwZXJmb3JtYW5jZVxuXG4vLyB1c2FnZVxuXG5pbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAnQGVtb3Rpb24vc2hlZXQnXG5cbmxldCBzdHlsZVNoZWV0ID0gbmV3IFN0eWxlU2hlZXQoeyBrZXk6ICcnLCBjb250YWluZXI6IGRvY3VtZW50LmhlYWQgfSlcblxuc3R5bGVTaGVldC5pbnNlcnQoJyNib3ggeyBib3JkZXI6IDFweCBzb2xpZCByZWQ7IH0nKVxuLSBhcHBlbmRzIGEgY3NzIHJ1bGUgaW50byB0aGUgc3R5bGVzaGVldFxuXG5zdHlsZVNoZWV0LmZsdXNoKClcbi0gZW1wdGllcyB0aGUgc3R5bGVzaGVldCBvZiBhbGwgaXRzIGNvbnRlbnRzXG5cbiovXG4vLyAkRmxvd0ZpeE1lXG5mdW5jdGlvbiBzaGVldEZvclRhZyh0YWcpIHtcbiAgaWYgKHRhZy5zaGVldCkge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICByZXR1cm4gdGFnLnNoZWV0O1xuICB9IC8vIHRoaXMgd2VpcmRuZXNzIGJyb3VnaHQgdG8geW91IGJ5IGZpcmVmb3hcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBkb2N1bWVudC5zdHlsZVNoZWV0cy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChkb2N1bWVudC5zdHlsZVNoZWV0c1tpXS5vd25lck5vZGUgPT09IHRhZykge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgcmV0dXJuIGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgdGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgdGFnLnNldEF0dHJpYnV0ZSgnZGF0YS1lbW90aW9uJywgb3B0aW9ucy5rZXkpO1xuXG4gIGlmIChvcHRpb25zLm5vbmNlICE9PSB1bmRlZmluZWQpIHtcbiAgICB0YWcuc2V0QXR0cmlidXRlKCdub25jZScsIG9wdGlvbnMubm9uY2UpO1xuICB9XG5cbiAgdGFnLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKSk7XG4gIHJldHVybiB0YWc7XG59XG5cbnZhciBTdHlsZVNoZWV0ID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3R5bGVTaGVldChvcHRpb25zKSB7XG4gICAgdGhpcy5pc1NwZWVkeSA9IG9wdGlvbnMuc3BlZWR5ID09PSB1bmRlZmluZWQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIDogb3B0aW9ucy5zcGVlZHk7XG4gICAgdGhpcy50YWdzID0gW107XG4gICAgdGhpcy5jdHIgPSAwO1xuICAgIHRoaXMubm9uY2UgPSBvcHRpb25zLm5vbmNlOyAvLyBrZXkgaXMgdGhlIHZhbHVlIG9mIHRoZSBkYXRhLWVtb3Rpb24gYXR0cmlidXRlLCBpdCdzIHVzZWQgdG8gaWRlbnRpZnkgZGlmZmVyZW50IHNoZWV0c1xuXG4gICAgdGhpcy5rZXkgPSBvcHRpb25zLmtleTtcbiAgICB0aGlzLmNvbnRhaW5lciA9IG9wdGlvbnMuY29udGFpbmVyO1xuICAgIHRoaXMuYmVmb3JlID0gbnVsbDtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdHlsZVNoZWV0LnByb3RvdHlwZTtcblxuICBfcHJvdG8uaW5zZXJ0ID0gZnVuY3Rpb24gaW5zZXJ0KHJ1bGUpIHtcbiAgICAvLyB0aGUgbWF4IGxlbmd0aCBpcyBob3cgbWFueSBydWxlcyB3ZSBoYXZlIHBlciBzdHlsZSB0YWcsIGl0J3MgNjUwMDAgaW4gc3BlZWR5IG1vZGVcbiAgICAvLyBpdCdzIDEgaW4gZGV2IGJlY2F1c2Ugd2UgaW5zZXJ0IHNvdXJjZSBtYXBzIHRoYXQgbWFwIGEgc2luZ2xlIHJ1bGUgdG8gYSBsb2NhdGlvblxuICAgIC8vIGFuZCB5b3UgY2FuIG9ubHkgaGF2ZSBvbmUgc291cmNlIG1hcCBwZXIgc3R5bGUgdGFnXG4gICAgaWYgKHRoaXMuY3RyICUgKHRoaXMuaXNTcGVlZHkgPyA2NTAwMCA6IDEpID09PSAwKSB7XG4gICAgICB2YXIgX3RhZyA9IGNyZWF0ZVN0eWxlRWxlbWVudCh0aGlzKTtcblxuICAgICAgdmFyIGJlZm9yZTtcblxuICAgICAgaWYgKHRoaXMudGFncy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgYmVmb3JlID0gdGhpcy5iZWZvcmU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBiZWZvcmUgPSB0aGlzLnRhZ3NbdGhpcy50YWdzLmxlbmd0aCAtIDFdLm5leHRTaWJsaW5nO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmNvbnRhaW5lci5pbnNlcnRCZWZvcmUoX3RhZywgYmVmb3JlKTtcbiAgICAgIHRoaXMudGFncy5wdXNoKF90YWcpO1xuICAgIH1cblxuICAgIHZhciB0YWcgPSB0aGlzLnRhZ3NbdGhpcy50YWdzLmxlbmd0aCAtIDFdO1xuXG4gICAgaWYgKHRoaXMuaXNTcGVlZHkpIHtcbiAgICAgIHZhciBzaGVldCA9IHNoZWV0Rm9yVGFnKHRhZyk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIHRoaXMgaXMgYSByZWFsbHkgaG90IHBhdGhcbiAgICAgICAgLy8gd2UgY2hlY2sgdGhlIHNlY29uZCBjaGFyYWN0ZXIgZmlyc3QgYmVjYXVzZSBoYXZpbmcgXCJpXCJcbiAgICAgICAgLy8gYXMgdGhlIHNlY29uZCBjaGFyYWN0ZXIgd2lsbCBoYXBwZW4gbGVzcyBvZnRlbiB0aGFuXG4gICAgICAgIC8vIGhhdmluZyBcIkBcIiBhcyB0aGUgZmlyc3QgY2hhcmFjdGVyXG4gICAgICAgIHZhciBpc0ltcG9ydFJ1bGUgPSBydWxlLmNoYXJDb2RlQXQoMSkgPT09IDEwNSAmJiBydWxlLmNoYXJDb2RlQXQoMCkgPT09IDY0OyAvLyB0aGlzIGlzIHRoZSB1bHRyYWZhc3QgdmVyc2lvbiwgd29ya3MgYWNyb3NzIGJyb3dzZXJzXG4gICAgICAgIC8vIHRoZSBiaWcgZHJhd2JhY2sgaXMgdGhhdCB0aGUgY3NzIHdvbid0IGJlIGVkaXRhYmxlIGluIGRldnRvb2xzXG5cbiAgICAgICAgc2hlZXQuaW5zZXJ0UnVsZShydWxlLCAvLyB3ZSBuZWVkIHRvIGluc2VydCBAaW1wb3J0IHJ1bGVzIGJlZm9yZSBhbnl0aGluZyBlbHNlXG4gICAgICAgIC8vIG90aGVyd2lzZSB0aGVyZSB3aWxsIGJlIGFuIGVycm9yXG4gICAgICAgIC8vIHRlY2huaWNhbGx5IHRoaXMgbWVhbnMgdGhhdCB0aGUgQGltcG9ydCBydWxlcyB3aWxsXG4gICAgICAgIC8vIF91c3VhbGx5Xyhub3QgYWx3YXlzIHNpbmNlIHRoZXJlIGNvdWxkIGJlIG11bHRpcGxlIHN0eWxlIHRhZ3MpXG4gICAgICAgIC8vIGJlIHRoZSBmaXJzdCBvbmVzIGluIHByb2QgYW5kIGdlbmVyYWxseSBsYXRlciBpbiBkZXZcbiAgICAgICAgLy8gdGhpcyBzaG91bGRuJ3QgcmVhbGx5IG1hdHRlciBpbiB0aGUgcmVhbCB3b3JsZCB0aG91Z2hcbiAgICAgICAgLy8gQGltcG9ydCBpcyBnZW5lcmFsbHkgb25seSB1c2VkIGZvciBmb250IGZhY2VzIGZyb20gZ29vZ2xlIGZvbnRzIGFuZCBldGMuXG4gICAgICAgIC8vIHNvIHdoaWxlIHRoaXMgY291bGQgYmUgdGVjaG5pY2FsbHkgY29ycmVjdCB0aGVuIGl0IHdvdWxkIGJlIHNsb3dlciBhbmQgbGFyZ2VyXG4gICAgICAgIC8vIGZvciBhIHRpbnkgYml0IG9mIGNvcnJlY3RuZXNzIHRoYXQgd29uJ3QgbWF0dGVyIGluIHRoZSByZWFsIHdvcmxkXG4gICAgICAgIGlzSW1wb3J0UnVsZSA/IDAgOiBzaGVldC5jc3NSdWxlcy5sZW5ndGgpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcIlRoZXJlIHdhcyBhIHByb2JsZW0gaW5zZXJ0aW5nIHRoZSBmb2xsb3dpbmcgcnVsZTogXFxcIlwiICsgcnVsZSArIFwiXFxcIlwiLCBlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0YWcuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocnVsZSkpO1xuICAgIH1cblxuICAgIHRoaXMuY3RyKys7XG4gIH07XG5cbiAgX3Byb3RvLmZsdXNoID0gZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHRoaXMudGFncy5mb3JFYWNoKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgIHJldHVybiB0YWcucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0YWcpO1xuICAgIH0pO1xuICAgIHRoaXMudGFncyA9IFtdO1xuICAgIHRoaXMuY3RyID0gMDtcbiAgfTtcblxuICByZXR1cm4gU3R5bGVTaGVldDtcbn0oKTtcblxuZXhwb3J0IHsgU3R5bGVTaGVldCB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/sheet/dist/sheet.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/stylis/dist/stylis.browser.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@emotion/stylis/dist/stylis.browser.esm.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stylis_min);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/stylis/dist/stylis.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/utils/dist/utils.browser.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@emotion/utils/dist/utils.browser.esm.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRegisteredStyles: () => (/* binding */ getRegisteredStyles),\n/* harmony export */   insertStyles: () => (/* binding */ insertStyles)\n/* harmony export */ });\nvar isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi91dGlscy9kaXN0L3V0aWxzLmJyb3dzZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUU2QyIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvendlYmthcHVua2Evbm9kZV9tb2R1bGVzL0BlbW90aW9uL3V0aWxzL2Rpc3QvdXRpbHMuYnJvd3Nlci5lc20uanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzQnJvd3NlciA9IFwib2JqZWN0XCIgIT09ICd1bmRlZmluZWQnO1xuZnVuY3Rpb24gZ2V0UmVnaXN0ZXJlZFN0eWxlcyhyZWdpc3RlcmVkLCByZWdpc3RlcmVkU3R5bGVzLCBjbGFzc05hbWVzKSB7XG4gIHZhciByYXdDbGFzc05hbWUgPSAnJztcbiAgY2xhc3NOYW1lcy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGlmIChyZWdpc3RlcmVkW2NsYXNzTmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmVnaXN0ZXJlZFN0eWxlcy5wdXNoKHJlZ2lzdGVyZWRbY2xhc3NOYW1lXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJhd0NsYXNzTmFtZSArPSBjbGFzc05hbWUgKyBcIiBcIjtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcmF3Q2xhc3NOYW1lO1xufVxudmFyIGluc2VydFN0eWxlcyA9IGZ1bmN0aW9uIGluc2VydFN0eWxlcyhjYWNoZSwgc2VyaWFsaXplZCwgaXNTdHJpbmdUYWcpIHtcbiAgdmFyIGNsYXNzTmFtZSA9IGNhY2hlLmtleSArIFwiLVwiICsgc2VyaWFsaXplZC5uYW1lO1xuXG4gIGlmICggLy8gd2Ugb25seSBuZWVkIHRvIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSByZWdpc3RlcmVkIGNhY2hlIGlmIHRoZVxuICAvLyBjbGFzcyBuYW1lIGNvdWxkIGJlIHVzZWQgZnVydGhlciBkb3duXG4gIC8vIHRoZSB0cmVlIGJ1dCBpZiBpdCdzIGEgc3RyaW5nIHRhZywgd2Uga25vdyBpdCB3b24ndFxuICAvLyBzbyB3ZSBkb24ndCBoYXZlIHRvIGFkZCBpdCB0byByZWdpc3RlcmVkIGNhY2hlLlxuICAvLyB0aGlzIGltcHJvdmVzIG1lbW9yeSB1c2FnZSBzaW5jZSB3ZSBjYW4gYXZvaWQgc3RvcmluZyB0aGUgd2hvbGUgc3R5bGUgc3RyaW5nXG4gIChpc1N0cmluZ1RhZyA9PT0gZmFsc2UgfHwgLy8gd2UgbmVlZCB0byBhbHdheXMgc3RvcmUgaXQgaWYgd2UncmUgaW4gY29tcGF0IG1vZGUgYW5kXG4gIC8vIGluIG5vZGUgc2luY2UgZW1vdGlvbi1zZXJ2ZXIgcmVsaWVzIG9uIHdoZXRoZXIgYSBzdHlsZSBpcyBpblxuICAvLyB0aGUgcmVnaXN0ZXJlZCBjYWNoZSB0byBrbm93IHdoZXRoZXIgYSBzdHlsZSBpcyBnbG9iYWwgb3Igbm90XG4gIC8vIGFsc28sIG5vdGUgdGhhdCB0aGlzIGNoZWNrIHdpbGwgYmUgZGVhZCBjb2RlIGVsaW1pbmF0ZWQgaW4gdGhlIGJyb3dzZXJcbiAgaXNCcm93c2VyID09PSBmYWxzZSAmJiBjYWNoZS5jb21wYXQgIT09IHVuZGVmaW5lZCkgJiYgY2FjaGUucmVnaXN0ZXJlZFtjbGFzc05hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICBjYWNoZS5yZWdpc3RlcmVkW2NsYXNzTmFtZV0gPSBzZXJpYWxpemVkLnN0eWxlcztcbiAgfVxuXG4gIGlmIChjYWNoZS5pbnNlcnRlZFtzZXJpYWxpemVkLm5hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgY3VycmVudCA9IHNlcmlhbGl6ZWQ7XG5cbiAgICBkbyB7XG4gICAgICB2YXIgbWF5YmVTdHlsZXMgPSBjYWNoZS5pbnNlcnQoXCIuXCIgKyBjbGFzc05hbWUsIGN1cnJlbnQsIGNhY2hlLnNoZWV0LCB0cnVlKTtcblxuICAgICAgY3VycmVudCA9IGN1cnJlbnQubmV4dDtcbiAgICB9IHdoaWxlIChjdXJyZW50ICE9PSB1bmRlZmluZWQpO1xuICB9XG59O1xuXG5leHBvcnQgeyBnZXRSZWdpc3RlcmVkU3R5bGVzLCBpbnNlcnRTdHlsZXMgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/utils/dist/utils.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar weakMemoize = function weakMemoize(func) {\n  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      // $FlowFixMe\n      return cache.get(arg);\n    }\n\n    var ret = func(arg);\n    cache.set(arg, ret);\n    return ret;\n  };\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (weakMemoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi93ZWFrLW1lbW9pemUvZGlzdC93ZWFrLW1lbW9pemUuYnJvd3Nlci5lc20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxXQUFXLEVBQUMiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3p3ZWJrYXB1bmthL25vZGVfbW9kdWxlcy9AZW1vdGlvbi93ZWFrLW1lbW9pemUvZGlzdC93ZWFrLW1lbW9pemUuYnJvd3Nlci5lc20uanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHdlYWtNZW1vaXplID0gZnVuY3Rpb24gd2Vha01lbW9pemUoZnVuYykge1xuICAvLyAkRmxvd0ZpeE1lIGZsb3cgZG9lc24ndCBpbmNsdWRlIGFsbCBub24tcHJpbWl0aXZlIHR5cGVzIGFzIGFsbG93ZWQgZm9yIHdlYWttYXBzXG4gIHZhciBjYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgaWYgKGNhY2hlLmhhcyhhcmcpKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICByZXR1cm4gY2FjaGUuZ2V0KGFyZyk7XG4gICAgfVxuXG4gICAgdmFyIHJldCA9IGZ1bmMoYXJnKTtcbiAgICBjYWNoZS5zZXQoYXJnLCByZXQpO1xuICAgIHJldHVybiByZXQ7XG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB3ZWFrTWVtb2l6ZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/weak-memoize/dist/weak-memoize.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/hash-sum/hash-sum.js":
/*!*******************************************!*\
  !*** ./node_modules/hash-sum/hash-sum.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nfunction pad (hash, len) {\n  while (hash.length < len) {\n    hash = '0' + hash;\n  }\n  return hash;\n}\n\nfunction fold (hash, text) {\n  var i;\n  var chr;\n  var len;\n  if (text.length === 0) {\n    return hash;\n  }\n  for (i = 0, len = text.length; i < len; i++) {\n    chr = text.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash < 0 ? hash * -2 : hash;\n}\n\nfunction foldObject (hash, o, seen) {\n  return Object.keys(o).sort().reduce(foldKey, hash);\n  function foldKey (hash, key) {\n    return foldValue(hash, o[key], key, seen);\n  }\n}\n\nfunction foldValue (input, value, key, seen) {\n  var hash = fold(fold(fold(input, key), toString(value)), typeof value);\n  if (value === null) {\n    return fold(hash, 'null');\n  }\n  if (value === undefined) {\n    return fold(hash, 'undefined');\n  }\n  if (typeof value === 'object' || typeof value === 'function') {\n    if (seen.indexOf(value) !== -1) {\n      return fold(hash, '[Circular]' + key);\n    }\n    seen.push(value);\n\n    var objHash = foldObject(hash, value, seen)\n\n    if (!('valueOf' in value) || typeof value.valueOf !== 'function') {\n      return objHash;\n    }\n\n    try {\n      return fold(objHash, String(value.valueOf()))\n    } catch (err) {\n      return fold(objHash, '[valueOf exception]' + (err.stack || err.message))\n    }\n  }\n  return fold(hash, value.toString());\n}\n\nfunction toString (o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction sum (o) {\n  return pad(foldValue(0, o, '', []).toString(16), 8);\n}\n\nmodule.exports = sum;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9oYXNoLXN1bS9oYXNoLXN1bS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsU0FBUztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvendlYmthcHVua2Evbm9kZV9tb2R1bGVzL2hhc2gtc3VtL2hhc2gtc3VtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gcGFkIChoYXNoLCBsZW4pIHtcbiAgd2hpbGUgKGhhc2gubGVuZ3RoIDwgbGVuKSB7XG4gICAgaGFzaCA9ICcwJyArIGhhc2g7XG4gIH1cbiAgcmV0dXJuIGhhc2g7XG59XG5cbmZ1bmN0aW9uIGZvbGQgKGhhc2gsIHRleHQpIHtcbiAgdmFyIGk7XG4gIHZhciBjaHI7XG4gIHZhciBsZW47XG4gIGlmICh0ZXh0Lmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBoYXNoO1xuICB9XG4gIGZvciAoaSA9IDAsIGxlbiA9IHRleHQubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBjaHIgPSB0ZXh0LmNoYXJDb2RlQXQoaSk7XG4gICAgaGFzaCA9ICgoaGFzaCA8PCA1KSAtIGhhc2gpICsgY2hyO1xuICAgIGhhc2ggfD0gMDtcbiAgfVxuICByZXR1cm4gaGFzaCA8IDAgPyBoYXNoICogLTIgOiBoYXNoO1xufVxuXG5mdW5jdGlvbiBmb2xkT2JqZWN0IChoYXNoLCBvLCBzZWVuKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvKS5zb3J0KCkucmVkdWNlKGZvbGRLZXksIGhhc2gpO1xuICBmdW5jdGlvbiBmb2xkS2V5IChoYXNoLCBrZXkpIHtcbiAgICByZXR1cm4gZm9sZFZhbHVlKGhhc2gsIG9ba2V5XSwga2V5LCBzZWVuKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBmb2xkVmFsdWUgKGlucHV0LCB2YWx1ZSwga2V5LCBzZWVuKSB7XG4gIHZhciBoYXNoID0gZm9sZChmb2xkKGZvbGQoaW5wdXQsIGtleSksIHRvU3RyaW5nKHZhbHVlKSksIHR5cGVvZiB2YWx1ZSk7XG4gIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmb2xkKGhhc2gsICdudWxsJyk7XG4gIH1cbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gZm9sZChoYXNoLCAndW5kZWZpbmVkJyk7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgaWYgKHNlZW4uaW5kZXhPZih2YWx1ZSkgIT09IC0xKSB7XG4gICAgICByZXR1cm4gZm9sZChoYXNoLCAnW0NpcmN1bGFyXScgKyBrZXkpO1xuICAgIH1cbiAgICBzZWVuLnB1c2godmFsdWUpO1xuXG4gICAgdmFyIG9iakhhc2ggPSBmb2xkT2JqZWN0KGhhc2gsIHZhbHVlLCBzZWVuKVxuXG4gICAgaWYgKCEoJ3ZhbHVlT2YnIGluIHZhbHVlKSB8fCB0eXBlb2YgdmFsdWUudmFsdWVPZiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIG9iakhhc2g7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBmb2xkKG9iakhhc2gsIFN0cmluZyh2YWx1ZS52YWx1ZU9mKCkpKVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIGZvbGQob2JqSGFzaCwgJ1t2YWx1ZU9mIGV4Y2VwdGlvbl0nICsgKGVyci5zdGFjayB8fCBlcnIubWVzc2FnZSkpXG4gICAgfVxuICB9XG4gIHJldHVybiBmb2xkKGhhc2gsIHZhbHVlLnRvU3RyaW5nKCkpO1xufVxuXG5mdW5jdGlvbiB0b1N0cmluZyAobykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pO1xufVxuXG5mdW5jdGlvbiBzdW0gKG8pIHtcbiAgcmV0dXJuIHBhZChmb2xkVmFsdWUoMCwgbywgJycsIFtdKS50b1N0cmluZygxNiksIDgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN1bTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/hash-sum/hash-sum.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fworkspaces%2Fzwebkapunka%2Fsrc%2Fcomponents%2Fbuilder%2FBuilderPage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fworkspaces%2Fzwebkapunka%2Fsrc%2Fcomponents%2Fbuilder%2FBuilderPage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false! ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/builder/BuilderPage.tsx */ \"(app-pages-browser)/./src/components/builder/BuilderPage.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGd29ya3NwYWNlcyUyRnp3ZWJrYXB1bmthJTJGc3JjJTJGY29tcG9uZW50cyUyRmJ1aWxkZXIlMkZCdWlsZGVyUGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJkZWZhdWx0JTIyJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsME1BQWdJIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJkZWZhdWx0XCJdICovIFwiL3dvcmtzcGFjZXMvendlYmthcHVua2Evc3JjL2NvbXBvbmVudHMvYnVpbGRlci9CdWlsZGVyUGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fworkspaces%2Fzwebkapunka%2Fsrc%2Fcomponents%2Fbuilder%2FBuilderPage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      \"react-stack-bottom-frame\": function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React[\"react-stack-bottom-frame\"].bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3p3ZWJrYXB1bmthL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/node-fetch/browser.js":
/*!********************************************!*\
  !*** ./node_modules/node-fetch/browser.js ***!
  \********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof __webpack_require__.g !== 'undefined') { return __webpack_require__.g; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports[\"default\"] = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9ub2RlLWZldGNoL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyxzQ0FBc0M7QUFDdEMsWUFBWSxxQkFBTSxvQkFBb0IsT0FBTyxxQkFBTTtBQUNuRDtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxDQUFDLGtCQUFlO0FBQ2hCOztBQUVBLGVBQWU7QUFDZixlQUFlO0FBQ2YsZ0JBQWdCIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy96d2Via2FwdW5rYS9ub2RlX21vZHVsZXMvbm9kZS1mZXRjaC9icm93c2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWdsb2JhbFxudmFyIGdldEdsb2JhbCA9IGZ1bmN0aW9uICgpIHtcblx0Ly8gdGhlIG9ubHkgcmVsaWFibGUgbWVhbnMgdG8gZ2V0IHRoZSBnbG9iYWwgb2JqZWN0IGlzXG5cdC8vIGBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpYFxuXHQvLyBIb3dldmVyLCB0aGlzIGNhdXNlcyBDU1AgdmlvbGF0aW9ucyBpbiBDaHJvbWUgYXBwcy5cblx0aWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykgeyByZXR1cm4gc2VsZjsgfVxuXHRpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHsgcmV0dXJuIHdpbmRvdzsgfVxuXHRpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHsgcmV0dXJuIGdsb2JhbDsgfVxuXHR0aHJvdyBuZXcgRXJyb3IoJ3VuYWJsZSB0byBsb2NhdGUgZ2xvYmFsIG9iamVjdCcpO1xufVxuXG52YXIgZ2xvYmFsT2JqZWN0ID0gZ2V0R2xvYmFsKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cyA9IGdsb2JhbE9iamVjdC5mZXRjaDtcblxuLy8gTmVlZGVkIGZvciBUeXBlU2NyaXB0IGFuZCBXZWJwYWNrLlxuaWYgKGdsb2JhbE9iamVjdC5mZXRjaCkge1xuXHRleHBvcnRzLmRlZmF1bHQgPSBnbG9iYWxPYmplY3QuZmV0Y2guYmluZChnbG9iYWxPYmplY3QpO1xufVxuXG5leHBvcnRzLkhlYWRlcnMgPSBnbG9iYWxPYmplY3QuSGVhZGVycztcbmV4cG9ydHMuUmVxdWVzdCA9IGdsb2JhbE9iamVjdC5SZXF1ZXN0O1xuZXhwb3J0cy5SZXNwb25zZSA9IGdsb2JhbE9iamVjdC5SZXNwb25zZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/node-fetch/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/builder/BuilderPage.tsx":
/*!************************************************!*\
  !*** ./src/components/builder/BuilderPage.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BuilderPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _builder_io_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @builder.io/react */ \"(app-pages-browser)/./node_modules/@builder.io/react/dist/builder-react.es5.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n// Initialize Builder with environment variable\n_builder_io_react__WEBPACK_IMPORTED_MODULE_2__.builder.init(\"4ab809fbb7674862921fca67760fb06d\" || 0);\nfunction BuilderPage(param) {\n    let { model = 'page', content } = param;\n    _s();\n    const [pageContent, setPageContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(content);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!content);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BuilderPage.useEffect\": ()=>{\n            if (content) {\n                setPageContent(content);\n                setLoading(false);\n                return;\n            }\n            const fetchContent = {\n                \"BuilderPage.useEffect.fetchContent\": async ()=>{\n                    try {\n                        const result = await _builder_io_react__WEBPACK_IMPORTED_MODULE_2__.builder.get(model, {\n                            url: window.location.pathname\n                        }).toPromise();\n                        setPageContent(result);\n                    } catch (error) {\n                        console.error('Error fetching Builder content:', error);\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"BuilderPage.useEffect.fetchContent\"];\n            fetchContent();\n        }\n    }[\"BuilderPage.useEffect\"], [\n        model,\n        content\n    ]);\n    if (loading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen flex items-center justify-center\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900 mx-auto mb-4\"\n                    }, void 0, false, {\n                        fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                        lineNumber: 47,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-gray-600\",\n                        children: \"Loading content...\"\n                    }, void 0, false, {\n                        fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                        lineNumber: 48,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                lineNumber: 46,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n            lineNumber: 45,\n            columnNumber: 7\n        }, this);\n    }\n    if (!pageContent) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen flex items-center justify-center px-6\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center max-w-2xl\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-5xl font-light mb-4\",\n                        children: \"Kapunka\"\n                    }, void 0, false, {\n                        fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                        lineNumber: 58,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-xl text-gray-600 mb-8\",\n                        children: \"Quiet strength. Pure care.\"\n                    }, void 0, false, {\n                        fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                        lineNumber: 59,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-gray-100 p-8 rounded-lg\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-2xl font-light mb-4\",\n                                children: \"Welcome to Your Visual Editor\"\n                            }, void 0, false, {\n                                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                lineNumber: 61,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-gray-600 mb-6\",\n                                children: \"This page is ready for visual editing. Create content in Builder.io to see it appear here.\"\n                            }, void 0, false, {\n                                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                lineNumber: 62,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-4 text-left\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-3\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm\",\n                                                children: \"✓\"\n                                            }, void 0, false, {\n                                                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                                lineNumber: 67,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"Visual drag-and-drop interface ready\"\n                                            }, void 0, false, {\n                                                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                                lineNumber: 68,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                        lineNumber: 66,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-3\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm\",\n                                                children: \"✓\"\n                                            }, void 0, false, {\n                                                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                                lineNumber: 71,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"Real-time editing enabled\"\n                                            }, void 0, false, {\n                                                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                                lineNumber: 72,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                        lineNumber: 70,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-3\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm\",\n                                                children: \"✓\"\n                                            }, void 0, false, {\n                                                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                                lineNumber: 75,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"Git integration connected\"\n                                            }, void 0, false, {\n                                                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                                lineNumber: 76,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                        lineNumber: 74,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                                lineNumber: 65,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                        lineNumber: 60,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n                lineNumber: 57,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n            lineNumber: 56,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_builder_io_react__WEBPACK_IMPORTED_MODULE_2__.BuilderComponent, {\n        model: model,\n        content: pageContent\n    }, void 0, false, {\n        fileName: \"/workspaces/zwebkapunka/src/components/builder/BuilderPage.tsx\",\n        lineNumber: 85,\n        columnNumber: 10\n    }, this);\n}\n_s(BuilderPage, \"tXv2ePgOrlgV1nas2rK0qh0H4qs=\");\n_c = BuilderPage;\nvar _c;\n$RefreshReg$(_c, \"BuilderPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2J1aWxkZXIvQnVpbGRlclBhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFMkM7QUFDUztBQUNUO0FBRTNDLCtDQUErQztBQUMvQ0csc0RBQU9BLENBQUNDLElBQUksQ0FBQ0Msa0NBQXVDLElBQUksQ0FBVTtBQU9uRCxTQUFTRyxZQUFZLEtBQTZDO1FBQTdDLEVBQUVDLFFBQVEsTUFBTSxFQUFFQyxPQUFPLEVBQW9CLEdBQTdDOztJQUNsQyxNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR1osK0NBQVFBLENBQUNVO0lBQy9DLE1BQU0sQ0FBQ0csU0FBU0MsV0FBVyxHQUFHZCwrQ0FBUUEsQ0FBQyxDQUFDVTtJQUV4Q1QsZ0RBQVNBO2lDQUFDO1lBQ1IsSUFBSVMsU0FBUztnQkFDWEUsZUFBZUY7Z0JBQ2ZJLFdBQVc7Z0JBQ1g7WUFDRjtZQUVBLE1BQU1DO3NEQUFlO29CQUNuQixJQUFJO3dCQUNGLE1BQU1DLFNBQVMsTUFBTWIsc0RBQU9BLENBQUNjLEdBQUcsQ0FBQ1IsT0FBTzs0QkFDdENTLEtBQUtDLE9BQU9DLFFBQVEsQ0FBQ0MsUUFBUTt3QkFDL0IsR0FBR0MsU0FBUzt3QkFFWlYsZUFBZUk7b0JBQ2pCLEVBQUUsT0FBT08sT0FBTzt3QkFDZEMsUUFBUUQsS0FBSyxDQUFDLG1DQUFtQ0E7b0JBQ25ELFNBQVU7d0JBQ1JULFdBQVc7b0JBQ2I7Z0JBQ0Y7O1lBRUFDO1FBQ0Y7Z0NBQUc7UUFBQ047UUFBT0M7S0FBUTtJQUVuQixJQUFJRyxTQUFTO1FBQ1gscUJBQ0UsOERBQUNZO1lBQUlDLFdBQVU7c0JBQ2IsNEVBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0Q7d0JBQUlDLFdBQVU7Ozs7OztrQ0FDZiw4REFBQ0M7d0JBQUVELFdBQVU7a0NBQWdCOzs7Ozs7Ozs7Ozs7Ozs7OztJQUlyQztJQUVBLElBQUksQ0FBQ2YsYUFBYTtRQUNoQixxQkFDRSw4REFBQ2M7WUFBSUMsV0FBVTtzQkFDYiw0RUFBQ0Q7Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDRTt3QkFBR0YsV0FBVTtrQ0FBMkI7Ozs7OztrQ0FDekMsOERBQUNDO3dCQUFFRCxXQUFVO2tDQUE2Qjs7Ozs7O2tDQUMxQyw4REFBQ0Q7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDRztnQ0FBR0gsV0FBVTswQ0FBMkI7Ozs7OzswQ0FDekMsOERBQUNDO2dDQUFFRCxXQUFVOzBDQUFxQjs7Ozs7OzBDQUdsQyw4REFBQ0Q7Z0NBQUlDLFdBQVU7O2tEQUNiLDhEQUFDRDt3Q0FBSUMsV0FBVTs7MERBQ2IsOERBQUNEO2dEQUFJQyxXQUFVOzBEQUF1Rjs7Ozs7OzBEQUN0Ryw4REFBQ0k7MERBQUs7Ozs7Ozs7Ozs7OztrREFFUiw4REFBQ0w7d0NBQUlDLFdBQVU7OzBEQUNiLDhEQUFDRDtnREFBSUMsV0FBVTswREFBdUY7Ozs7OzswREFDdEcsOERBQUNJOzBEQUFLOzs7Ozs7Ozs7Ozs7a0RBRVIsOERBQUNMO3dDQUFJQyxXQUFVOzswREFDYiw4REFBQ0Q7Z0RBQUlDLFdBQVU7MERBQXVGOzs7Ozs7MERBQ3RHLDhEQUFDSTswREFBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFPcEI7SUFFQSxxQkFBTyw4REFBQzVCLCtEQUFnQkE7UUFBQ08sT0FBT0E7UUFBT0MsU0FBU0M7Ozs7OztBQUNsRDtHQXZFd0JIO0tBQUFBIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy96d2Via2FwdW5rYS9zcmMvY29tcG9uZW50cy9idWlsZGVyL0J1aWxkZXJQYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQnVpbGRlckNvbXBvbmVudCB9IGZyb20gJ0BidWlsZGVyLmlvL3JlYWN0J1xuaW1wb3J0IHsgYnVpbGRlciB9IGZyb20gJ0BidWlsZGVyLmlvL3JlYWN0J1xuXG4vLyBJbml0aWFsaXplIEJ1aWxkZXIgd2l0aCBlbnZpcm9ubWVudCB2YXJpYWJsZVxuYnVpbGRlci5pbml0KHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0JVSUxERVJfQVBJX0tFWSB8fCAnZGVtby1rZXknKVxuXG5pbnRlcmZhY2UgQnVpbGRlclBhZ2VQcm9wcyB7XG4gIG1vZGVsPzogc3RyaW5nXG4gIGNvbnRlbnQ/OiBhbnlcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQnVpbGRlclBhZ2UoeyBtb2RlbCA9ICdwYWdlJywgY29udGVudCB9OiBCdWlsZGVyUGFnZVByb3BzKSB7XG4gIGNvbnN0IFtwYWdlQ29udGVudCwgc2V0UGFnZUNvbnRlbnRdID0gdXNlU3RhdGUoY29udGVudClcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUoIWNvbnRlbnQpXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoY29udGVudCkge1xuICAgICAgc2V0UGFnZUNvbnRlbnQoY29udGVudClcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBmZXRjaENvbnRlbnQgPSBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBidWlsZGVyLmdldChtb2RlbCwge1xuICAgICAgICAgIHVybDogd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICB9KS50b1Byb21pc2UoKVxuICAgICAgICBcbiAgICAgICAgc2V0UGFnZUNvbnRlbnQocmVzdWx0KVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgQnVpbGRlciBjb250ZW50OicsIGVycm9yKVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgc2V0TG9hZGluZyhmYWxzZSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmZXRjaENvbnRlbnQoKVxuICB9LCBbbW9kZWwsIGNvbnRlbnRdKVxuXG4gIGlmIChsb2FkaW5nKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFuaW1hdGUtc3BpbiByb3VuZGVkLWZ1bGwgaC0xMiB3LTEyIGJvcmRlci1iLTIgYm9yZGVyLWdyYXktOTAwIG14LWF1dG8gbWItNFwiPjwvZGl2PlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtZ3JheS02MDBcIj5Mb2FkaW5nIGNvbnRlbnQuLi48L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgaWYgKCFwYWdlQ29udGVudCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBweC02XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIgbWF4LXctMnhsXCI+XG4gICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtNXhsIGZvbnQtbGlnaHQgbWItNFwiPkthcHVua2E8L2gxPlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQteGwgdGV4dC1ncmF5LTYwMCBtYi04XCI+UXVpZXQgc3RyZW5ndGguIFB1cmUgY2FyZS48L3A+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy1ncmF5LTEwMCBwLTggcm91bmRlZC1sZ1wiPlxuICAgICAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtbGlnaHQgbWItNFwiPldlbGNvbWUgdG8gWW91ciBWaXN1YWwgRWRpdG9yPC9oMj5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtZ3JheS02MDAgbWItNlwiPlxuICAgICAgICAgICAgICBUaGlzIHBhZ2UgaXMgcmVhZHkgZm9yIHZpc3VhbCBlZGl0aW5nLiBDcmVhdGUgY29udGVudCBpbiBCdWlsZGVyLmlvIHRvIHNlZSBpdCBhcHBlYXIgaGVyZS5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS00IHRleHQtbGVmdFwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtM1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy02IGgtNiBiZy1ibHVlLTUwMCByb3VuZGVkLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC13aGl0ZSB0ZXh0LXNtXCI+4pyTPC9kaXY+XG4gICAgICAgICAgICAgICAgPHNwYW4+VmlzdWFsIGRyYWctYW5kLWRyb3AgaW50ZXJmYWNlIHJlYWR5PC9zcGFuPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTNcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctNiBoLTYgYmctYmx1ZS01MDAgcm91bmRlZC1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtd2hpdGUgdGV4dC1zbVwiPuKckzwvZGl2PlxuICAgICAgICAgICAgICAgIDxzcGFuPlJlYWwtdGltZSBlZGl0aW5nIGVuYWJsZWQ8L3NwYW4+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtM1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy02IGgtNiBiZy1ibHVlLTUwMCByb3VuZGVkLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC13aGl0ZSB0ZXh0LXNtXCI+4pyTPC9kaXY+XG4gICAgICAgICAgICAgICAgPHNwYW4+R2l0IGludGVncmF0aW9uIGNvbm5lY3RlZDwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cblxuICByZXR1cm4gPEJ1aWxkZXJDb21wb25lbnQgbW9kZWw9e21vZGVsfSBjb250ZW50PXtwYWdlQ29udGVudH0gLz5cbn1cbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJ1aWxkZXJDb21wb25lbnQiLCJidWlsZGVyIiwiaW5pdCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19CVUlMREVSX0FQSV9LRVkiLCJCdWlsZGVyUGFnZSIsIm1vZGVsIiwiY29udGVudCIsInBhZ2VDb250ZW50Iiwic2V0UGFnZUNvbnRlbnQiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImZldGNoQ29udGVudCIsInJlc3VsdCIsImdldCIsInVybCIsIndpbmRvdyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJ0b1Byb21pc2UiLCJlcnJvciIsImNvbnNvbGUiLCJkaXYiLCJjbGFzc05hbWUiLCJwIiwiaDEiLCJoMiIsInNwYW4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/builder/BuilderPage.tsx\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fworkspaces%2Fzwebkapunka%2Fsrc%2Fcomponents%2Fbuilder%2FBuilderPage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);